
			    Symbol Table Information
     No Variables in Common:



Subprogram: CREATE.NEW.I1.ARRAY

	       120d,187,190

  NAME				  CLASS		      TYPE	  OFFSET

ELE%				 parameter	     integer*4 	 00000000h
	       120d,122d,133
TEMP%				 simple variable     integer*4 	 00000050h
	       123d,136,141
POKE.ADR%			 simple variable     integer*4 	 00000054h
	       124d,136m,137,138,139,140


Function: I1.LIST.DIM returns integer*1 

	       155d,192m

  NAME				  CLASS		      TYPE	  OFFSET

NEW.ELEMENTS%			 parameter	     integer*4 	 00000000h
	       155d,159d,183,186,188m,188,190
A%				 simple variable     integer*4 	 00000058h
	       158d,168,169
ARRAY%				 simple variable     integer*4 	 0000005ch
	       160d,169m,170,172
PEEK.ADR%			 simple variable     integer*4 	 00000060h
	       161d,172m,173,174,175,176
@LSTEP				 simple variable     integer*4 	 fffffffbh


Subprogram: I1.LIST.SET

	       204d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       204d,208d,212,220
DATA%				 parameter	     integer*1 	 00000004h
	       204d,209d,220
PEEK.ADR%			 simple variable     integer*4 	 00000064h
	       206d,213m,214,215,216,217
ARRAY%				 simple variable     integer*4 	 00000068h
	       207d,212m,213


Subprogram: I1.LIST.GET

	       232d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       232d,236d,240,248
RETURNED.DATA%			 parameter	     integer*1 	 00000004h
	       232d,237d,248m
PEEK.ADR%			 simple variable     integer*4 	 0000006ch
	       234d,241m,242,243,244,245
ARRAY%				 simple variable     integer*4 	 00000070h
	       235d,240m,241


Subprogram: CREATE.NEW.I2.ARRAY

	       277d,344,347

  NAME				  CLASS		      TYPE	  OFFSET

ELE%				 parameter	     integer*4 	 00000000h
	       277d,279d,290
TEMP%				 simple variable     integer*4 	 00000074h
	       280d,293,298
POKE.ADR%			 simple variable     integer*4 	 00000078h
	       281d,293m,294,295,296,297


Function: I2.LIST.DIM returns integer*2 

	       312d,349m

  NAME				  CLASS		      TYPE	  OFFSET

NEW.ELEMENTS%			 parameter	     integer*4 	 00000000h
	       312d,316d,340,343,345m,345,347
A%				 simple variable     integer*4 	 0000007ch
	       315d,325,326
ARRAY%				 simple variable     integer*4 	 00000080h
	       317d,326m,327,329
PEEK.ADR%			 simple variable     integer*4 	 00000084h
	       318d,329m,330,331,332,333


Subprogram: I2.LIST.SET

	       361d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       361d,365d,369,377
DATA%				 parameter	     integer*2 	 00000004h
	       361d,366d,377
PEEK.ADR%			 simple variable     integer*4 	 00000088h
	       363d,370m,371,372,373,374
ARRAY%				 simple variable     integer*4 	 0000008ch
	       364d,369m,370


Subprogram: I2.LIST.GET

	       389d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       389d,393d,397,405
RETURNED.DATA%			 parameter	     integer*2 	 00000004h
	       389d,394d,405m
PEEK.ADR%			 simple variable     integer*4 	 00000090h
	       391d,398m,399,400,401,402
ARRAY%				 simple variable     integer*4 	 00000094h
	       392d,397m,398


Subprogram: CREATE.NEW.I4.ARRAY

	       434d,501,504

  NAME				  CLASS		      TYPE	  OFFSET

ELE%				 parameter	     integer*4 	 00000000h
	       434d,436d,447
TEMP%				 simple variable     integer*4 	 00000098h
	       437d,450,455
POKE.ADR%			 simple variable     integer*4 	 0000009ch
	       438d,450m,451,452,453,454


Function: I4.LIST.DIM returns integer*4 

	       469d,506m

  NAME				  CLASS		      TYPE	  OFFSET

NEW.ELEMENTS%			 parameter	     integer*4 	 00000000h
	       469d,473d,497,500,502m,502,504
A%				 simple variable     integer*4 	 000000a0h
	       472d,482,483
ARRAY%				 simple variable     integer*4 	 000000a4h
	       474d,483m,484,486
PEEK.ADR%			 simple variable     integer*4 	 000000a8h
	       475d,486m,487,488,489,490


Subprogram: I4.LIST.SET

	       518d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       518d,522d,526,534
DATA%				 parameter	     integer*4 	 00000004h
	       518d,523d,534
PEEK.ADR%			 simple variable     integer*4 	 000000ach
	       520d,527m,528,529,530,531
ARRAY%				 simple variable     integer*4 	 000000b0h
	       521d,526m,527


Subprogram: I4.LIST.GET

	       546d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       546d,550d,554,562
RETURNED.DATA%			 parameter	     integer*4 	 00000004h
	       546d,551d,562m
PEEK.ADR%			 simple variable     integer*4 	 000000b4h
	       548d,555m,556,557,558,559
ARRAY%				 simple variable     integer*4 	 000000b8h
	       549d,554m,555


Subprogram: CREATE.NEW.ARRAY

	       576d,641,644

  NAME				  CLASS		      TYPE	  OFFSET

ELE%				 parameter	     integer*4 	 00000000h
	       576d,578d,589
TEMP%				 simple variable     integer*4 	 000000bch
	       579d,592,597
POKE.ADR%			 simple variable     integer*4 	 000000c0h
	       580d,592m,593,594,595,596


Function: LIST.DIM returns real

	       611d

  NAME				  CLASS		      TYPE	  OFFSET

NEW.ELEMENTS%			 parameter	     integer*4 	 00000000h
	       611d,614d,637,640,642m,642,644
A%				 simple variable     integer*4 	 000000c4h
	       613d,623,624
ARRAY%				 simple variable     integer*4 	 000000c8h
	       615d,624m,625,626
PEEK.ADR%			 simple variable     integer*4 	 000000cch
	       616d,626m,627,628,629,630


Subprogram: LIST.SET

	       656d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       656d,660d,664,672
DATA$				 parameter	     string	 00000004h
	       656d,661d,672
PEEK.ADR%			 simple variable     integer*4 	 000000d0h
	       658d,665m,666,667,668,669
ARRAY%				 simple variable     integer*4 	 000000d4h
	       659d,664m,665


Subprogram: LIST.GET

	       684d

  NAME				  CLASS		      TYPE	  OFFSET

ELEMENT%			 parameter	     integer*4 	 00000000h
	       684d,688d,692,700
RETURNED.DATA$			 parameter	     string	 00000004h
	       684d,689d,700m
PEEK.ADR%			 simple variable     integer*4 	 000000d8h
	       686d,693m,694,695,696,697
ARRAY%				 simple variable     integer*4 	 000000dch
	       687d,692m,693

Module-Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

TEMP$				 array(1)	     string	 00000000h
	       22d,589,619,631,672m,700
PTRS%				 array(1)	     integer*4 	 00000004h
	       23d,597m,624,637,664,692
CURRENT.PTRS%			 simple variable     integer*4 	 00000008h
	       24d,597,598m,598,623,636m
PTR.TO.TEMP%			 simple variable     integer*4 	 0000000ch
	       25d,583,584,585,586,593,594,595,596,619m,627,628,629,630,
	       666,667,668,669,694,695,696,697
ELEMENTS.PER.ARRAY%		 simple variable     integer*4 	 00000010h
	       26d,620m,637,640,641,642,664,672,692,700
I1.TEMP.ARRAY%			 array(1)	     integer*1 	 00000014h
	       43d,133,164,177,220m,248
I1.ARRAY.PTR.TABLE%		 array(1)	     integer*4 	 00000018h
	       44d,141m,169,183,212,240
CURRENT.I1.PTR.COUNT%		 simple variable     integer*4 	 0000001ch
	       45d,141,142m,142,168,182m
PTR.TO.I1.TEMP.ARRAY%		 simple variable     integer*4 	 00000020h
	       46d,127,128,129,130,137,138,139,140,164m,173,174,175,176,
	       214,215,216,217,242,243,244,245
I1.ELEMENTS.PER.ARRAY%		 simple variable     integer*4 	 00000024h
	       47d,165m,183,186,187,188,212,220,240,248
I2.TEMP.ARRAY%			 array(1)	     integer*2 	 00000028h
	       65d,290,321,334,377m,405
I2.ARRAY.PTR.TABLE%		 array(1)	     integer*4 	 0000002ch
	       66d,298m,326,340,369,397
CURRENT.I2.PTR.COUNT%		 simple variable     integer*4 	 00000030h
	       67d,298,299m,299,325,339m
PTR.TO.I2.TEMP.ARRAY%		 simple variable     integer*4 	 00000034h
	       68d,284,285,286,287,294,295,296,297,321m,330,331,332,333,
	       371,372,373,374,399,400,401,402
I2.ELEMENTS.PER.ARRAY%		 simple variable     integer*4 	 00000038h
	       69d,322m,340,343,344,345,369,377,397,405
I4.TEMP.ARRAY%			 array(1)	     integer*4 	 0000003ch
	       87d,447,478,491,534m,562
I4.ARRAY.PTR.TABLE%		 array(1)	     integer*4 	 00000040h
	       88d,455m,483,497,526,554
CURRENT.I4.PTR.COUNT%		 simple variable     integer*4 	 00000044h
	       89d,455,456m,456,482,496m
PTR.TO.I4.TEMP.ARRAY%		 simple variable     integer*4 	 00000048h
	       90d,441,442,443,444,451,452,453,454,478m,487,488,489,490,
	       528,529,530,531,556,557,558,559
I4.ELEMENTS.PER.ARRAY%		 simple variable     integer*4 	 0000004ch
	       91d,479m,497,500,501,502,526,534,554,562

