
			    Symbol Table Information
     No Variables in Common:


Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

CURRENT.CODE$			 simple variable     string	 00000000h
	       100d,949m,997m,1049m,1097m,1142m,1187m,1233m,1279m
FILLER$				 simple variable     string	 00000000h
	       101d,857,888m,930
FILE.OPERATION$			 simple variable     string	 00000000h
	       102d,948m,996m,1048m,1096m,1141m,1186m,1232m,1278m
CURRENT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       105d,947m,995m,1047m,1095m,1140m,1185m,1231m,1277m
IRF.ALT.FILE.NAME$		 simple variable     string	 00000000h
	       307d,617m
IRF.BAR.CODE$			 simple variable     string	 00000000h
	       308d,706,766m,883,967,997,1015,1049,1067,1097,1116,1142,1161,
	       1187,1207,1233,1253,1279
IRF.BOOTS.CODE$			 simple variable     string	 00000000h
	       309d,717,777m,815,819,883,892,935,949,978,1026,1078,1127,
	       1172,1218,1264
IRF.DEAL.SAVING$		 simple variable     string	 00000000h
	       310d
IRF.DEPARTME$			 simple variable     string	 00000000h
	       311d
IRF.FILE.NAME$			 simple variable     string	 00000000h
	       312d,616m
IRF.HOLDING.PRICE$		 simple variable     string	 00000000h
	       313d
IRF.ITEMNAME$			 simple variable     string	 00000000h
	       315d,716,776m,977,1025,1077,1126,1171,1217,1263
IRF.RECORD$			 simple variable     string	 00000000h
	       317d,989m,1041m,1089m
IRF.SALEPRIC$			 simple variable     string	 00000000h
	       318d,714,774m,975,1023,1075,1124,1169,1215,1261
IRF.SALEQUAN$			 simple variable     string	 00000000h
	       319d,658m
IRF.UNUSED$			 simple variable     string	 00000000h
	       320d
NEW.IRF.DATA$			 simple variable     string	 00000000h
	       321d,705m,733,734,735,746,766,767,768,770,772,773,774,775,
	       776,777,780,782,783,784,795
IRF.DEAL.NUM$			 array(1)	     string	 00000000h
	       324d,625,649m,679
IRF.DD.SUB%			 simple variable     integer*1 	 00000000h
	       327d,645m
IRF.INDICAT0%			 simple variable     integer*1 	 00000000h
	       328d,707,767m,968,1016,1068,1117,1162,1208,1254
IRF.INDICAT1%			 simple variable     integer*1 	 00000000h
	       329d,708,768m,969,1017,1069,1118,1163,1209,1255
IRF.INDICAT2%			 simple variable     integer*1 	 00000000h
	       330d,655m
IRF.INDICAT3%			 simple variable     integer*1 	 00000000h
	       331d,720,780m,981,1029,1081,1130,1175,1221,1267
IRF.INDICAT4%			 simple variable     integer*1 	 00000000h
	       332d,656m
IRF.INDICAT5%			 simple variable     integer*1 	 00000000h
	       333d,715,775m,976,1024,1076,1125,1170,1216,1262
IRF.INDICAT8%			 simple variable     integer*1 	 00000000h
	       334d,710,770m,971,1019,1071,1120,1165,1211,1257
IRF.INDICAT9%			 simple variable     integer*1 	 00000000h
	       335d,712,772m,973,1021,1073,1122,1167,1213,1259
IRF.INDICAT10%			 simple variable     integer*1 	 00000000h
	       336d,713,773m,974,1022,1074,1123,1168,1214,1260
IRF.LIST.ID%			 array(1)	     integer*1 	 00000000h
	       339d,626,651m,680,683
IRF.ALT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       342d,614m,1047
IRF.ALT.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       343d,1011,1014
IRF.POINTS%			 simple variable     integer*2 	 00000000h
	       344d,657m
IRF.RECL%			 simple variable     integer*2 	 00000000h
	       345d,615m
IRF.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       346d,613m,995,1095,1140,1185,1231,1277
IRF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       347d,963,966,1062,1065,1112,1115,1157,1160,1203,1206,1249,
	       1252
IRF.MAX.DEALS%			 simple variable     integer*2 	 00000000h
	       348d,623m,624,625,626,647,677,721,745,794,862
IRFDEX.FILE.NAME$		 simple variable     string	 00000000h
	       350d,621m
IRFDEX.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       352d,813,817,818,881,890,891,934,935
IRFDEX.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       353d,619m,947
IRFDEX.RECL%			 simple variable     integer*2 	 00000000h
	       354d,620m

Function: SUBSTR returns real

	       387d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       387d,388d
P2				 parameter	     integer*2 	 00000004h
	       387d,389d
P3$				 parameter	     string	 00000006h
	       387d,388d
P4				 parameter	     integer*2 	 0000000ah
	       387d,389d
P5				 parameter	     integer*2 	 0000000ch
	       387d,389d


Function: GETN2 returns integer*2 

	       403d,782,783,784,795

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       403d,405d
P2				 parameter	     integer*2 	 00000004h
	       403d,406d


Function: GETN4 returns integer*4 

	       409d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       409d,411d
P2				 parameter	     integer*2 	 00000004h
	       409d,412d


Function: PUTN2 returns real

	       426d,733,734,735,746

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       426d,427d
P2				 parameter	     integer*2 	 00000004h
	       426d,428d
P3				 parameter	     integer*2 	 00000006h
	       426d,428d


Function: PUTN4 returns real

	       431d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       431d,432d
P2				 parameter	     integer*2 	 00000004h
	       431d,433d
P3				 parameter	     integer*4 	 00000006h
	       431d,434d


Function: PACKBIN2 returns integer*2 

	       449d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       449d,451d
P2				 parameter	     integer*2 	 00000004h
	       449d,452d
P3				 parameter	     integer*2 	 00000006h
	       449d,452d


Function: PACKBIN4 returns integer*4 

	       455d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       455d,457d
P2				 parameter	     integer*2 	 00000004h
	       455d,458d
P3				 parameter	     integer*2 	 00000006h
	       455d,458d


Function: ADDIN4 returns integer*4 

	       473d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       473d,475d
P2				 parameter	     integer*2 	 00000004h
	       473d,476d
P3				 parameter	     integer*4 	 00000006h
	       473d,477d


Function: ADDIN2 returns integer*2 

	       480d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       480d,482d
P2				 parameter	     integer*2 	 00000004h
	       480d,483d
P3				 parameter	     integer*2 	 00000006h
	       480d,483d


Function: MATCHB returns integer*2 

	       497d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       497d,499d
P2$				 parameter	     string	 00000004h
	       497d,500d
P3				 parameter	     integer*2 	 00000008h
	       497d,501d


Subprogram: UPDBIN4

	       510d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       510d,511d
OUT$				 parameter	     string	 00000004h
	       510d,511d


Subprogram: UPDBIN3

	       520d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       520d,521d
OUT$				 parameter	     string	 00000004h
	       520d,521d


Subprogram: UPDBIN2

	       530d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       530d,531d
OUT$				 parameter	     string	 00000004h
	       530d,531d


Subprogram: UPDBIN1

	       540d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       540d,541d
OUT$				 parameter	     string	 00000004h
	       540d,541d


Subprogram: UPDHEX2

	       550d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       550d,551d
OUT$				 parameter	     string	 00000004h
	       550d,551d


Subprogram: UPDHEX1

	       560d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       560d,561d
OUT$				 parameter	     string	 00000004h
	       560d,561d


Subprogram: INTBIN2

	       574d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       574d,575d
IN%				 parameter	     integer*2 	 00000004h
	       574d,576d
OUT$				 parameter	     string	 00000008h
	       574d,575d
OUT%				 parameter	     integer*2 	 0000000ch
	       574d,576d


Subprogram: INTBIN3

	       589d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       589d,590d
IN%				 parameter	     integer*2 	 00000004h
	       589d,591d
OUT$				 parameter	     string	 00000008h
	       589d,590d
OUT%				 parameter	     integer*2 	 0000000ch
	       589d,591d


Subprogram: INTBIN4

	       604d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       604d,605d
IN%				 parameter	     integer*2 	 00000004h
	       604d,606d
OUT$				 parameter	     string	 00000008h
	       604d,605d
OUT%				 parameter	     integer*2 	 0000000ch
	       604d,606d


Function: IRF.SET returns real

	       611d

Function: IRF.SPLIT.RECORD returns real

	       643d,799,985,1037,1085

  NAME				  CLASS		      TYPE	  OFFSET

@ISTEP				 simple variable     integer*2 	 fffffffeh


Function: IRF.CONCAT.RECORD returns real

	       673d,730,1110,1155,1201,1247

  NAME				  CLASS		      TYPE	  OFFSET

DEAL.NUM%			 simple variable     integer*2 	 00000008h
	       675d,679m,681m,681,684m,684,686
@ISTEP				 simple variable     integer*2 	 fffffffeh


Function: CONCAT.NEW.IRF.DATA$ returns string

	       703d

  NAME				  CLASS		      TYPE	  OFFSET

@RDUMMY				 simple variable     real	 0000000ah
@ISTEP				 simple variable     integer*2 	 fffffffah


Function: SPLIT.NEW.IRF.DATA$ returns string

	       764d

  NAME				  CLASS		      TYPE	  OFFSET

@ISTEP				 simple variable     integer*2 	 fffffffah


Function: READ.IRFDEX returns integer*2 

	       807d,811m,868m,983,1031,1083

  NAME				  CLASS		      TYPE	  OFFSET

READ.IRFDEX.ERROR		 label		     
	       817,861d
@ISTEP				 simple variable     integer*2 	 fffffffch


Function: WRITE.IRFDEX returns integer*2 

	       875d,879m,943m,1132,1177,1223,1269

  NAME				  CLASS		      TYPE	  OFFSET

WRITE.IRFDEX.ERROR		 label		     
	       890,946d
NO.IRFDEX.RECORD		 label		     
	       934,936d


Function: READ.IRF returns integer*2 

	       957d,961m,987m

  NAME				  CLASS		      TYPE	  OFFSET

READ.IRF.ERROR			 label		     
	       963,993d


Function: READ.IRF.ALT returns integer*2 

	       1004d,1009m,1039m

  NAME				  CLASS		      TYPE	  OFFSET

I%				 simple variable     integer*2 	 00000000h
	       1006d
READ.IRF.ALT.ERROR		 label		     
	       1011,1045d


Function: READ.IRF.LOCK returns integer*2 

	       1056d,1060m,1087m

  NAME				  CLASS		      TYPE	  OFFSET

READ.IRF.LOCK.ERROR		 label		     
	       1062,1093d


Function: WRITE.IRF returns integer*2 

	       1104d,1108m,1134m

  NAME				  CLASS		      TYPE	  OFFSET

WRITE.IRF.ERROR			 label		     
	       1112,1138d


Function: WRITE.IRF.UNLOCK returns integer*2 

	       1149d,1153m,1179m

  NAME				  CLASS		      TYPE	  OFFSET

WRITE.IRF.UNLOCK.ERROR		 label		     
	       1157,1183d


Function: WRITE.IRF.HOLD returns integer*2 

	       1195d,1199m,1225m

  NAME				  CLASS		      TYPE	  OFFSET

WRITE.IRF.HOLD.ERROR		 label		     
	       1203,1229d


Function: WRITE.IRF.HOLD.UNLOCK returns integer*2 

	       1241d,1245m,1271m

  NAME				  CLASS		      TYPE	  OFFSET

WRITE.IRF.HOLD.UNLOCK.ERROR	 label		     
	       1249,1275d

Module-Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

I%				 simple variable     integer*2 	 00000000h
	       107d,647,649,650,651,651,677,679,680,683,686,745,746,794,
	       795,862,863
OFFSET%				 simple variable     integer*2 	 00000002h
	       108d,744m,746,747m,747,793m,795,796m,796
IRF.DEAL.DATA%			 array(1)	     integer*2 	 00000004h
	       110d,624,650,651,686m,733,734,735,746,782m,783m,784m,795m,
	       814,820,821,822,823,824,825,826,827,828,829,830,831,832,833,
	       834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,
	       849,850,851,852,853,854,855,856,863m,885,893,894,895,896,
	       897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,
	       912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,
	       927,928,929,970,979,980,1018,1027,1028,1070,1079,1080,1119,
	       1128,1129,1164,1173,1174,1210,1219,1220,1256,1265,1266

