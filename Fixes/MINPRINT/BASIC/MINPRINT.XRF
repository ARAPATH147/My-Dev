
			    Symbol Table Information
     No Variables in Common:


Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

RPRPT.SESS.NUM%			 simple variable     integer*1 	 00000000h
	       161d,2452m,2786,2787,2789,2791,2865,2950,3312
RPRPT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       164d,2449
RPRPT.FILE.NAME$		 simple variable     string	 00000000h
	       167d,2450,2789
PRINT.LINE$			 simple variable     string	 00000000h
	       198d
PRINT.FILE.NAME$		 simple variable     string	 00000000h
	       199d,2455
SELF.LAN.NAME$			 simple variable     string	 00000000h
	       200d
SELF.NOLAN.NAME$		 simple variable     string	 00000000h
	       201d
PRINT.CONDENSED.RECL%		 simple variable     integer*2 	 00000000h
	       204d
PRINT.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       205d,2457m,3316
PRINT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       206d,2454
PRINT.REPORT.RECL%		 simple variable     integer*2 	 00000000h
	       207d
PRINT.SELF.RECL%		 simple variable     integer*2 	 00000000h
	       208d
SOFTS.RECORD$			 simple variable     string	 00000000h
	       227d,2177,2636m
SOFTS.SPACE$			 simple variable     string	 00000000h
	       228d
SOFTS.FILE.NAME$		 simple variable     string	 00000000h
	       229d,2460,2620,2623
SOFTS.RECL%			 simple variable     integer*2 	 00000000h
	       232d,2620,2626,2634
SOFTS.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       233d,2459,2616
SOFTS.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       234d,2462m,2618,2619,2621,2643,3320
SOFTS.REC.NUM%			 simple variable     integer*4 	 00000000h
	       237d,2634m,2638,2639m
RFSCF.ACTIVE$			 simple variable     string	 00000000h
	       303d
RFSCF.BCENTRES$			 simple variable     string	 00000000h
	       304d
RFSCF.CCHIST.NUM.DAYS$		 simple variable     string	 00000000h
	       305d
RFSCF.FILE.NAME$		 simple variable     string	 00000000h
	       306d,2465,2995
RFSCF.FILLER$			 simple variable     string	 00000000h
	       307d
RFSCF.FILLER3$			 simple variable     string	 00000000h
	       308d
RFSCF.OSSRSTORE$		 simple variable     string	 00000000h
	       309d
RFSCF.PLANNERS.ACTIVE$		 simple variable     string	 00000000h
	       310d
RFSCF.PSP.LEAD.TIME$		 simple variable     string	 00000000h
	       311d
RFSCF.DIRECTS.ACTIVE$		 simple variable     string	 00000000h
	       312d
RFSCF.ASN.ACTIVE$		 simple variable     string	 00000000h
	       313d
RFSCF.POS.UOD.ACTIVE$		 simple variable     string	 00000000h
	       314d
RFSCF.ONIGHT.DELIV$		 simple variable     string	 00000000h
	       315d
RFSCF.ONIGHT.SCAN$		 simple variable     string	 00000000h
	       316d
RFSCF.SCAN.BATCH.SIZE$		 simple variable     string	 00000000h
	       317d
RFSCF.ACTIVITY%			 simple variable     integer*1 	 00000000h
	       320d
RFSCF.EMUACTIVE%		 simple variable     integer*1 	 00000000h
	       321d
RFSCF.PRIMCURR%			 simple variable     integer*1 	 00000000h
	       322d
RFSCF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       326d,2467m,2993,2994,2995,2999,3324,3602
RFSCF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       327d,2464
RFSCF.RECL%			 simple variable     integer*2 	 00000000h
	       328d,2995
RFSCF.PMEDTERM%			 simple variable     integer*2 	 00000000h
	       329d
RFSCF.QBUSTTERM%		 simple variable     integer*2 	 00000000h
	       330d
RFSCF.PMEDNEXTTXN%		 simple variable     integer*2 	 00000000h
	       331d
RFSCF.QBUSTNXTTXN%		 simple variable     integer*2 	 00000000h
	       332d
RFSCF.PCDATES%			 simple variable     integer*2 	 00000000h
	       333d
RFSCF.PCHKINC%			 simple variable     integer*2 	 00000000h
	       334d
RFSCF.HHTIPMIN%			 simple variable     integer*2 	 00000000h
	       335d
RFSCF.HHTIPMAX%			 simple variable     integer*2 	 00000000h
	       336d
RFSCF.RECOUNT.DAYS.RETAIN%	 simple variable     integer*2 	 00000000h
	       337d,2070,2892
RFSCF.REC.NUM%			 simple variable     integer*4 	 00000000h
	       340d
RFSCF.PMEDTXNCNT%		 simple variable     integer*4 	 00000000h
	       341d
RFSCF.PMEDQTY%			 simple variable     integer*4 	 00000000h
	       342d
RFSCF.QBUSTTXNCNT%		 simple variable     integer*4 	 00000000h
	       343d
RFSCF.QBUSTQTY%			 simple variable     integer*4 	 00000000h
	       344d
RFSCF.LDCPARM1%			 simple variable     integer*4 	 00000000h
	       345d
RFSCF.LDCPARM2%			 simple variable     integer*4 	 00000000h
	       346d
RFSCF.LDCPARM3%			 simple variable     integer*4 	 00000000h
	       347d
RFSCF.PCHKTARGET%		 simple variable     integer*4 	 00000000h
	       348d
RFSCF.CNTPCHK%			 simple variable     integer*4 	 00000000h
	       349d
RFSCF.PCHKUPPER%		 simple variable     integer*4 	 00000000h
	       350d
RFSCF.PCHKLOWER%		 simple variable     integer*4 	 00000000h
	       351d
RFSCF.PCHKDEFAULT%		 simple variable     integer*4 	 00000000h
	       352d
RFSCF.PCHKERRCNT%		 simple variable     integer*4 	 00000000h
	       353d
RFSCF.PCHKERRLST%		 simple variable     integer*4 	 00000000h
	       354d
RFSCF.EMUCNVFACT%		 simple variable     integer*4 	 00000000h
	       355d
CLOLF.ACTIVE.STATUS$		 simple variable     string	 00000000h
	       403d,2840m
CLOLF.BULETT$			 simple variable     string	 00000000h
	       404d,2837m
CLOLF.CREATION.DATE$		 simple variable     string	 00000000h
	       405d,3224m
CLOLF.CREATION.TIME$		 simple variable     string	 00000000h
	       406d,3225m
CLOLF.CURRENT.LOCATION$		 simple variable     string	 00000000h
	       407d,2845m
CLOLF.EXPIRY.DATE$		 simple variable     string	 00000000h
	       408d,2842m
CLOLF.FILE.NAME$		 simple variable     string	 00000000h
	       409d,2470,2759
CLOLF.LISTID$			 simple variable     string	 00000000h
	       410d,2834m,3053,3216,3237m,3237
CLOLF.LIST.NAME$		 simple variable     string	 00000000h
	       411d,2838m
CLOLF.LSTTYP$			 simple variable     string	 00000000h
	       412d,2836m
CLOLF.PICKER.USER.ID$		 simple variable     string	 00000000h
	       413d,2839m
CLOLF.PILST.ID$			 simple variable     string	 00000000h
	       414d,2841m
CLOLF.PICK.START.TIME$		 simple variable     string	 00000000h
	       415d,2843m
CLOLF.PICK.END.TIME$		 simple variable     string	 00000000h
	       416d,2844m
CLOLF.USERID$			 simple variable     string	 00000000h
	       417d,2835m
CLOLF.RECORD.NUM%		 simple variable     integer*4 	 00000000h
	       428d,2847m,3236m,3236
CLOLF.BSITEMS%			 simple variable     integer*2 	 00000000h
	       431d,3220m
CLOLF.OSSRITEMS%		 simple variable     integer*2 	 00000000h
	       432d,3221m
CLOLF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       433d,2469,3222
CLOLF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       434d,2472m,2757,2758,2760,2952,3328
CLOLF.SRITEMS%			 simple variable     integer*2 	 00000000h
	       435d,3219m
CLOLF.TOTAL.ITEMS%		 simple variable     integer*2 	 00000000h
	       436d,3218m,3219,3220,3221
CLOLF.RECL%			 simple variable     integer*1 	 00000000h
	       439d,2759
CLILF.BOOTSCODE$		 simple variable     string	 00000000h
	       481d,2884,3019m,3115m,3115,3148,3180
CLILF.COUNTED.STATUS$		 simple variable     string	 00000000h
	       482d,2850m
CLILF.DATE.LASTCNT$		 simple variable     string	 00000000h
	       484d,2851m
CLILF.FILE.NAME$		 simple variable     string	 00000000h
	       485d,2475,2752
CLILF.FILLER$			 array(1)	     string	 00000000h
	       486d,3142m
CLILF.HO.SEQNO$			 simple variable     string	 00000000h
	       487d,2849m
CLILF.ITEMSEQ$			 simple variable     string	 00000000h
	       489d,3054m
CLILF.KEY$			 simple variable     string	 00000000h
	       490d
CLILF.LISTID$			 simple variable     string	 00000000h
	       491d,3053m
CLILF.SPACE$			 simple variable     string	 00000000h
	       492d,2858m
CLILF.MODULE.ID%		 array(1)	     integer*4 	 00000000h
	       509d,3137m,3161m
CLILF.BSCNT%			 simple variable     integer*2 	 00000000h
	       512d,2853m
CLILF.BS.PEND.SA.CNT%		 simple variable     integer*2 	 00000000h
	       513d,2855m
CLILF.COUNT%			 array(1)	     integer*2 	 00000000h
	       514d,3140m
CLILF.FILL.QUANTITY%		 array(1)	     integer*2 	 00000000h
	       515d,3141m
CLILF.OSSR.ITMSTKCNT%		 simple variable     integer*2 	 00000000h
	       516d,2854m
CLILF.OSSR.PEND.SA.CNT%		 simple variable     integer*2 	 00000000h
	       517d,2856m
CLILF.RECL%			 simple variable     integer*2 	 00000000h
	       518d,2752
CLILF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       519d,2474,3116
CLILF.SALESCNT%			 simple variable     integer*2 	 00000000h
	       520d,2852m
CLILF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       521d,2477m,2750,2751,2753,2951,3332
CLILF.SFCNT%			 simple variable     integer*2 	 00000000h
	       522d,2857m
CLILF.MODULE.SEQ%		 array(1)	     integer*1 	 00000000h
	       525d,3138m,3162m
CLILF.REPEAT.CNT%		 array(1)	     integer*1 	 00000000h
	       526d,3139m,3163m
IDF.FILE.NAME$			 simple variable     string	 00000000h
	       556d,2491,2781
IDF.BOOTS.CODE$			 simple variable     string	 00000000h
	       557d,2074m,2904m
IDF.FIRST.BAR.CODE$		 simple variable     string	 00000000h
	       558d
IDF.SECOND.BAR.CODE$		 simple variable     string	 00000000h
	       559d
IDF.NO.OF.BAR.CODES$		 simple variable     string	 00000000h
	       560d
IDF.PRODUCT.GRP$		 simple variable     string	 00000000h
	       561d
IDF.STNDRD.DESC$		 simple variable     string	 00000000h
	       563d
IDF.STATUS.1$			 simple variable     string	 00000000h
	       564d
IDF.INTRO.DATE$			 simple variable     string	 00000000h
	       565d
IDF.BSNS.CNTR$			 simple variable     string	 00000000h
	       566d
IDF.FILLER$			 simple variable     string	 00000000h
	       567d
IDF.PARENT.CODE$		 simple variable     string	 00000000h
	       568d
IDF.DATE.OF.LAST.SALE$		 simple variable     string	 00000000h
	       571d
IDF.BIT.FLAGS.1%		 simple variable     integer*1 	 00000000h
	       574d
IDF.BIT.FLAGS.2%		 simple variable     integer*1 	 00000000h
	       583d,2078,2080m,2080,2908,2911m,2911
IDF.RECL%			 simple variable     integer*2 	 00000000h
	       594d,2781
IDF.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       595d,2490
IDF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       596d,2493m,2779,2780,2781,2955,3344
PGF.FILE.NAME$			 simple variable     string	 00000000h
	       669d,2496,2797
PGF.PROD.GRP.NAME$		 simple variable     string	 00000000h
	       670d
PGF.PROD.GRP.NO$		 simple variable     string	 00000000h
	       671d
PGF.SEL.FLAG$			 simple variable     string	 00000000h
	       672d
PGF.SPACE$			 simple variable     string	 00000000h
	       673d
PGFDIR.FILE.NAME$		 simple variable     string	 00000000h
	       674d
PGFDIR.REC.TYPE$		 simple variable     string	 00000000h
	       675d
PGFO.FILE.NAME$			 simple variable     string	 00000000h
	       676d
PGF.OSSR.FLAG$			 simple variable     string	 00000000h
	       677d
PGF.RECL%			 simple variable     integer*2 	 00000000h
	       680d,2797
PGF.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       681d,2495
PGF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       682d,2498m,2795,2796,2797
PGFDIR.RECL%			 simple variable     integer*2 	 00000000h
	       683d
PGFDIR.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       684d
PGFDIR.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       685d
PGFO.RECL%			 simple variable     integer*2 	 00000000h
	       686d
PGFO.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       687d
PGFO.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       688d
PGF.REC.NUM%			 simple variable     integer*4 	 00000000h
	       691d
PGFDIR.REC.NO%			 simple variable     integer*4 	 00000000h
	       692d
MINLS.FILE.NAME$		 simple variable     string	 00000000h
	       715d,2501,2804
MINLS.ITEM.CODE$		 simple variable     string	 00000000h
	       716d,2066m,2072,2074,2884m,2900,2904
MINLS.RECOUNT.DATE$		 simple variable     string	 00000000h
	       717d,2069,2889,2891
MINLS.DISCREPANCY$		 simple variable     string	 00000000h
	       718d
MINLS.COUNT.STATUS$		 simple variable     string	 00000000h
	       719d
MINLS.RECL%			 simple variable     integer*2 	 00000000h
	       722d,2804
MINLS.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       723d,2500
MINLS.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       724d,2072,2503m,2802,2803,2804,2900,2956,3348
SRITL.RECORD.CHAIN%		 simple variable     integer*1 	 00000000h
	       737d,3150m,3176m,3176
SRITL.MODULE.COUNT%		 simple variable     integer*1 	 00000000h
	       738d
SRITL.MODULE.SEQ%		 array(1)	     integer*1 	 00000000h
	       739d,3162
SRITL.REPEAT.CNT%		 array(1)	     integer*1 	 00000000h
	       740d,3163
SRITL.CORE.COUNT%		 simple variable     integer*2 	 00000000h
	       743d
SRITL.MAX.MOD.KEYS%		 simple variable     integer*2 	 00000000h
	       744d,3157,3166
SRITL.NON.CORE.CNT%		 simple variable     integer*2 	 00000000h
	       745d
SRITL.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       746d,2508m,2808,2809,2810,2957,3352,3609
SRITL.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       747d,2505
SRITL.RECL%			 simple variable     integer*2 	 00000000h
	       748d,2810
SRITL.POGDB%			 array(1)	     integer*4 	 00000000h
	       751d,3158,3161
SRITL.FILE.NAME$		 simple variable     string	 00000000h
	       754d,2506,2810
SRITL.COPY.NAME$		 simple variable     string	 00000000h
	       755d
SRITL.ITEM.CODE$		 simple variable     string	 00000000h
	       756d,3148m
SRITL.CORE.FLAG$		 array(1)	     string	 00000000h
	       757d
SRITL.FILLER$			 simple variable     string	 00000000h
	       758d
F01.RETURN.CODE%		 simple variable     integer*2 	 00000000h
	       784d
F02.DATE$			 simple variable     string	 00000000h
	       804d,2069m,2071,2565m,2567,2657m,2667,2891m,2894
F06.CHECK.DIGIT$		 simple variable     string	 00000000h
	       825d
F20.FILE.NAME$			 simple variable     string	 00000000h
	       849d
F20.STRING.FILE.NO$		 simple variable     string	 00000000h
	       850d
F20.TABLE.DIMENSIONED.FLAG$	 simple variable     string	 00000000h
	       851d
SESS.NUM.TABLE$			 array(1)	     string	 00000000h
	       852d
F20.INTEGER.FILE.NO%		 simple variable     integer*2 	 00000000h
	       854d,2452,2457,2462,2467,2472,2477,2493,2498,2503,2508,2538,
	       3467
F13.DAY$			 simple variable     string	 00000000h
	       879d,2668
F13.DISPLAY.MESSAGE$		 simple variable     string	 00000000h
	       880d
BATCH.SCREEN.FLAG$		 simple variable     string	 00000000h
	       891d,2392m
COMM.MODE.FLAG$			 simple variable     string	 00000000h
	       892d,2103m,2105m,3258
CURRENT.CODE$			 simple variable     string	 00000000h
	       893d,3408
FILE.OPERATION$			 simple variable     string	 00000000h
	       894d,2290m,2615m,2630m,2741m,2899m,2901m,2988m,3117m,3223m,
	       3399,3400,3405,3406,3484,3497,3577,3590
MODULE.NUMBER$			 simple variable     string	 00000000h
	       895d,2391m
OPERATOR.NUMBER$		 simple variable     string	 00000000h
	       896d
REPORTING.STATUS$		 simple variable     string	 00000000h
	       897d,2324,2553
CURRENT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       900d,2291m,2616m,3116m,3222m,3467m,3498,3499
CURRENT.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       901d,2286m,2542m,2618m,2750m,2757m,2779m,2786m,2795m,2802m,
	       2808m,2994m,3493,3578,3602,3609,3615
FILE.RETURN.CODE%		 simple variable     integer*2 	 00000000h
	       902d
FUNCTION.RETURN.CODE%		 simple variable     integer*2 	 00000000h
	       903d,3379,3435m,3459m,3621m
TRUE				 simple variable     integer*1 	 00000000h
	       906d,2330,2339,2395m
FALSE				 simple variable     integer*1 	 00000000h
	       907d,2293,2334,2394m

Function: RPRPT.SET returns real

	       1007d,2434

Function: PRINT.SET returns integer*2 

	       1053d,2435

Function: WRITE.PRINT returns integer*2 

	       1058d

Function: WRITE.PRINT.PLUS.LF returns integer*2 

	       1063d

Function: WRITE.CONDENSED.PRINT returns integer*2 

	       1068d

  NAME				  CLASS		      TYPE	  OFFSET

AP.STORE			 parameter	     real	 00000000h
	       1068d


Function: WRITE.PCL.PRINT returns integer*2 

	       1073d

Function: WRITE.LABEL returns integer*2 

	       1078d

Function: SOFTS.SET returns real

	       1097d,2436

Function: READ.SOFTS returns integer*2 

	       1100d,2640

  NAME				  CLASS		      TYPE	  OFFSET

I%				 simple variable     integer*2 	 00000000h
	       1101d


Function: WRITE.SOFTS returns integer*2 

	       1104d

  NAME				  CLASS		      TYPE	  OFFSET

I%				 simple variable     integer*2 	 00000000h
	       1105d


Function: RFSCF.SET returns real

	       1143d,2437

Function: READ.RFSCF1 returns integer*2 

	       1146d,2997

Function: WRITE.RFSCF1 returns integer*2 

	       1150d

Function: READ.RFSCF3 returns integer*2 

	       1154d

Function: WRITE.RFSCF3 returns integer*2 

	       1158d

Function: CLILF.SET returns real

	       1183d,2439

Function: READ.CLILF returns integer*2 

	       1186d

Function: WRITE.CLILF returns integer*2 

	       1190d,3118

Function: CLOLF.SET returns real

	       1214d,2438

Function: READ.CLOLF returns integer*2 

	       1217d

Function: WRITE.CLOLF returns integer*2 

	       1221d,3227

Function: IDF.SET returns real

	       1244d,2442

Function: READ.IDF returns integer*2 

	       1248d,2075,2905

Function: READ.IDF.LOCK returns integer*2 

	       1253d

Function: WRITE.IDF returns integer*2 

	       1257d,2081,2912

Function: WRITE.IDF.HOLD returns integer*2 

	       1261d

Function: WRITE.IDF.UNLOCK returns integer*2 

	       1265d

Function: PGF.SET returns integer*2 

	       1291d,2443

Function: READ.PGF returns integer*2 

	       1295d

Function: WRITE.PGF returns integer*2 

	       1299d

Function: READ.PGFDIR returns integer*2 

	       1303d

Function: WRITE.PGFDIR returns integer*2 

	       1307d

Function: READ.PGFO returns integer*2 

	       1311d

Function: WRITE.PGFO returns integer*2 

	       1315d

Function: MINLS.SET returns integer*2 

	       1340d,2444

Function: READ.MINLS returns integer*2 

	       1345d,2067,2886

Function: READ.MINLS.LOCKED returns integer*2 

	       1350d

Function: WRITE.HOLD.MINLS returns integer*2 

	       1355d

Function: WRITE.UNLOCK.MINLS returns integer*2 

	       1360d

Function: WRITE.HOLD.UNLOCK.MINLS returns integer*2 

	       1365d

Function: WRITE.MINLS returns integer*2 

	       1370d

Function: PSDATE returns integer*2 

	       1392d,2667

  NAME				  CLASS		      TYPE	  OFFSET

INPUT.DATE$			 parameter	     string	 00000000h
	       1392d,1395d


Subprogram: ADXCOPYF

	       1412d,2678,2694

  NAME				  CLASS		      TYPE	  OFFSET

RETC				 parameter	     integer*4 	 00000000h
	       1412d,1414d
INFILE				 parameter	     string	 00000004h
	       1412d,1415d
OUTFILE				 parameter	     string	 00000008h
	       1412d,1415d
OPT0				 parameter	     integer*2 	 0000000ch
	       1412d,1416d
OPT1				 parameter	     integer*2 	 00000010h
	       1412d,1416d
OPT2				 parameter	     integer*2 	 00000014h
	       1412d,1416d


Function: SRITL.SET returns real

	       1428d,2445

Function: READ.SRITL returns integer*2 

	       1431d,3151,3177

Function: WRITE.SRITL returns integer*2 

	       1435d

Subprogram: MINRFCNT

	       1439d,2416

Function: APPLICATION.LOG returns integer*2 

	       1467d,3436

  NAME				  CLASS		      TYPE	  OFFSET

MESSAGE.NO%			 parameter	     integer*2 	 00000000h
	       1467d,1475d
VAR.STRING.1$			 parameter	     string	 00000002h
	       1468d,1477d
VAR.STRING.2$			 parameter	     string	 00000006h
	       1469d,1478d
EVENT.NO%			 parameter	     integer*1 	 0000000ah
	       1470d,1472d


Function: UPDATE.DATE returns integer*2 

	       1503d,2070,2566,2662,2892

  NAME				  CLASS		      TYPE	  OFFSET

INCREMENT%			 parameter	     integer*4 	 00000000h
	       1503d,1511d


Function: CALC.BAR.CODE.CHECK.DIGIT returns integer*2 

	       1534d

  NAME				  CLASS		      TYPE	  OFFSET

BAR.CODE.12$			 parameter	     string	 00000000h
	       1534d,1538d


Function: PRINT.REPORT returns integer*2 

	       1568d

  NAME				  CLASS		      TYPE	  OFFSET

SESSION.NUMBER%			 parameter	     integer*2 	 00000000h
	       1568d,1574d
CONDENSED.PRINT.FLAG$		 parameter	     string	 00000002h
	       1568d,1571d


Function: SESS.NUM.UTILITY returns integer*2 

	       1598d,3460

  NAME				  CLASS		      TYPE	  OFFSET

FUNCTION.FLAG$			 parameter	     string	 00000000h
	       1598d,1603d
PASSED.INTEGER%			 parameter	     integer*2 	 00000004h
	       1599d,1609d
PASSED.STRING$			 parameter	     string	 00000006h
	       1600d,1604d


Function: STANDARD.ERROR.DETECTED returns integer*2 

	       1627d,3622

  NAME				  CLASS		      TYPE	  OFFSET

ERRN%				 parameter	     integer*4 	 00000000h
	       1627d,1638d
ERRFILE%			 parameter	     integer*2 	 00000004h
	       1628d,1634d
ERRL%				 parameter	     integer*2 	 00000006h
	       1629d,1635d
ERR$				 parameter	     string	 00000008h
	       1630d,1632d


Function: PROCESS.KEYED.FILE returns integer*2 

	       1665d

  NAME				  CLASS		      TYPE	  OFFSET

FILE.NAME$			 parameter	     string	 00000000h
	       1665d,1669d
REPORT.NUM%			 parameter	     integer*2 	 00000004h
	       1666d,1670d
READONLY$			 parameter	     string	 00000006h
	       1667d,1669d


Subprogram: ADXSERVE

	       1690d,3261

  NAME				  CLASS		      TYPE	  OFFSET

RETURN.CODE%			 parameter	     integer*4 	 00000000h
	       1690d,1701d
ADX.FUNCTION%			 parameter	     integer*2 	 00000004h
	       1691d,1698d
ADX.PARM.1%			 parameter	     integer*2 	 00000008h
	       1692d,1699d
ADX.PARM.2$			 parameter	     string	 0000000ch
	       1693d,1696d


Function: ADXSTART returns integer*2 

	       1721d

  NAME				  CLASS		      TYPE	  OFFSET

ADX.NAME$			 parameter	     string	 00000000h
	       1721d,1726d
ADX.PARM$			 parameter	     string	 00000004h
	       1722d,1727d
ADX.MESS$			 parameter	     string	 00000008h
	       1723d,1728d


Function: DATE.GT returns integer*1 

	       1782d

  NAME				  CLASS		      TYPE	  OFFSET

DATE1$				 parameter	     string	 00000000h
	       1782d,1783d
DATE2$				 parameter	     string	 00000004h
	       1782d,1783d


Function: DATE.GE returns integer*1 

	       1788d

  NAME				  CLASS		      TYPE	  OFFSET

DATE1$				 parameter	     string	 00000000h
	       1788d,1789d
DATE2$				 parameter	     string	 00000004h
	       1788d,1789d


Function: DATE.LT returns integer*1 

	       1794d

  NAME				  CLASS		      TYPE	  OFFSET

DATE1$				 parameter	     string	 00000000h
	       1794d,1795d
DATE2$				 parameter	     string	 00000004h
	       1794d,1795d


Function: DATE.LE returns integer*1 

	       1800d,2071,2889,2894

  NAME				  CLASS		      TYPE	  OFFSET

DATE1$				 parameter	     string	 00000000h
	       1800d,1801d
DATE2$				 parameter	     string	 00000004h
	       1800d,1801d


Function: SUBSTR returns real

	       1831d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1831d,1832d
P2				 parameter	     integer*2 	 00000004h
	       1831d,1833d
P3$				 parameter	     string	 00000006h
	       1831d,1832d
P4				 parameter	     integer*2 	 0000000ah
	       1831d,1833d
P5				 parameter	     integer*2 	 0000000ch
	       1831d,1833d


Function: GETN2 returns integer*2 

	       1847d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1847d,1849d
P2				 parameter	     integer*2 	 00000004h
	       1847d,1850d


Function: GETN4 returns integer*4 

	       1853d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1853d,1855d
P2				 parameter	     integer*2 	 00000004h
	       1853d,1856d


Function: PUTN2 returns real

	       1870d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1870d,1871d
P2				 parameter	     integer*2 	 00000004h
	       1870d,1872d
P3				 parameter	     integer*2 	 00000006h
	       1870d,1872d


Function: PUTN4 returns real

	       1875d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1875d,1876d
P2				 parameter	     integer*2 	 00000004h
	       1875d,1877d
P3				 parameter	     integer*4 	 00000006h
	       1875d,1878d


Function: PACKBIN2 returns integer*2 

	       1893d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1893d,1895d
P2				 parameter	     integer*2 	 00000004h
	       1893d,1896d
P3				 parameter	     integer*2 	 00000006h
	       1893d,1896d


Function: PACKBIN4 returns integer*4 

	       1899d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1899d,1901d
P2				 parameter	     integer*2 	 00000004h
	       1899d,1902d
P3				 parameter	     integer*2 	 00000006h
	       1899d,1902d


Function: ADDIN4 returns integer*4 

	       1917d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1917d,1919d
P2				 parameter	     integer*2 	 00000004h
	       1917d,1920d
P3				 parameter	     integer*4 	 00000006h
	       1917d,1921d


Function: ADDIN2 returns integer*2 

	       1924d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1924d,1926d
P2				 parameter	     integer*2 	 00000004h
	       1924d,1927d
P3				 parameter	     integer*2 	 00000006h
	       1924d,1927d


Function: MATCHB returns integer*2 

	       1941d

  NAME				  CLASS		      TYPE	  OFFSET

P1$				 parameter	     string	 00000000h
	       1941d,1943d
P2$				 parameter	     string	 00000004h
	       1941d,1944d
P3				 parameter	     integer*2 	 00000008h
	       1941d,1945d


Subprogram: UPDBIN4

	       1954d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       1954d,1955d
OUT$				 parameter	     string	 00000004h
	       1954d,1955d


Subprogram: UPDBIN3

	       1964d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       1964d,1965d
OUT$				 parameter	     string	 00000004h
	       1964d,1965d


Subprogram: UPDBIN2

	       1974d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       1974d,1975d
OUT$				 parameter	     string	 00000004h
	       1974d,1975d


Subprogram: UPDBIN1

	       1984d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       1984d,1985d
OUT$				 parameter	     string	 00000004h
	       1984d,1985d


Subprogram: UPDHEX2

	       1994d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       1994d,1995d
OUT$				 parameter	     string	 00000004h
	       1994d,1995d


Subprogram: UPDHEX1

	       2004d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       2004d,2005d
OUT$				 parameter	     string	 00000004h
	       2004d,2005d


Subprogram: INTBIN2

	       2018d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       2018d,2019d
IN%				 parameter	     integer*2 	 00000004h
	       2018d,2020d
OUT$				 parameter	     string	 00000008h
	       2018d,2019d
OUT%				 parameter	     integer*2 	 0000000ch
	       2018d,2020d


Subprogram: INTBIN3

	       2033d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       2033d,2034d
IN%				 parameter	     integer*2 	 00000004h
	       2033d,2035d
OUT$				 parameter	     string	 00000008h
	       2033d,2034d
OUT%				 parameter	     integer*2 	 0000000ch
	       2033d,2035d


Subprogram: INTBIN4

	       2048d

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       2048d,2049d
IN%				 parameter	     integer*2 	 00000004h
	       2048d,2050d
OUT$				 parameter	     string	 00000008h
	       2048d,2049d
OUT%				 parameter	     integer*2 	 0000000ch
	       2048d,2050d


Function: PROCESS.KEYED.RECORD$ returns string

	       2062d,2086m

  NAME				  CLASS		      TYPE	  OFFSET

RECORD$				 parameter	     string	 00000000h
	       2062d,2064d,2066,2086

Module-Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

ADXSERVE.DATA$			 simple variable     string	 00000000h
	       916d,2134m,2153m,2159m,2178m,2194m,2241m,2282m,2336m,2341m,
	       2360m,2386m,2431m,2510m,2526m,2612m,2628m,2674m,2684m,2690m,
	       2700m,2706m,2713m,2716m,2736m,2748m,2755m,2777m,2784m,2793m,
	       2800m,2806m,2813m,2860m,2941m,2947m,2958m,2990m,3180m,3182m,
	       3212m,3216m,3264,3266,3279m,3307m,3360m,3484m,3567m,3580m,
	       3592m
BSNS.CNTR$			 simple variable     string	 00000004h
	       920d,2869m,2873,2873
CLILF.DDD$			 simple variable     string	 00000008h
	       922d,2677m,2679
CLILF.BKUP.STATUS$		 simple variable     string	 0000000ch
	       923d,2325,2399m,2554,2687m
CLOLF.DDD$			 simple variable     string	 00000010h
	       924d,2693m,2695
CLOLF.BKUP.STATUS$		 simple variable     string	 00000014h
	       925d,2326,2400m,2555,2702m
CLOLF.PGNAME$			 simple variable     string	 00000000h
	       926d
CURRENT.CODE.LOGGED$		 simple variable     string	 00000018h
	       929d,3402m,3408m,3500
CURR.RUN.DAY$			 simple variable     string	 0000001ch
	       930d,2570m,2572m,2577
FUNCTION.FLAG$			 simple variable     string	 00000020h
	       931d,2285m,2447m,2533m,2540m,3310m,3461,3467,3492m
GET.DAY$			 simple variable     string	 00000024h
	       932d,2668m,2677,2693
MINLS.HK.STATUS$		 simple variable     string	 00000028h
	       934d,2327,2401m,2556,3594m
MINOK.FILE.NAME$		 simple variable     string	 0000002ch
	       935d,2288,2531m,2536,2546,2585
MINOK.FILLER$			 simple variable     string	 00000030h
	       936d,2557
MINOK.RECORD$			 simple variable     string	 00000034h
	       937d,2592m,2597
MINOK.RUN.DATE$			 simple variable     string	 00000038h
	       938d,2322,2551,2575,2582m,2592
MINOK.RUN.TIME$			 simple variable     string	 0000003ch
	       939d,2323,2552,2575,2583m,2593
MINOK.TIME.STAMP$		 simple variable     string	 00000040h
	       940d,2575m,2577
MODULE$				 simple variable     string	 00000044h
	       941d,2390m,2391
OLD.BULETT$			 simple variable     string	 00000000h
	       942d
OLD.PGNAME$			 simple variable     string	 00000000h
	       943d
PASSED.STRING$			 simple variable     string	 00000048h
	       944d,2450m,2455m,2460m,2465m,2470m,2475m,2491m,2496m,2501m,
	       2506m,2536m,3313m,3317m,3321m,3325m,3329m,3333m,3345m,3349m,
	       3353m,3357m,3463
PIPE.OPEN$			 simple variable     string	 0000004ch
	       945d,2190m,2193m
PROGRAM$			 simple variable     string	 00000050h
	       946d,2389m,2391
QUOTES$				 simple variable     string	 00000054h
	       947d,2550
RESPONSE$			 simple variable     string	 00000058h
	       948d,2114,2120,2121,2122,2123,2125,2131,2132,2137,2138
RPRPT.RECORD$			 simple variable     string	 0000005ch
	       949d,2865,2869,2874,3019,3020,3021
TIME.NOW$			 simple variable     string	 00000060h
	       951d,2658m,2659
UPDATE.DATE$			 simple variable     string	 00000000h
	       952d
VAR.STRING.1$			 simple variable     string	 00000064h
	       953d,3438,3496m
VAR.STRING.2$			 simple variable     string	 00000068h
	       954d,3439
YESTERDAY$			 simple variable     string	 0000006ch
	       955d,2397m,2567m,2572
COUNTER%			 simple variable     integer*1 	 00000070h
	       958d,3136,3137,3138,3139,3140,3141,3142
DO.MAIN				 simple variable     integer*1 	 00000071h
	       959d,2171m,2180m,2744m,2974m,3604m
EOF				 simple variable     integer*1 	 00000072h
	       960d,2815m,2863,2968m
ERROR.COUNT%			 simple variable     integer*1 	 00000073h
	       961d,3570m,3570,3572,3582m,3595m,3603m,3611m,3617m
EVENT.NUMBER%			 simple variable     integer*1 	 00000074h
	       962d,3440,3487m
MINPRINT.ALREADY.RUN%		 simple variable     integer*1 	 00000075h
	       964d,2158,2578m,2581
MINOK.ERROR.CHK%		 simple variable     integer*1 	 00000076h
	       965d,2293m,2330m,2334,2339
ADX.FUNCTION%			 simple variable     integer*2 	 00000077h
	       968d,3260m,3262
ADX.INTEGER%			 simple variable     integer*2 	 00000079h
	       969d,3259m,3263
LOOPCNT%			 simple variable     integer*2 	 0000007bh
	       971d,3157,3158,3161,3162,3163,3166m
LIST.ITEMS			 simple variable     integer*2 	 0000007dh
	       972d,2833m,3042,3054,3121m,3121,3211,3218,3238m
MESSAGE.NUMBER%			 simple variable     integer*2 	 0000007fh
	       973d,3437
MINOK.REPORT.NUM%		 simple variable     integer*2 	 00000081h
	       974d,2291,2530m,2535
MINOK.SESS.NUM%			 simple variable     integer*2 	 00000083h
	       975d,2286,2287,2288,2321,2346,2538m,2542,2545,2546,2548,2549,
	       2584,2585,2597,2600,3356,3578,3615
PASSED.INTEGER%			 simple variable     integer*2 	 00000085h
	       976d,2449m,2454m,2459m,2464m,2469m,2474m,2490m,2495m,2500m,
	       2505m,2535m,3312m,3316m,3320m,3324m,3328m,3332m,3344m,3348m,
	       3352m,3356m,3462,3493m
RC%				 simple variable     integer*2 	 00000087h
	       977d,2067m,2075m,2076,2081m,2566m,2640m,2743,2886m,2888,2905m,
	       2906,2912m,2997m,3118m,3119,3151m,3154,3167m,3174,3177m,3227m,
	       3228
ADX.RETURN.CODE%		 simple variable     integer*4 	 00000089h
	       982d,3261
ADXCOPY.CHK%			 simple variable     integer*4 	 0000008dh
	       983d,2678,2682,2694,2698
FILE.SIZE%			 simple variable     integer*4 	 00000091h
	       984d,2623m,2625,2626,2634
RECORD.COUNT%			 simple variable     integer*4 	 00000095h
	       985d,3152m,3159,3161,3162,3163,3164m,3164,3174,3178
MINPRINT.START			 label		     
	       2097d
ERROR.DETECTED			 label		     
	       2100,3565d
MINPRINT.HELP			 label		     
	       2113,2147,2254d
DISPLAY.MESSAGE			 label		     
	       2135,2154,2161,2179,2195,2242,2283,2337,2342,2361,2387,2432,
	       2511,2527,2613,2629,2675,2685,2691,2701,2707,2714,2717,2737,
	       2749,2756,2778,2785,2794,2801,2807,2814,2861,2942,2948,2959,
	       2991,3181,3183,3213,3217,3256d,3280,3308,3361,3485,3568,3581,
	       3593
CREATE.MINOK.FILE		 label		     
	       2156,2524d
STOP.PROGRAM			 label		     
	       2162,2239d,3384,3529,3547,3574,3628
CALL.MINRFCNT			 label		     
	       2166,2414d
INITIALISATION			 label		     
	       2168,2357d
GET.SOFTS			 label		     
	       2169,2610d
RFS.BYPASS			 label		     
	       2188,2200d
BACKUP.CLILF.CLOLF.FILES	 label		     
	       2201,2653d
RF.PROCESS			 label		     
	       2202,2734d
WRITE.MINOK			 label		     
	       2234,2280d
TERMINATION			 label		     
	       2236,3277d
FILE.ERROR.EXIT			 label		     
	       2287,2619,2631,2780,2787,2796,2803,2809,3119,3228,3542d
MINOK.ERROR			 label		     
	       2332d,3583
INITIALISE.VARIABLES		 label		     
	       2362,2384d
ALLOCATE.SESSION.NUMBERS	 label		     
	       2364,2429d
@RDUMMY				 simple variable     real	 00000099h
CALL.F20.SESS.NUM.UTILITY	 label		     
	       2451,2456,2461,2466,2471,2476,2492,2497,2502,2507,2537,3314,
	       3318,3322,3326,3330,3334,3346,3350,3354,3358,3456d,3494
NO.PREV.RUN.DETAILS		 label		     
	       2545,2548,2561d
PROCESS.MINOK.RECORD		 label		     
	       2559,2563d
PROCESS.RFSCF			 label		     
	       2739,2986d
END.RF.PROCESS			 label		     
	       2745,2961d,2975,3605
CREATE.ERROR			 label		     
	       2751,2758,3525d
RPRPT.EOF			 label		     
	       2791,2966d
EXTRACT.FIELDS			 label		     
	       2875,3008d
VALID.ITEM			 label		     
	       2916,3032d
RPRPT.EOF.RETURN		 label		     
	       2937d,2969
CREATE.RECOUNT.LIST		 label		     
	       2945,3043,3196d
RFSCF.OPEN.ERROR		 label		     
	       2972d,2993
PROCESS.SRITL			 label		     
	       3113,3133d
@BSTEP				 simple variable     integer*1 	 000000a3h
@ISTEP				 simple variable     integer*2 	 000000a4h
DEALLOCATE.SESSION.NUMBERS	 label		     
	       3282,3304d
CHECK.FUNCTION.RETURN.CODE	 label		     
	       3377d,3442,3465
FORMAT.CURRENT.CODE		 label		     
	       3397d,3489,3545
CALL.F01.APPLICATION.LOG	 label		     
	       3432d,3502
LOG.AN.EVENT.106		 label		     
	       3481d,3527,3546

