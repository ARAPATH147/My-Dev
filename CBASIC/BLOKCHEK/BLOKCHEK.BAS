%INCLUDE PSBF01G.J86
%INCLUDE PSBF20G.J86
%INCLUDE IRFDEC.J86 
%INCLUDE IDFDEC.J86
%INCLUDE KFASMEXT.J86 ! Keyed file assembler functions              !HMW
%INCLUDE EALHSASC.J86
%INCLUDE PSBF01E.J86                                                   !HSMG
%INCLUDE IRFEXT.J86                                                    !BMJK                                                   
%INCLUDE PSBF20E.J86
%INCLUDE IDFEXT.J86 

ON ERROR GOTO ERROR.DETECTED

	GOSUB INITIALIZATION
	GOSUB MAIN.PROGRAM
	GOSUB TERMINATION

STOP

INITIALIZATION:

     BLOCK.FILE$ = "C:/BLOKCHEK.DAT"

	 CALL IRF.SET
	 CALL IDF.SET

	 FUNCTION.FLAG$ EQ "O" 

     PASSED.INTEGER% EQ IRF.REPORT.NUM% 
     PASSED.STRING$ EQ IRF.FILE.NAME$
     GOSUB CALL.F20.SESS.NUM.UTILITY
     IRF.SESS.NUM% EQ F20.INTEGER.FILE.NO% 
	 
	 PASSED.INTEGER% EQ IDF.REPORT.NUM% 
     PASSED.STRING$ EQ IDF.FILE.NAME$
     GOSUB CALL.F20.SESS.NUM.UTILITY
     IDF.SESS.NUM% EQ F20.INTEGER.FILE.NO%
	 
	 PASSED.INTEGER% EQ 456 
     PASSED.STRING$ EQ BLOCK.FILE$
     GOSUB CALL.F20.SESS.NUM.UTILITY
     BLOCK.SESS.NUM% EQ F20.INTEGER.FILE.NO%
	 
	 
	 OPEN BLOCK.FILE$ AS BLOCK.SESS.NUM%

RETURN

CALL.F20.SESS.NUM.UTILITY: 
        
         FILE.OPERATION$ = FUNCTION.FLAG$
         CURRENT.REPORT.NUM% = PASSED.INTEGER%
         RC% = SESS.NUM.UTILITY (FUNCTION.FLAG$, PASSED.INTEGER%,       \
                                 PASSED.STRING$)
         IF RC% <> 0 THEN GOTO ERROR.DETECTED

RETURN



MAIN.PROGRAM:

	IF END #IRF.SESS.NUM% THEN NO.FILE
	OPEN IRF.FILE.NAME$ KEYED RECL IRF.RECL% AS IRF.SESS.NUM% NODEL	 
	IF END #IDF.SESS.NUM% THEN NO.FILE
	OPEN IDF.FILE.NAME$ KEYED RECL IDF.RECL% AS IDF.SESS.NUM% NODEL
	
READ.BEGIN:

	WHILE NOT EOF1 

    IF END #BLOCK.SESS.NUM% THEN NO.FILE
    READ #BLOCK.SESS.NUM% ;LINE LINE.RECORD$
	
	CMD$ = LEFT$(LINE.RECORD$,7) 
	
	
	IDF.BOOTS.CODE$ = PACK$("0" + CMD$) 

	RC% = READ.IDF
	  
	  IF RC% = 0 THEN BEGIN		    
       	  
	  
	        IRF.BAR.CODE$ =  PACK$("0000000000") + IDF.FIRST.BAR.CODE$
		 
	        RC% = READ.IRF
			
			PRINT.STRING$ = " "
			 
	        IF RC% = 0 THEN BEGIN
			
			    IF (IRF.INDICAT0% AND 00010000B) <> 0 THEN BEGIN
				    PRINT.STRING$ = "INDICAT0 IS SET, "
                ENDIF
				
				IF (IRF.INDICAT1% AND 00010000B) <> 0 THEN BEGIN
           
                     PRINT.STRING$ = PRINT.STRING$ + "INDICAT1 IS SET, "
				ENDIF
				 
			    IF ( IRF.INDICAT8% AND 01100000B) <> 00 THEN BEGIN
			         PRINT.STRING$ = PRINT.STRING$ + " INDICAT 8 IS SET "
				ENDIF
				
				PRINT CMD$  + "-" + PRINT.STRING$
				
			ENDIF ELSE BEGIN
	  
	         IRF.BAR.CODE$ = PACK$(RIGHT$(STRING$(22,"0") +               \
             UNPACK$(IRF.SECOND.BAR.CODE$),22)) 
			 RC% = READ.IRF
			 
			 IF RC% = 0 THEN BEGIN	 
			 
			 IF (IRF.INDICAT0% AND 00010000B) <> 0 THEN BEGIN
				    PRINT.STRING$ = " INDICAT0 IS SET, "
                ENDIF
				
				IF (IRF.INDICAT1% AND 00010000B) <> 0 THEN BEGIN
           
                     PRINT.STRING$ = PRINT.STRING$ + "INDICAT1 IS SET, "
				ENDIF
				 
			    IF ( IRF.INDICAT8% AND 01100000B) <> 00 THEN BEGIN
			         PRINT.STRING$ = PRINT.STRING$ + " INDICAT 8 IS SET "
				ENDIF
				
				PRINT PRINT.STRING$ +  CMD$
			
		  	ENDIF ELSE BEGIN
            
			ENDIF 
			
			ENDIF	
		  
		    

     ENDIF ELSE BEGIN
     ENDIF

WEND   

NO.FILE:

    EOF1 = TRUE

    EOF = TRUE

    GOTO TERMINATION

RETURN


TERMINATION:

    FUNCTION.FLAG$ EQ "C"
    PASSED.INTEGER% EQ IRF.REPORT.NUM% 
    PASSED.STRING$ EQ IRF.FILE.NAME$
    GOSUB CALL.F20.SESS.NUM.UTILITY
    IRF.SESS.NUM% EQ F20.INTEGER.FILE.NO%

    FUNCTION.FLAG$ EQ "C"
    PASSED.INTEGER% EQ IDF.REPORT.NUM% 
    PASSED.STRING$ EQ IDF.FILE.NAME$
    GOSUB CALL.F20.SESS.NUM.UTILITY
    UODOT.SESS.NUM% EQ F20.INTEGER.FILE.NO%

    CLOSE IDF.SESS.NUM%
    CLOSE IRF.SESS.NUM%

RETURN

ERROR.DETECTED:

PRINT   "An Error Occurred "   + ERR   + STR$(ERRF%)   + STR$(ERRL)  + CMD$

IF ERR = "KF" OR ERR = "AC"  THEN BEGIN

    RESUME READ.BEGIN

ENDIF

END

