   1: 0000: 
   2: 0000: REM \
   3: 0000: \******************************************************************************
   4: 0000: \******************************************************************************
   5: 0000: \***
   6: 0000: \***                ITEM DATA FILE FUNCTIONS
   7: 0000: \***
   8: 0000: \***                REFERENCE   : IDFFUN.BAS
   9: 0000: \***
  10: 0000: \***    VERSION C.              Robert Cowey.                       25 AUG 1993.
  11: 0000: \***    Corrected setting of FILE.OPERATION$, CURRENT.CODE$, and 
  12: 0000: \***    CURRENT.REPORT.NUM% when IF END # invoked.
  13: 0000: \***    Replaced un-used RANK$ with BSNS.CNTR$ and FILLER$.
  14: 0000: \***
  15: 0000: \***    VERSION D              Nik Sen                 22nd December 1994
  16: 0000: \***    WRITE.IDF.HOLD added
  17: 0000: \***
  18: 0000: \******************************************************************************
  19: 0000: \******************************************************************************
  20: 0000: 
  21: 0000:   INTEGER*2 GLOBAL            \
  22: 0000:          CURRENT.REPORT.NUM% 
  23: 0000: 	 
  24: 0000:   STRING GLOBAL               \
  25: 0000:          CURRENT.CODE$,       \
  26: 0000:          FILE.OPERATION$     	   
  27: 0000: 
  28: 0000:   %INCLUDE IDFDEC.J86                                                 ! CRC
  29: 0000: REM \
  30: 0000: \******************************************************************************
  31: 0000: \******************************************************************************
  32: 0000: \***
  33: 0000: \***         %INCLUDE FOR ITEM DATA FILE - FIELD DECLARATIONS
  34: 0000: \***                                       FILE REFERENCE PARAMETERS
  35: 0000: \***
  36: 0000: \***                  FILE TYPE    : Keyed
  37: 0000: \***
  38: 0000: \***                  REFERENCE    : IDFDEC.J86
  39: 0000: \***
  40: 0000: \***         VERSION A : Andrew Wedgeworth  29th June 1992    
  41: 0000: \***
  42: 0000: \***    VERSION C.              Robert Cowey.                       25 AUG 1993.
  43: 0000: \***    Replaced un-used RANK$ with BSNS.CNTR$ and FILLER$.
  44: 0000: \***
  45: 0000: \***    VERSION D.              Andrew Wedgeworth               15th March 1995
  46: 0000: \***    Comments updated to reflect the fact that some bits on the file are
  47: 0000: \***    no longer used.
  48: 0000: \***
  49: 0000: \*******************************************************************************
  50: 0000: \*******************************************************************************
  51: 0000: 
  52: 0000:   STRING GLOBAL           \
  53: 0000:     IDF.FILE.NAME$,       \  
  54: 0000:     IDF.BOOTS.CODE$,      \ 4 byte UPD with check digit (key)
  55: 0000:     IDF.FIRST.BAR.CODE$,  \ 6 byte UPD without check digit
  56: 0000:     IDF.SECOND.BAR.CODE$, \ 6 byte UPD without check digit
  57: 0000:     IDF.NO.OF.BAR.CODES$, \ 2 byte UPD. Total number of bar codes for this item
  58: 0000:     IDF.PRODUCT.GRP$,     \ 3 byte UPD. The first two digits are the concept
  59: 0000:                           \ group and the last four the concept sequence
  60: 0000:     IDF.STNDRD.DESC$,     \ 24 bytes
  61: 0000:     IDF.STATUS.1$,        \ 1 byte, values B,C,D,P,X,Z and blank
  62: 0000:     IDF.INTRO.DATE$,      \ 3 byte UPD YYMMDD. Date first added to this file
  63: 0000:     IDF.BSNS.CNTR$,       \ 1 byte ASC. Business Centre ID letter      ! CRC
  64: 0000:     IDF.FILLER$,          \ 1 byte un-used                             ! CRC
  65: 0000:     IDF.PARENT.CODE$,     \ 4 byte UPD with check digit ; may be zero if no
  66: 0000:                           \ flashpacks, current IDF.BOOTS.CODE$ if parent line
  67: 0000:                           \ or Boots Code of parent line if a flashpack.
  68: 0000:     IDF.DATE.OF.LAST.SALE$! 3 byte UPD. Date of last sale.
  69: 0000: 
  70: 0000:   INTEGER*1 GLOBAL        \
  71: 0000:     IDF.BIT.FLAGS.1%,     \ 1 byte - bit values
  72: 0000:                           \ X"80"  - Group code flag
  73: 0000:                           \ X"40"  - Keylines flag
  74: 0000:                           \ X"20"  - Markdown flag
  75: 0000:                           \ X"10"  - Warehouse flag
  76: 0000:                           \ X"08"  - CSR flag
  77: 0000:                           \ X"04"  - Directs A flag
  78: 0000:                           \ X"02"  - Directs B flag
  79: 0000:                           \ X"01"  - Directs C flag
  80: 0000:     IDF.BIT.FLAGS.2%      \ 1 byte - bit values
  81: 0000:                           \ X"80"  - Own brand line flag
  82: 0000:                           \ X"40"  - Exclusive line flag
  83: 0000:                           \ X"20"  - Unused 
  84: 0000:                           \ X"10"  - Unused
  85: 0000:                           \ X"08"  - Stock system flag
  86: 0000:                           \ X"04"  - Pending count flag
  87: 0000:                           \ X"02"  - Reserved
  88: 0000:                           ! X"01"  - Reserved
  89: 0000: 
  90: 0000:   INTEGER*2 GLOBAL        \
  91: 0000:     IDF.RECL%,            \  
  92: 0000:     IDF.REPORT.NUM%,      \ 
  93: 0000:     IDF.SESS.NUM%
  94: 0000: 
  95: 0000: 
  96: 0000:   FUNCTION IDF.SET PUBLIC
  97: 0014: \*************************
  98: 0014: 
  99: 0014:      IDF.REPORT.NUM% = 6                                   
 100: 001d:      IDF.RECL%      = 60
 101: 0026:      IDF.FILE.NAME$ = "IDF"
 102: 0035: 
 103: 0035:   END FUNCTION
 104: 0041: \------------------------------------------------------------------------------
 105: 0041: REM EJECT^L  
 106: 0041: 
 107: 0041:   FUNCTION READ.IDF PUBLIC
 108: 0055: \**************************  
 109: 0055: 
 110: 0055:     INTEGER*2 READ.IDF
 111: 0055:     
 112: 0055:     READ.IDF = 1    
 113: 005a: 
 114: 005a:     IF END #IDF.SESS.NUM% THEN READ.ERROR   
 115: 006e:     READ FORM "T5,2C6,C2,C3,C24,C1,C3,C1,C1,2I1,C4,C3";            \   ! CRC
 116: 0124:          #IDF.SESS.NUM%                                            \
 117: 0124:          KEY IDF.BOOTS.CODE$;                                      \
 118: 0124:              IDF.FIRST.BAR.CODE$,                                  \
 119: 0124:              IDF.SECOND.BAR.CODE$,                                 \
 120: 0124:              IDF.NO.OF.BAR.CODES$,                                 \
 121: 0124:              IDF.PRODUCT.GRP$,                                     \
 122: 0124:              IDF.STNDRD.DESC$,                                     \
 123: 0124:              IDF.STATUS.1$,                                        \
 124: 0124:              IDF.INTRO.DATE$,                                      \
 125: 0124:              IDF.BSNS.CNTR$,                                       \   ! CRC
 126: 0124:              IDF.FILLER$,                                          \   ! CRC
 127: 0124:              IDF.BIT.FLAGS.1%,                                     \
 128: 0124:              IDF.BIT.FLAGS.2%,                                     \
 129: 0124:              IDF.PARENT.CODE$,                                     \
 130: 0124:              IDF.DATE.OF.LAST.SALE$
 131: 0124: 
 132: 0124:      READ.IDF = 0
 133: 0129:      EXIT FUNCTION     
 134: 012b: 
 135: 012b: 
 136: 012b:      READ.ERROR:
 137: 012b: 
 138: 012b:         FILE.OPERATION$    EQ "R"                                      ! CRC
 139: 013a:         CURRENT.REPORT.NUM% EQ IDF.REPORT.NUM%                         ! CRC
 140: 0148:         CURRENT.CODE$      EQ UNPACK$(IDF.BOOTS.CODE$)                 ! CRC
 141: 0163: 
 142: 0163:         EXIT FUNCTION     
 143: 0165: 
 144: 0165:   END FUNCTION
 145: 0174: \------------------------------------------------------------------------------
 146: 0174: REM EJECT^L  
 147: 0174: 
 148: 0174:   FUNCTION READ.IDF.LOCK PUBLIC
 149: 0188: \*******************************   
 150: 0188: 
 151: 0188:     INTEGER*2 READ.IDF.LOCK
 152: 0188:     
 153: 0188:     READ.IDF.LOCK = 1    
 154: 018d: 
 155: 018d:     IF END #IDF.SESS.NUM% THEN READ.LOCK.ERROR
 156: 01a1:     READ FORM "T5,2C6,C2,C3,C24,C1,C3,C1,C1,2I1,C4,C3";            \   ! CRC
 157: 0257:          #IDF.SESS.NUM% AUTOLOCK                                   \
 158: 0257:          KEY IDF.BOOTS.CODE$;                                      \
 159: 0257:              IDF.FIRST.BAR.CODE$,                                  \
 160: 0257:              IDF.SECOND.BAR.CODE$,                                 \
 161: 0257:              IDF.NO.OF.BAR.CODES$,                                 \
 162: 0257:              IDF.PRODUCT.GRP$,                                     \
 163: 0257:              IDF.STNDRD.DESC$,                                     \
 164: 0257:              IDF.STATUS.1$,                                        \
 165: 0257:              IDF.INTRO.DATE$,                                      \
 166: 0257:              IDF.BSNS.CNTR$,                                       \   ! CRC
 167: 0257:              IDF.FILLER$,                                          \   ! CRC
 168: 0257:              IDF.BIT.FLAGS.1%,                                     \
 169: 0257:              IDF.BIT.FLAGS.2%,                                     \
 170: 0257:              IDF.PARENT.CODE$,                                     \
 171: 0257:              IDF.DATE.OF.LAST.SALE$
 172: 0257: 	     
 173: 0257:     READ.IDF.LOCK = 0
 174: 025c:     EXIT FUNCTION
 175: 025e:     
 176: 025e:     
 177: 025e:     READ.LOCK.ERROR:    	     
 178: 025e: 
 179: 025e:        CURRENT.CODE$ = UNPACK$(IDF.BOOTS.CODE$)
 180: 0279:        FILE.OPERATION$ = "R"
 181: 0288:        CURRENT.REPORT.NUM% = IDF.REPORT.NUM%              
 182: 0296:     
 183: 0296:        EXIT FUNCTION    
 184: 0298: 
 185: 0298:   END FUNCTION
 186: 02a7: \------------------------------------------------------------------------------
 187: 02a7: REM EJECT^L  
 188: 02a7: 
 189: 02a7: 
 190: 02a7:   FUNCTION WRITE.IDF PUBLIC
 191: 02bb: \**************************  
 192: 02bb: 
 193: 02bb:     INTEGER*2 WRITE.IDF
 194: 02bb:     
 195: 02bb:     WRITE.IDF = 1
 196: 02c0: 
 197: 02c0:     IF END #IDF.SESS.NUM% THEN WRITE.ERROR
 198: 02d4:     WRITE FORM "C4,2C6,C2,C3,C24,C1,C3,C1,C1,2I1,C4,C3";           \   ! CRC
 199: 03c2:              #IDF.SESS.NUM%;                                       \
 200: 03c2:              IDF.BOOTS.CODE$,                                      \
 201: 03c2:              IDF.FIRST.BAR.CODE$,                                  \
 202: 03c2:              IDF.SECOND.BAR.CODE$,                                 \
 203: 03c2:              IDF.NO.OF.BAR.CODES$,                                 \
 204: 03c2:              IDF.PRODUCT.GRP$,                                     \
 205: 03c2:              IDF.STNDRD.DESC$,                                     \
 206: 03c2:              IDF.STATUS.1$,                                        \
 207: 03c2:              IDF.INTRO.DATE$,                                      \
 208: 03c2:              IDF.BSNS.CNTR$,                                       \   ! CRC
 209: 03c2:              IDF.FILLER$,                                          \   ! CRC
 210: 03c2:              IDF.BIT.FLAGS.1%,                                     \
 211: 03c2:              IDF.BIT.FLAGS.2%,                                     \
 212: 03c2:              IDF.PARENT.CODE$,                                     \
 213: 03c2:              IDF.DATE.OF.LAST.SALE$
 214: 03c2: 
 215: 03c2:     WRITE.IDF = 0
 216: 03c7:     EXIT FUNCTION
 217: 03c9: 
 218: 03c9: 
 219: 03c9:     WRITE.ERROR:
 220: 03c9: 
 221: 03c9:        FILE.OPERATION$ = "W"                                           ! CRC
 222: 03d8:        CURRENT.REPORT.NUM% = IDF.REPORT.NUM%
 223: 03e6:        CURRENT.CODE$ = UNPACK$(IDF.BOOTS.CODE$)              
 224: 0401:     
 225: 0401:        EXIT FUNCTION    
 226: 0403: 
 227: 0403:   END FUNCTION
 228: 0412: \------------------------------------------------------------------------------  
 229: 0412:  
 230: 0412: REM EJECT^L  
 231: 0412: 
 232: 0412: 
 233: 0412:   FUNCTION WRITE.IDF.HOLD PUBLIC
 234: 0426: \**************************  
 235: 0426: 
 236: 0426:     INTEGER*2 WRITE.IDF.HOLD
 237: 0426:     
 238: 0426:     WRITE.IDF.HOLD = 1
 239: 042b: 
 240: 042b:     IF END #IDF.SESS.NUM% THEN WRITE.HOLD.ERROR
 241: 043f:     WRITE FORM "C4,2C6,C2,C3,C24,C1,C3,C1,C1,2I1,C4,C3"; HOLD      \   ! DNS
 242: 052d:              #IDF.SESS.NUM%;                                       \
 243: 052d:              IDF.BOOTS.CODE$,                                      \
 244: 052d:              IDF.FIRST.BAR.CODE$,                                  \
 245: 052d:              IDF.SECOND.BAR.CODE$,                                 \
 246: 052d:              IDF.NO.OF.BAR.CODES$,                                 \
 247: 052d:              IDF.PRODUCT.GRP$,                                     \
 248: 052d:              IDF.STNDRD.DESC$,                                     \
 249: 052d:              IDF.STATUS.1$,                                        \
 250: 052d:              IDF.INTRO.DATE$,                                      \
 251: 052d:              IDF.BSNS.CNTR$,                                       \   
 252: 052d:              IDF.FILLER$,                                          \   
 253: 052d:              IDF.BIT.FLAGS.1%,                                     \
 254: 052d:              IDF.BIT.FLAGS.2%,                                     \
 255: 052d:              IDF.PARENT.CODE$,                                     \
 256: 052d:              IDF.DATE.OF.LAST.SALE$
 257: 052d: 
 258: 052d:     WRITE.IDF.HOLD = 0
 259: 0532:     EXIT FUNCTION
 260: 0534: 
 261: 0534: 
 262: 0534:     WRITE.HOLD.ERROR:
 263: 0534: 
 264: 0534:        FILE.OPERATION$ = "W"                                           
 265: 0543:        CURRENT.REPORT.NUM% = IDF.REPORT.NUM%
 266: 0551:        CURRENT.CODE$ = UNPACK$(IDF.BOOTS.CODE$)              
 267: 056c:     
 268: 056c:        EXIT FUNCTION    
 269: 056e: 
 270: 056e:   END FUNCTION
 271: 057d: \------------------------------------------------------------------------------  
 272: 057d:  
 273: 057d:   FUNCTION WRITE.IDF.UNLOCK PUBLIC
 274: 0591: \**********************************  
 275: 0591: 
 276: 0591:     INTEGER*2 WRITE.IDF.UNLOCK
 277: 0591:     
 278: 0591:     WRITE.IDF.UNLOCK = 1
 279: 0596: 
 280: 0596:     IF END #IDF.SESS.NUM% THEN WRITE.UNLOCK.ERROR
 281: 05aa:     WRITE FORM "C4,2C6,C2,C3,C24,C1,C3,C1,C1,2I1,C4,C3";           \   ! CRC
 282: 0698:              #IDF.SESS.NUM% AUTOUNLOCK;                            \
 283: 0698:              IDF.BOOTS.CODE$,                                      \
 284: 0698:              IDF.FIRST.BAR.CODE$,                                  \
 285: 0698:              IDF.SECOND.BAR.CODE$,                                 \
 286: 0698:              IDF.NO.OF.BAR.CODES$,                                 \
 287: 0698:              IDF.PRODUCT.GRP$,                                     \
 288: 0698:              IDF.STNDRD.DESC$,                                     \
 289: 0698:              IDF.STATUS.1$,                                        \
 290: 0698:              IDF.INTRO.DATE$,                                      \
 291: 0698:              IDF.BSNS.CNTR$,                                       \   ! CRC
 292: 0698:              IDF.FILLER$,                                          \   ! CRC
 293: 0698:              IDF.BIT.FLAGS.1%,                                     \
 294: 0698:              IDF.BIT.FLAGS.2%,                                     \
 295: 0698:              IDF.PARENT.CODE$,                                     \
 296: 0698:              IDF.DATE.OF.LAST.SALE$
 297: 0698: 
 298: 0698:     WRITE.IDF.UNLOCK = 0
 299: 069d:     EXIT FUNCTION
 300: 069f: 
 301: 069f: 
 302: 069f:     WRITE.UNLOCK.ERROR:
 303: 069f: 
 304: 069f:        FILE.OPERATION$ = "W"                                           ! CRC
 305: 06ae:        CURRENT.REPORT.NUM% = IDF.REPORT.NUM%
 306: 06bc:        CURRENT.CODE$ = UNPACK$(IDF.BOOTS.CODE$)              
 307: 06d7:     
 308: 06d7:        EXIT FUNCTION    
 309: 06d9: 
 310: 06d9:   END FUNCTION
 311: 06e8: \------------------------------------------------------------------------------  
 312: 06e8: End of Compilation
