   1: 0000: REM \
   2: 0000: \*******************************************************************************
   3: 0000: \*******************************************************************************
   4: 0000: \***
   5: 0000: \***
   6: 0000: \***            FUNCTION      : CONV.TO.STRING
   7: 0000: \***            AUTHOR        : Bruce Scriver   (Pseudo code)
   8: 0000: \***                          : Stephen Kelsey  (Basic code)
   9: 0000: \***            DATE WRITTEN  : 19th February 1986  (Pseudo code)
  10: 0000: \***                          : 26th February 1986  (Basic code)
  11: 0000: \***
  12: 0000: \***            REFERENCE     : PSBF17
  13: 0000: \***
  14: 0000: \***
  15: 0000: \***            VERSION B.       ANDREW WEDGEWORTH           2nd July 1992
  16: 0000: \***            Redundant function parameters removed and defined as global
  17: 0000: \***            variables instead.
  18: 0000: \***
  19: 0000: \***            VERSION C.   STUART WILLIAM MCCONNACHIE         2nd Sept 2005
  20: 0000: \***            Removed version numbered included code - About time.
  21: 0000: \***            This is so we can compile FUNLIB version without line numbers.
  22: 0000: \***
  23: 0000: \*******************************************************************************
  24: 0000: \*******************************************************************************
  25: 0000: 
  26: 0000: REM \
  27: 0000: \*******************************************************************************
  28: 0000: \*******************************************************************************
  29: 0000: \***
  30: 0000: \***
  31: 0000: \***            FUNCTION OVERVIEW
  32: 0000: \***            -----------------
  33: 0000: \***
  34: 0000: \***   This function is called to convert a 4 byte integer into a string of
  35: 0000: \***   ASCII characters which is the string representation of the integer.
  36: 0000: \***   The function is used primarily to aid the construction of unique data
  37: 0000: \***   for use with the APPLICATION.LOG and ADXERROR functions.  If an error
  38: 0000: \***   occurs in processing, the error is logged as event 19.
  39: 0000: \***
  40: 0000: \***
  41: 0000: \*******************************************************************************
  42: 0000: \*******************************************************************************
  43: 0000: 
  44: 0000: REM    PSEUDOCODE for this module follows....\
  45: 0000: 
  46: 0000: \*****************************************************************************
  47: 0000: \*****************************************************************************
  48: 0000: \***
  49: 0000: \***
  50: 0000: \***   %INCLUDE globals for CONV.TO.STRING function
  51: 0000: \***   %INCLUDE external definition of APPLICATION.LOG function
  52: 0000: \***
  53: 0000: 
  54: 0000:    %INCLUDE PSBF17G.J86                                                ! CSWM
  55: 0000: REM \
  56: 0000: \*******************************************************************************
  57: 0000: \*******************************************************************************
  58: 0000: \***
  59: 0000: \***
  60: 0000: \***        %INCLUDE GLOBAL DEFINITIONS FOR CONV.TO.STRING FUNCTION
  61: 0000: \***
  62: 0000: \***                    REFERENCE     : PSBF17G.J86
  63: 0000: \***
  64: 0000: \***        Version A         Bruce Scriver      24th February 1986
  65: 0000: \***
  66: 0000: \***        Version B       Andrew Wedgeworth         2nd July 1992
  67: 0000: \***        Removal of now redundant F17.RETURN.CODE%
  68: 0000: \***
  69: 0000: \*******************************************************************************
  70: 0000: \*******************************************************************************
  71: 0000: 
  72: 0000:       STRING   GLOBAL F17.RETURNED.STRING$
  73: 0000: 
  74: 0000:       ! 1 line deleted from here                                       ! BAW
  75: 0000: 
  76: 0000: 
  77: 0000:    STRING GLOBAL                                                       \ BAW
  78: 0000:           BATCH.SCREEN.FLAG$,                                          \ BAW
  79: 0000:           MODULE.NUMBER$,                                              \ BAW
  80: 0000:           OPERATOR.NUMBER$                                             ! BAW             
  81: 0000: 
  82: 0000:    ! 1 line deleted from here                                          ! BAW
  83: 0000: 
  84: 0000:    %INCLUDE PSBF01E.J86                                                ! CSWM
  85: 0000: REM \
  86: 0000: \*******************************************************************************
  87: 0000: \*******************************************************************************
  88: 0000: \***
  89: 0000: \***      %INCLUDE FOR EXTERNAL DEFINITION OF FUNCTION APPLICATION.LOG
  90: 0000: \***
  91: 0000: \***                      FUNCTION NUMBER   : PSBF01
  92: 0000: \***
  93: 0000: \***                    INCLUDE REFERENCE : PSBF01E.J86
  94: 0000: \*** 
  95: 0000: \***      Version B           Andrew Wedgeworth          1st July 1992
  96: 0000: \***      Three parameters which passed to the function have been removed.
  97: 0000: \***      APPLICATION.LOG has been added as a variable name (this holds the
  98: 0000: \***      return code).
  99: 0000: \***
 100: 0000: \*******************************************************************************
 101: 0000: 
 102: 0000: 
 103: 0000:    FUNCTION APPLICATION.LOG (MESSAGE.NO%,                                     \
 104: 0000:                              VAR.STRING.1$,                                   \
 105: 0000:                              VAR.STRING.2$,                                   \
 106: 0000:                              EVENT.NO%)  EXTERNAL
 107: 0000: 
 108: 0000:       INTEGER*1 EVENT.NO%
 109: 0000: 
 110: 0000:       INTEGER*2 APPLICATION.LOG,                                       \ GAW
 111: 0000:                 MESSAGE.NO%
 112: 0000: 
 113: 0000:       STRING VAR.STRING.1$,                                            \
 114: 0000:              VAR.STRING.2$
 115: 0000: 
 116: 0000:    END FUNCTION
 117: 0000: 
 118: 0000: \*******************************************************************************
 119: 0000: 
 120: 0000: \***...........................................................................
 121: 0000: \***
 122: 0000: \***  Define function parameters and program variables.
 123: 0000: \***
 124: 0000: \*******************************************************************************
 125: 0000: 
 126: 0000:    FUNCTION CONV.TO.STRING  (EVENT.NO%,                                \
 127: 0000:                  INTEGER.4%)  PUBLIC
 128: 0014:    ! 3 parameters removed from here                                    ! BAW
 129: 0014: 
 130: 0014: 
 131: 0014:    STRING  VAR.STRING.1$,                                              \
 132: 0014:            VAR.STRING.2$
 133: 0014:    ! 3 variables deleted from here                                     ! BAW
 134: 0014:    
 135: 0014: 
 136: 0014:    INTEGER*1  EVENT.NO%,                                               \
 137: 0014:               EVENT.NUM%
 138: 0014: 
 139: 0014:    INTEGER*2  CONV.TO.STRING,                                          \ BAW
 140: 0014:               MESSAGE.NO%,                                             \
 141: 0014:           RC%                                                      ! BAW
 142: 0014: 
 143: 0014:    INTEGER*4  COUNT%,                                                  \
 144: 0014:               DIGIT%,                                                  \
 145: 0014:               INTEGER.4%
 146: 0014: 
 147: 0014: 
 148: 0014: \***...........................................................................
 149: 0014: \***
 150: 0014: \***   REM start of mainline code
 151: 0014: \***
 152: 0014: \***   ON ERROR GOTO ERROR.DETECTED
 153: 0014: \***
 154: 0014: \***   set CONV.TO.STRING to 0
 155: 0014: \***
 156: 0014: \***   set F17.RETURNED.STRING$ to null
 157: 0014: \***
 158: 0014: \***   FOR count from 24 TO 0 STEP -8
 159: 0014: \***
 160: 0014: \***      SHIFT integer by count and place result in digit
 161: 0014: \***      set F17.RETURNED.STRING$ to F17.RETURNED.STRING$ + CHR$(digit)
 162: 0014: \***
 163: 0014: \***   NEXT count
 164: 0014: \***
 165: 0014: \***   EXIT FUNCTION to calling program
 166: 0014: \***
 167: 0014: \***...........................................................................
 168: 0014: 
 169: 0014:       ON ERROR GOTO ERROR.DETECTED
 170: 0021: 
 171: 0021:       CONV.TO.STRING = 0
 172: 0026:       F17.RETURNED.STRING$ = ""
 173: 0035: 
 174: 0035:       FOR COUNT% = 24 TO 0 STEP -8
 175: 0044:           DIGIT% = SHIFT(INTEGER.4%, COUNT%) 
 176: 0064:           F17.RETURNED.STRING$ = F17.RETURNED.STRING$ + CHR$(DIGIT%)
 177: 008a:       NEXT COUNT%
 178: 00ac: 
 179: 00ac:       EXIT FUNCTION
 180: 00af: 
 181: 00af: \*********************** subroutine follows ************************************
 182: 00af: \*******************************************************************************
 183: 00af: \***
 184: 00af: \***   ERROR.DETECTED:
 185: 00af: \***
 186: 00af: \***   set CONV.TO.STRING to 1
 187: 00af: \***   CALL APPLICATION.LOG function to log error 707, event number 19
 188: 00af: \***
 189: 00af: \***   IF batch/screen flag = "S" THEN
 190: 00af: \***      EXIT FUNCTION
 191: 00af: \***   ELSE
 192: 00af: \***      STOP processing
 193: 00af: \***   ENDIF
 194: 00af: \***
 195: 00af: \***...........................................................................
 196: 00af: 
 197: 00af:    ERROR.DETECTED:
 198: 00af: 
 199: 00af:       CONV.TO.STRING = 1
 200: 00b4:       VAR.STRING.1$ = CHR$(EVENT.NO%)
 201: 00c7:       VAR.STRING.2$ = VAR.STRING.2$ + STR$(INTEGER.4%)
 202: 00e6:       EVENT.NUM% = 19
 203: 00eb:       MESSAGE.NO% = 707
 204: 00f1:       RC% = APPLICATION.LOG (MESSAGE.NO%,                              \ BAW
 205: 0115:                              VAR.STRING.1$,                            \
 206: 0115:                              VAR.STRING.2$,                            \
 207: 0115:                              EVENT.NUM%)
 208: 0115:       ! 3 parameters removed from here                                 ! BAW                 
 209: 0115: 
 210: 0115:       IF BATCH.SCREEN.FLAG$ = "S" THEN                                 \
 211: 012b:          EXIT FUNCTION                                                :\
 212: 012f:       ELSE                                                             \
 213: 012f:          STOP
 214: 0134: 
 215: 0134: 
 216: 0134: \*******************************************************************************
 217: 0134: \***
 218: 0134: \***   END FUNCTION
 219: 0134: \***
 220: 0134: \*******************************************************************************
 221: 0134: \*******************************************************************************
 222: 0134: REM end of pseudocode
 223: 0134: 
 224: 0134:    END FUNCTION
 225: 0143: 
 226: 0143: END
 227: 0143: End of Compilation
