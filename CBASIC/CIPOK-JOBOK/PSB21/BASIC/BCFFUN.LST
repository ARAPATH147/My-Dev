   1: 0000: \*****************************************************************************
   2: 0000: \***            Branch control file functions
   3: 0000: \***      Version A           Steve Windsor               5.2.93
   4: 0000: \***
   5: 0000: \***      Version B           Michael J. Kelsall         14th Sept 1993
   6: 0000: \***      Addition of CCMVT serial and sequence number as part of the
   7: 0000: \***      RETURNS/AUTOMATIC CREDIT CLAIMING system.
   8: 0000: \***
   9: 0000: \***      Version C           Stuart William McConnachie 23rd Jan 1995
  10: 0000: \***      Addition of TXR serial number as part of the TRANSACTION RETRIEVAL
  11: 0000: \***      project.
  12: 0000: \***
  13: 0000: \***      Version D           Stuart William McConnachie  7th June 1995
  14: 0000: \***      Converted calls to enable more than 1 record on the BCF.
  15: 0000: \***      The second record is to be used for the No7 customer card trial.
  16: 0000: \***
  17: 0000: \***      Version E           Stuart William McConnachie  24th Jan 1997
  18: 0000: \***      Added serial number on CUSTD file for advantage card national
  19: 0000: \***      rollout.
  20: 0000: \***      Added cut-off dates for CUSTD and MTSL.
  21: 0000: \***
  22: 0000: \***      Version F           Stuart Highley              7th April 1999
  23: 0000: \***      Added serial number on ACSAL for new cash accounting.
  24: 0000: \***
  25: 0000: \***      Version G           Mark Goode                   4th May 2000
  26: 0000: \***      New record added for use for Dentistry.
  27: 0000: \***
  28: 0000: \***      Version H           Mark Goode                   18th July 2000
  29: 0000: \***      New record added for use for Well-being.
  30: 0000: \***
  31: 0000: \***      Version I           Amy Hoggard                  13th Oct 2000
  32: 0000: \***      New record added for use for ECO.
  33: 0000: \***
  34: 0000: \***      Version J           Jamie Thorpe                 11th Jan 2001
  35: 0000: \***      Amended BCF.DENTISTRY.PRODUCT.GROUP$ & BCF.WELL.PRODUCT.GROUP$ read
  36: 0000: \***      and write lengths from 70 to 71
  37: 0000: \***
  38: 0000: \***      Version K           Brian Greenfield             1st May 2001
  39: 0000: \***      Added BCF.WELL.SERV.PRODUCT.GROUP$ for use in new record 13 to
  40: 0000: \***      contain any wellbeing services not covered in records 9 & 10.
  41: 0000: \***
  42: 0000: \***      Version L           Amy Hoggard                  4th Jan 2002
  43: 0000: \***      Added new field in record 13 for ETOPUP product group.
  44: 0000: \***
  45: 0000: \***      Version M           Julia Stones                22nd July 2002
  46: 0000: \***      Added BCF.DEALDIR.SERIAL.NUM$ and BCF.DIDIR.SERIAL.NUM$ for use in
  47: 0000: \***      new record 14 to contain last serial numbers processed successfully
  48: 0000: \***      on both files.  Added BCF.DEAL.NUM.REC$ and BCF.DINF.NUM.REC$
  49: 0000: \***      to new record 14 these fields will contain the value of the number of
  50: 0000: \***      records to be used when creating an empty keyed file.
  51: 0000: \***      Added BCF.DEAL.KEY.LEN$ and BCF.DINF.KEY.LEN$ to new record 14
  52: 0000: \***      these fields will contain the value of the key length of both files
  53: 0000: \***      to be used when creating an empty keyed file.
  54: 0000: \***
  55: 0000: \***    Revision 4.6            ROBERT COWEY.            19 MAY 2003.
  56: 0000: \***    Modifications for All Txn Data To CDAS project.
  57: 0000: \***    Removed redundant variables ...
  58: 0000: \***      BCF.CTSL1.SERIAL.NUM$, BCF.CTSL2,SERIAL.NUM$
  59: 0000: \***    Defined new variables ...
  60: 0000: \***      BCF.MTSLQ.DAYS$, BCF.FILLER67$
  61: 0000: \***
  62: 0000: \***    Revision 4.7            Julia Stones              9th July 2003
  63: 0000: \***    Modifications for New Lines Report poject.
  64: 0000: \***    Defined new variable
  65: 0000: \***      BCF.NEWLINES.WEEKS$
  66: 0000: \***    Amended existing variable was 73 bytes now 70 bytes
  67: 0000: \***      BCF.TBAG.FILLER$
  68: 0000: \***
  69: 0000: \***    Revision 4.8            Julia Stones              3rd October 2003
  70: 0000: \***    Modifications for New Lines Report poject.
  71: 0000: \***    Defined new variable
  72: 0000: \***      BCF.NEWLINES.LINES$
  73: 0000: \***    Amended existing variable was 70 bytes now 65 bytes
  74: 0000: \***      BCF.TBAG.FILLER$
  75: 0000: \***
  76: 0000: \***      Version N           Jamie Thorpe                27th June 2006
  77: 0000: \***      Added BCF.DVCHR.SERIAL.NUM$ (Record 14)
  78: 0000: \***
  79: 0000: \***    Revision 4.10          Charles Skadorwa            4th July 2011
  80: 0000: \***    CORE Heritage Stores Release 2 (Outbound) Project.
  81: 0000: \***    Functionality added to all read and write functions for the new
  82: 0000: \***    format record 14, and the new record 20.
  83: 0000: \***
  84: 0000: \***    Revision 4.11          Arun Sudhakaran             10th April 2013
  85: 0000: \***    Defined new variables for getting Supplier Number lengths
  86: 0000: \***    as part of Automatic Booking In of Chilled Food ASNs project
  87: 0000: \***
  88: 0000: \***    Revision 4.12          Charles Skadorwa            5th Sept 2013
  89: 0000: \***    F261 Gift Card Mall IIN Range Extension Project - Commented !4.12 CSk
  90: 0000: \***    Set new variables for GCM Product Group Number length and Record 22
  91: 0000: \***    lengths.
  92: 0000: \***
  93: 0000: \***    Version O              Mark Walker                  3rd Feb 2014
  94: 0000: \***    F337 Centralised View of Stock
  95: 0000: \***    - Added functions for record 23 (stock snapshot parameters).
  96: 0000: \***    - Minor formatting changes (uncommented).
  97: 0000: \***
  98: 0000: \***    Version P              Mark Walker                 12th Mar 2014
  99: 0000: \***    F337 Centralised View of Stock
 100: 0000: \***    The following changes were made following a coding standards
 101: 0000: \***    review by Applications Management:
 102: 0000: \***    - Added comment header block for record 23 processing.
 103: 0000: \***
 104: 0000: \***    Revision Q             Charles Skadorwa            25th June 2014
 105: 0000: \***    F353 Deal Limits Increase Project.
 106: 0000: \***    Renamed 3 variables in function BCF.RECORD.14.W -
 107: 0000: \***        BCF.DINF.NUM.REC$ becomes BCF.ITMDL.NUM.REC$
 108: 0000: \***        BCF.DINF.KEY.LEN$ becomes BCF.ITMDL.KEY.LEN$
 109: 0000: \***        BCF.ECC.DATETIMESTAMP$ becomes BCF.FILLER.DATETIMESTAMP$
 110: 0000: \***
 111: 0000: \*******************************************************************************
 112: 0000: 
 113: 0000:     INTEGER*2 GLOBAL                                                    \
 114: 0000:         CURRENT.REPORT.NUM%
 115: 0000: 
 116: 0000:     STRING GLOBAL                                                       \
 117: 0000:        CURRENT.CODE$,                                                   \
 118: 0000:        FILE.OPERATION$
 119: 0000: 
 120: 0000: %INCLUDE BCFDEC.J86
 121: 0000: \*****************************************************************************
 122: 0000: \*****************************************************************************
 123: 0000: \***
 124: 0000: \***               %INCLUDE FOR BCF - FIELD DECLARATIONS
 125: 0000: \***                                  FILE REFERENCE PARAMETERS
 126: 0000: \***
 127: 0000: \***                      FILE TYPE    : SEQUENTIAL
 128: 0000: \***
 129: 0000: \***                      REFERENCE    : BCFDEC.J86
 130: 0000: \***
 131: 0000: \***      Version A             Steve Windsor          5th Jan 1993
 132: 0000: \***
 133: 0000: \***      Version B             Michael J. Kelsall    01st Dec 1993
 134: 0000: \***      Addition to file of CCMVT serial number as part of
 135: 0000: \***      RETURNS/AUTOMATIC CREDIT CLAIMING package.
 136: 0000: \***
 137: 0000: \***      Version C           Stuart William McConnachie 23rd Jan 1995
 138: 0000: \***      Addition of TXR serial number as part of the TRANSACTION RETRIEVAL
 139: 0000: \***      project.
 140: 0000: \***
 141: 0000: \***      Version D           Stuart William McConnachie  7th June 1995
 142: 0000: \***      Converted calls to enable more than 1 record on the BCF.
 143: 0000: \***      The second record is to be used for the No7 customer card trial.
 144: 0000: \***
 145: 0000: \***      Version E                 Stuart Highley        7th April 1999
 146: 0000: \***      Added new fields for cash accounting.
 147: 0000: \***
 148: 0000: \***      Version F                 Mark Goode            20th May 2000
 149: 0000: \***      Added new fields for Dentistry project.
 150: 0000: \***
 151: 0000: \***      Version G                 Mark Goode            18th July 2000
 152: 0000: \***      Added new fields for Well-Being project.
 153: 0000: \***
 154: 0000: \***      Version I                 Amy Hoggard           13th Oct 2000
 155: 0000: \***      Added new fields for ECO project.
 156: 0000: \***
 157: 0000: \***      Version K                 Brian Greenfield      1st May 2001
 158: 0000: \***      Added new field for Wellbeing Services record 13.
 159: 0000: \***
 160: 0000: \***      Version L                 Amy Hoggard           4th Jan 2002
 161: 0000: \***      Added new field for ETOPUP project.
 162: 0000: \***
 163: 0000: \***      Version M                 Julia Stones          22nd July 2002
 164: 0000: \***      Added new fields for Deals rewrite project record 14.
 165: 0000: \***
 166: 0000: \***    Revision 4.6            ROBERT COWEY.            19 MAY 2003.
 167: 0000: \***    Modifications for All Txn Data To CDAS project.
 168: 0000: \***    Removed redundant variables ...
 169: 0000: \***      BCF.CTSL1.SERIAL.NUM$, BCF.CTSL2,SERIAL.NUM$
 170: 0000: \***    Defined new variable ...
 171: 0000: \***      BCF.MTSLQ.DAYS$, BCF.FILLER67$
 172: 0000: \***
 173: 0000: \***    Revision 4.7           Julia Stones              9th July 2003.
 174: 0000: \***    Modifications for New Lines Report project.
 175: 0000: \***    Defined new variable
 176: 0000: \***    BCF.NEWLINES.WEEKS$
 177: 0000: \***
 178: 0000: \***    Revision 4.8           Julia Stones              3rd October 2003.
 179: 0000: \***    Modifications for New Lines Report project.
 180: 0000: \***    Defined new variable
 181: 0000: \***    BCF.NEWLINES.LINES$
 182: 0000: \***
 183: 0000: \***    Version N              Jamie Thorpe             27th June 2006
 184: 0000: \***    Added BCF.DVCHR.SERIAL.NUM$
 185: 0000: \***
 186: 0000: \***    Revision 4.10          Charles Skadorwa            4th July 2011
 187: 0000: \***    CORE Heritage Stores Release 2 (Outbound) Project.
 188: 0000: \***    New variables defined: BCF.ECC.DATETIMESTAMP$
 189: 0000: \***                           BCF.IUF.DATETIMESTAMP$
 190: 0000: \***
 191: 0000: \***    Revision 4.11          Arun Sudhakaran             10th April 2013
 192: 0000: \***    Added new variables for including Supplier Number lengths
 193: 0000: \***    as part of Automatic Booking In of Chilled Food ASNs project
 194: 0000: \***
 195: 0000: \***    Revision 4.12          Charles Skadorwa            5th Sept 2013
 196: 0000: \***    F261 Gift Card Mall IIN Range Extension Project - Commented !4.12 CSk
 197: 0000: \***    Defined new variables for GCM Product Group Number and Record 22
 198: 0000: \***    lengths.
 199: 0000: \***
 200: 0000: \***    Version O              Mark Walker                  3rd Feb 2014
 201: 0000: \***    F337 Centralised View of Stock
 202: 0000: \***    - Defined variables for record 23 (stock snapshot parameters).
 203: 0000: \***    - Minor formatting changes (uncommented).
 204: 0000: \***
 205: 0000: \***    Revision O             Charles Skadorwa             25th June 2014
 206: 0000: \***    F353 Deal Limits Increase Project.
 207: 0000: \***    Renamed 3 variables in function BCF.RECORD.14.W -
 208: 0000: \***        BCF.DINF.NUM.REC$ becomes BCF.ITMDL.NUM.REC$
 209: 0000: \***        BCF.DINF.KEY.LEN$ becomes BCF.ITMDL.KEY.LEN$
 210: 0000: \***        BCF.ECC.DATETIMESTAMP$ becomes BCF.FILLER.DATETIMESTAMP$
 211: 0000: \*****************************************************************************
 212: 0000: \*****************************************************************************
 213: 0000: 
 214: 0000:     STRING GLOBAL                                                       \
 215: 0000:         BCF.FILE.NAME$
 216: 0000: 
 217: 0000:     INTEGER*2 GLOBAL                                                    \
 218: 0000:         BCF.RECL%,                                                      \   !OMW
 219: 0000:         BCF.REPORT.NUM%,                                                \
 220: 0000:         BCF.SESS.NUM%
 221: 0000: 
 222: 0000:     STRING GLOBAL                                                       \
 223: 0000:     BCF.RECORD$,          \ 80 bytes
 224: 0000:     BCF.IUF.SERIAL.NO$,   \ 5 bytes, IUF serial number
 225: 0000:     BCF.OPEN.DATE$,       \ 6 bytes, Last store opening date (YYMMDD)
 226: 0000:     BCF.FILLER.DATE$,     \ 3 bytes, filler
 227: 0000:     BCF.LABEL.DATE$,      \ 6 bytes, label print date (YYMMDD)
 228: 0000:     BCF.SALES.SERIAL.NO$ ,\ 5 bytes, sales serial number
 229: 0000:     BCF.STMVB.SERIAL.NO$, \ 5 bytes, current serial number          \
 230: 0000:                               \     of Stock Movement Backup file       \
 231: 0000:     BCF.TOF.DAYS$,        \ 2 bytes, number of days' worth of sales to \
 232: 0000:                           \       be held on the TIF at re-build       \
 233: 0000:         BCF.EPS.BATCH$,       \ 2 bytes, highest batch number to have   \
 234: 0000:                               \     been reported upon by PSE31         \
 235: 0000:     BCF.NO.EPF.COPIES$,   \ 2 bytes, no. of copies of EPS payment file \
 236: 0000:     BCF.CCMVT.SERIAL.NUM$,\ 5 bytes ASC                                ! BMJK
 237: 0000:     BCF.TXR.SERIAL.NUM$,  \ 5 bytes transaction retrieval serial number!SWM
 238: 0000:     BCF.CUSTD.SERIAL.NUM$,\ 5 bytes customer data file serial number   !SWM
 239: 0000:     BCF.PSB58.DATE$,      \ 6 bytes date of last MTSL/CUSTW cut-off    !SWM
 240: 0000:     BCF.CTSL1.SERIAL.NUM$,\ 5 bytes serial number on first MTSLQ (and  ! 4.6 RC
 241: 0000:                           \         thereore CTSL1) batch header       ! 4.6 RC
 242: 0000:     BCF.MTSLQ.DAYS$,      \ 2 byte MTSLQ data retention period (PSB14) ! 4.6 RC
 243: 0000:     BCF.FILLER67$,        \ 8 bytes filler beginning at byte 67        ! 4.6 RC
 244: 0000:         BCF.NTIUF.SERIAL.NO$,                                           \   !FMG
 245: 0000:         BCF.DENTISTRY.PSAUDIT.SERIAL.NO$,                               \   !FMG
 246: 0000:         BCF.WELL.SERIAL.NO$,                                            \   !GMG
 247: 0000:         BCF.WELL.PSAUDIT.SERIAL.NO$,                                    \   !GMG
 248: 0000:     BCF.ACSAL.SERIAL.NUM$,\ 5 bytes serial number on ACSAL             !ESDH
 249: 0000:     BCF.DENTISTRY.PRODUCT.GROUP$,                                      \FMG
 250: 0000:     BCF.WELL.PRODUCT.GROUP$,                                           \GMG
 251: 0000:     BCF.FILLER$,         \! 1 byte, filler                             !BMJK
 252: 0000:     BCF.WELL.SERV.PRODUCT.GROUP$,                                      \KBG
 253: 0000:         BCF.ETOPUP.PROD.GRP$,                                           \   !LAH
 254: 0000:         BCF.END.FILLER$,                                                \   !LAH
 255: 0000:     BCF.TBAG.BATCH.NO$,                                                \IAH
 256: 0000:     BCF.TBAG.DAYS.KEPT$,                                               \IAH
 257: 0000:     BCF.NEWLINES.WEEKS$,                                               \4.7JAS
 258: 0000:     BCF.NEWLINES.LINES$,                                               \4.8JAS
 259: 0000:     BCF.TBAG.FILLER$,                                                  \ 79 Bytes filler !IAH 70 Bytes filler 4.7JAS ! 65 Bytes fille 4.8JAS
 260: 0000:     BCF.DEALDIR.SERIAL.NUM$, \ 4 bytes serial number                   !MJAS
 261: 0000:     BCF.DIDIR.SERIAL.NUM$,   \ 4 bytes serial number                   !MJAS
 262: 0000:     BCF.DEAL.NUM.REC$,       \ 6 bytes number of records in deal file  !MJAS
 263: 0000:     BCF.ITMDL.NUM.REC$,      \ 6 bytes number of records in ITMDL file !OCS
 264: 0000:     BCF.DEAL.KEY.LEN$,       \ 3 bytes key length of deal file         !MJAS
 265: 0000:     BCF.ITMDL.KEY.LEN$,      \ 3 bytes bytes ITMDL record key length   !OCS
 266: 0000:     BCF.DVCHR.SERIAL.NUM$,   \ 4 bytes serial numbr                    !NJT !4.10CSk
 267: 0000:     BCF.FILLER.DATETIMESTAMP$,\17 bytes filler for future use          !OCS
 268: 0000:     BCF.IUF.DATETIMESTAMP$, \ !17 bytes timestamp YYYYMMDDHHMMSSsss     !4.10CSk
 269: 0000:                             \ !   Last successfully processed IUF from SAP.
 270: 0000:         BCF.ITEM.STATUS$(1),     \1 byte array, item status             \   !OMW
 271: 0000:         BCF.NEGATIVE.STOCK.FLAG$(1), \1 byte array, Flag (Y/N) whether  \   !OMW
 272: 0000:                                  \   to include items with a negative   \   !OMW
 273: 0000:                                  \   stock figure in the initial stock  \   !OMW
 274: 0000:                                  \   snapshot messages.                 \   !OMW
 275: 0000:         BCF.POSITIVE.STOCK.FLAG$(1), \1 byte array, Flag (Y/N) whether  \   !OMW
 276: 0000:                                  \   to include items with a positive   \   !OMW
 277: 0000:                                  \   stock figure in the initial stock  \   !OMW
 278: 0000:                                  \   snapshot messages.                 \   !OMW
 279: 0000:         BCF.ZERO.STOCK.FLAG$(1)  !1 byte array, Flag (Y/N) whether to   \   !OMW
 280: 0000:                                  \   include items with a zero          \   !OMW
 281: 0000:                                  \   stock figure in the initial stock  \   !OMW
 282: 0000:                                  !   snapshot messages.                     !OMW
 283: 0000:                 
 284: 0000:     INTEGER*1                                                           \
 285: 0000:         BCF.NO.CPM.COPIES%
 286: 0000: 
 287: 0000:     INTEGER*2 GLOBAL                                                    \
 288: 0000:     BCF.CC.SERIAL.NO,        \ 1 byte UPD, CC serial number
 289: 0000:         BCF.MAX.STATUS.COUNT%,        \ Maximum number of item status   \   !OMW
 290: 0000:     BCF.REC21.REC.LEN%,      \ Total Supplier number length            !4.11 AS
 291: 0000:     BCF.REC21.SUPPLIER.LEN%, \ Length of the supplier number           !4.11 AS
 292: 0000:         BCF.MAX.STOCK.INIT.MESSAGES%, \ Maximum number of initial       \   !OMW
 293: 0000:                                       \ stock snapshot message to       \   !OMW
 294: 0000:                                       \ send per day.                   \   !OMW
 295: 0000:         BCF.MAX.STOCK.INIT.ITEMS%,    \ Maximum number of items to      \   !OMW
 296: 0000:                                       \ include in a single initial     \   !OMW
 297: 0000:                                       \ stock snapshot message.         \   !OMW
 298: 0000:         BCF.NEGATIVE.DAYS%(1),        \ Number of days' movements with  \   !OMW
 299: 0000:                                       \ a negative stock figure to      \   !OMW
 300: 0000:                                       \ include in the initial stock    \   !OMW
 301: 0000:                                       \ snapshot messages.              \   !OMW
 302: 0000:         BCF.POSITIVE.DAYS%(1),        \ Number of days' movements with  \   !OMW
 303: 0000:                                       \ a positive stock figure to      \   !OMW
 304: 0000:                                       \ include in the initial stock    \   !OMW
 305: 0000:                                       \ snapshot messages.              \   !OMW
 306: 0000:         BCF.REC22.REC.LEN%,           \                                 \   !4.12 CSk
 307: 0000:         BCF.REC22.PROD.GROUP.LEN%,    \ Length of GCM Product Group No  \   !4.12 CSk
 308: 0000:         BCF.ZERO.DAYS%(1)             \ Number of days' movements with  \   !OMW
 309: 0000:                                       \ a zero stock figure to include  \   !OMW
 310: 0000:                                       \ in the initial stock snapshot   \   !OMW
 311: 0000:                                       ! messages.                           !OMW
 312: 0000: 
 313: 0000: 
 314: 0000:     INTEGER*4 GLOBAL                                                    \
 315: 0000:         BCF.REC.NO%
 316: 0000: 
 317: 0000: 
 318: 0000: FUNCTION BCF.SET PUBLIC
 319: 0014: 
 320: 0014:     !Changed the variable definitions in alphabetical order                 !4.11 AS
 321: 0014:     !and added new variable definitions.                                    !4.11 AS
 322: 0014:     BCF.FILE.NAME$            = "BRCF"                                      !4.11 AS
 323: 0023:     BCF.REC21.REC.LEN%        = 78      !Total Supplier number length       !4.11 AS
 324: 002c:     BCF.REC21.SUPPLIER.LEN%   = 6       !Length of the supplier number      !4.11 AS
 325: 0035:     BCF.REC22.REC.LEN%        = 78      !Total GCM record length            !4.12 CSk
 326: 003e:     BCF.REC22.PROD.GROUP.LEN% = 5       !Length of GCM Product Group No     !4.12 CSk
 327: 0047:     BCF.MAX.STATUS.COUNT%     = 4       !Maximum item status records        !OMW
 328: 0050:     BCF.RECL%                 = 84                                          !4.11 AS
 329: 0059:     BCF.REPORT.NUM%           = 33                                          !4.11 AS
 330: 0062: 
 331: 0062: END FUNCTION
 332: 006e: 
 333: 006e: FUNCTION BCF.RECORD.1.SPLIT                                                 !SWM
 334: 0082: 
 335: 0082:     BCF.IUF.SERIAL.NO$    = MID$(BCF.RECORD$,1,5)
 336: 00a1:     BCF.CC.SERIAL.NO      = VAL(UNPACK$(MID$(BCF.RECORD$,6,1)))
 337: 00cb:     BCF.OPEN.DATE$        = MID$(BCF.RECORD$,7,6)
 338: 00ea:     BCF.FILLER.DATE$      = MID$(BCF.RECORD$,13,3)
 339: 0109:     BCF.LABEL.DATE$       = MID$(BCF.RECORD$,16,6)
 340: 0128:     BCF.SALES.SERIAL.NO$  = MID$(BCF.RECORD$,22,5)
 341: 0147:     BCF.STMVB.SERIAL.NO$  = MID$(BCF.RECORD$,27,5)
 342: 0166:     BCF.TOF.DAYS$         = MID$(BCF.RECORD$,32,2)
 343: 0185:     BCF.EPS.BATCH$        = MID$(BCF.RECORD$,34,2)
 344: 01a4:     BCF.NO.CPM.COPIES%    = VAL(MID$(BCF.RECORD$,36,1))
 345: 01c5:     BCF.NO.EPF.COPIES$    = MID$(BCF.RECORD$,37,2)
 346: 01e4:     BCF.CCMVT.SERIAL.NUM$ = MID$(BCF.RECORD$,39,5)                          !BMJK
 347: 0203:     BCF.TXR.SERIAL.NUM$   = MID$(BCF.RECORD$,44,5)                          !SWM
 348: 0222:     BCF.CUSTD.SERIAL.NUM$ = MID$(BCF.RECORD$,49,5)                          !SWM
 349: 0241:     BCF.PSB58.DATE$       = MID$(BCF.RECORD$,54,6)                          !SWM
 350: 0260:     BCF.CTSL1.SERIAL.NUM$ = MID$(BCF.RECORD$,60,5)                          !SWM
 351: 027f:     BCF.MTSLQ.DAYS$       = MID$(BCF.RECORD$,65,2)                          !4.6 RC
 352: 029e:     BCF.FILLER67$         = MID$(BCF.RECORD$,67,8)                          !4.6 RC
 353: 02bd:     BCF.ACSAL.SERIAL.NUM$ = MID$(BCF.RECORD$,75,5)                          !FSH
 354: 02dc:     BCF.FILLER$           = MID$(BCF.RECORD$,80,1)                          !FSH
 355: 02fb: 
 356: 02fb:     END FUNCTION                                                            !SWM
 357: 0307: 
 358: 0307: FUNCTION BCF.RECORD.1.CONCAT                                                !SWM
 359: 031b: 
 360: 031b:     BCF.RECORD$ = BCF.IUF.SERIAL.NO$ +                                  \
 361: 0458:                   RIGHT$(PACK$("00"+STR$(BCF.CC.SERIAL.NO)),1) +        \
 362: 0458:                   BCF.OPEN.DATE$     + BCF.FILLER.DATE$     +           \
 363: 0458:                   BCF.LABEL.DATE$    + BCF.SALES.SERIAL.NO$ +           \
 364: 0458:                   BCF.STMVB.SERIAL.NO$ + BCF.TOF.DAYS$ +                \
 365: 0458:                   BCF.EPS.BATCH$ + STR$(BCF.NO.CPM.COPIES%) +           \
 366: 0458:                   BCF.NO.EPF.COPIES$ +                                  \
 367: 0458:                   BCF.CCMVT.SERIAL.NUM$ +                               \   !BMJK
 368: 0458:                   BCF.TXR.SERIAL.NUM$ +                                 \   !SWM
 369: 0458:                   BCF.CUSTD.SERIAL.NUM$ +                               \   !SWM
 370: 0458:                   BCF.PSB58.DATE$ +                                     \   !SWM
 371: 0458:                   BCF.CTSL1.SERIAL.NUM$ +                               \   !SWM
 372: 0458:                   BCF.MTSLQ.DAYS$       +                               \   !4.6 RC
 373: 0458:                   BCF.FILLER67$         +                               \   !4.6 RC
 374: 0458:                   BCF.ACSAL.SERIAL.NUM$ +                               \   !FSH
 375: 0458:                   BCF.FILLER$
 376: 0458: 
 377: 0458: END FUNCTION                                                                !SWM
 378: 0464: 
 379: 0464: \ DENTISTRY
 380: 0464: 
 381: 0464: FUNCTION BCF.RECORD.9.WNT                                                   !GMG
 382: 0478: 
 383: 0478:     BCF.RECORD$ = BCF.NTIUF.SERIAL.NO$ +                                \   !GMG
 384: 04a7:                   BCF.FILLER$          +                                \   !GMG
 385: 04a7:                   BCF.DENTISTRY.PRODUCT.GROUP$                              !GMG
 386: 04a7: 
 387: 04a7: END FUNCTION                                                                !GMG
 388: 04b3: 
 389: 04b3: FUNCTION BCF.RECORD.9.RNT                                                   !GMG
 390: 04c7: 
 391: 04c7:     BCF.NTIUF.SERIAL.NO$         = MID$(BCF.RECORD$,1,3)                    !GMG
 392: 04e6:     BCF.FILLER$                  = MID$(BCF.RECORD$,4,6)                    !GMG
 393: 0505:     BCF.DENTISTRY.PRODUCT.GROUP$ = MID$(BCF.RECORD$,10,71)                  !JJT
 394: 0524: 
 395: 0524: END FUNCTION
 396: 0530: 
 397: 0530: \ WELL-BEING
 398: 0530: 
 399: 0530: FUNCTION BCF.RECORD.10.WWNT                                                 !HMG
 400: 0544: 
 401: 0544:     BCF.RECORD$ = BCF.WELL.SERIAL.NO$ +                                 \   !HMG
 402: 0573:                   BCF.FILLER$          +                                \   !HMG
 403: 0573:                   BCF.WELL.PRODUCT.GROUP$                                   !HMG
 404: 0573: 
 405: 0573: END FUNCTION                                                                !HMG
 406: 057f: 
 407: 057f: FUNCTION BCF.RECORD.10.RWNT                                                 !HMG
 408: 0593: 
 409: 0593:     BCF.WELL.SERIAL.NO$ = MID$(BCF.RECORD$,1,3)                             !HMG
 410: 05b2:     BCF.FILLER$            = MID$(BCF.RECORD$,4,6)                          !HMG
 411: 05d1:     BCF.WELL.PRODUCT.GROUP$     = MID$(BCF.RECORD$,10,71)                   !JJT
 412: 05f0: 
 413: 05f0: END FUNCTION
 414: 05fc: 
 415: 05fc: \ ECO/TBAG
 416: 05fc: 
 417: 05fc: FUNCTION BCF.RECORD.11.R                                                    !IAH
 418: 0610: 
 419: 0610:     BCF.TBAG.BATCH.NO$  = MID$(BCF.RECORD$,1,5)                             !IAH
 420: 062f:     BCF.TBAG.DAYS.KEPT$ = MID$(BCF.RECORD$,6,2)                             !IAH
 421: 064e:     BCF.NEWLINES.WEEKS$ = MID$(BCF.RECORD$,8,3)                             !4.7JAS
 422: 066d:     BCF.NEWLINES.LINES$ = MID$(BCF.RECORD$,11,5)                            !4.8JAS
 423: 068c:     BCF.TBAG.FILLER$    = MID$(BCF.RECORD$,16,65)                           !4.8JAS
 424: 06ab: 
 425: 06ab: END FUNCTION
 426: 06b7: 
 427: 06b7: FUNCTION BCF.RECORD.11.W                                                    !IAH
 428: 06cb: 
 429: 06cb:     BCF.RECORD$ = BCF.TBAG.BATCH.NO$ +                                  \
 430: 0710:                   BCF.TBAG.DAYS.KEPT$ +                                 \   !IAH
 431: 0710:                   BCF.NEWLINES.WEEKS$ +                                 \
 432: 0710:                   BCF.NEWLINES.LINES$ +                                 \   !4.8JAS
 433: 0710:                   BCF.TBAG.FILLER$                                          !4.7JAS
 434: 0710: 
 435: 0710: END FUNCTION
 436: 071c: 
 437: 071c: 
 438: 071c: \ WELL-BEING SERVICES                                                       !KBG
 439: 071c: 
 440: 071c: FUNCTION BCF.RECORD.13.W                                                    !KBG
 441: 0730: 
 442: 0730:     BCF.RECORD$ = BCF.FILLER$ +                                         \   !KBG
 443: 077e:                   LEFT$(BCF.WELL.SERV.PRODUCT.GROUP$,65) +              \   !KBG
 444: 077e:                   BCF.ETOPUP.PROD.GRP$ +                                \   !LAH
 445: 077e:                   BCF.END.FILLER$                                           !LAH
 446: 077e: 
 447: 077e: END FUNCTION                                                                !KBG
 448: 078a: 
 449: 078a: FUNCTION BCF.RECORD.13.R                                                    !KBG
 450: 079e: 
 451: 079e:     BCF.FILLER$                  = MID$(BCF.RECORD$,1,9)                    !KBG
 452: 07bd:     BCF.WELL.SERV.PRODUCT.GROUP$ = MID$(BCF.RECORD$,10,70)                  !KBG
 453: 07dc:     BCF.ETOPUP.PROD.GRP$         = MID$(BCF.RECORD$,75,5)                   !LAH
 454: 07fb:     BCF.END.FILLER$              = MID$(BCF.RECORD$,80,1)                   !LAH
 455: 081a: 
 456: 081a: END FUNCTION                                                                !KBG
 457: 0826: 
 458: 0826: \ DEALDIR & DIDIR serial numbers                                            !MJAS
 459: 0826: 
 460: 0826: FUNCTION BCF.RECORD.14.W                                                    !MJAS
 461: 083a: 
 462: 083a:     BCF.RECORD$ = BCF.DEALDIR.SERIAL.NUM$ +                             \   !MJAS
 463: 08ab:                   BCF.DIDIR.SERIAL.NUM$   +                             \   !MJAS
 464: 08ab:                   BCF.DEAL.NUM.REC$       +                             \   !MJAS
 465: 08ab:                    BCF.ITMDL.NUM.REC$      +                           \ QCS
 466: 08ab:                   BCF.DEAL.KEY.LEN$       +                             \   !MJAS
 467: 08ab:                    BCF.ITMDL.KEY.LEN$      +                           \ QCS
 468: 08ab:                   BCF.DVCHR.SERIAL.NUM$   +                             \   !NJT
 469: 08ab:                    BCF.FILLER.DATETIMESTAMP$  +                        \ QCS
 470: 08ab:                   BCF.FILLER$                                               !MJAS
 471: 08ab: 
 472: 08ab: END FUNCTION                                                                !MJAS
 473: 08b7: 
 474: 08b7: FUNCTION BCF.RECORD.14.R                                                    !MJAS
 475: 08cb: 
 476: 08cb:      BCF.DEALDIR.SERIAL.NUM$      = MID$(BCF.RECORD$,1,4)              ! MJAS
 477: 08ea:      BCF.DIDIR.SERIAL.NUM$        = MID$(BCF.RECORD$,5,4)              ! MJAS
 478: 0909:      BCF.DEAL.NUM.REC$            = MID$(BCF.RECORD$,9,6)              ! MJAS
 479: 0928:      BCF.ITMDL.NUM.REC$           = MID$(BCF.RECORD$,15,6)             !QCS
 480: 0947:      BCF.DEAL.KEY.LEN$            = MID$(BCF.RECORD$,21,3)             ! MJAS
 481: 0966:      BCF.ITMDL.KEY.LEN$           = MID$(BCF.RECORD$,24,3)             !QCS
 482: 0985:      BCF.DVCHR.SERIAL.NUM$        = MID$(BCF.RECORD$,27,4)             ! NJT
 483: 09a4:      BCF.FILLER.DATETIMESTAMP$    = MID$(BCF.RECORD$,31,17)            !QCS
 484: 09c3:      BCF.FILLER$                  = MID$(BCF.RECORD$,48,33)            ! NJT ! 4.10CSk
 485: 09e2: 
 486: 09e2: END FUNCTION                                                                !MJAS
 487: 09ee: 
 488: 09ee: \ Last successfully processed IUF from SAP.                                 !4.10CSk
 489: 09ee: 
 490: 09ee: FUNCTION BCF.RECORD.20.W                                                    !4.10CSk
 491: 0a02: 
 492: 0a02:     BCF.RECORD$ = BCF.IUF.DATETIMESTAMP$ +                              \   !4.10CSk
 493: 0a26:                   BCF.FILLER$                                               !4.10CSk
 494: 0a26: 
 495: 0a26: END FUNCTION                                                                !4.10CSk
 496: 0a32: 
 497: 0a32: FUNCTION BCF.RECORD.20.R                                                    !4.10CSk
 498: 0a46: 
 499: 0a46:     BCF.IUF.DATETIMESTAMP$       = MID$(BCF.RECORD$,1,17)                   !4.10CSk
 500: 0a65:     BCF.FILLER$                  = MID$(BCF.RECORD$,18,63)                  !4.10CSk
 501: 0a84: 
 502: 0a84: END FUNCTION                                                                !4.10CSk
 503: 0a90: 
 504: 0a90: \***********************************************************************    !PMW
 505: 0a90: \***                                                                        !PMW
 506: 0a90: \***    BCF.RECORD.23.R                                                     !PMW
 507: 0a90: \***                                                                        !PMW
 508: 0a90: \***********************************************************************    !PMW
 509: 0a90: \***                                                                        !PMW
 510: 0a90: \***    Split BCF record 23 (stock snapshot parameters) into the            !PMW
 511: 0a90: \***    required individual fields.                                         !PMW
 512: 0a90: \***                                                                        !PMW
 513: 0a90: \***********************************************************************    !PMW
 514: 0a90: FUNCTION BCF.RECORD.23.R                                                    !OMW
 515: 0aa4:                                                                             !OMW
 516: 0aa4:     INTEGER*1 INDEX%                                                        !OMW
 517: 0aa4:                                                                             !OMW
 518: 0aa4:     DIM BCF.ITEM.STATUS$(BCF.MAX.STATUS.COUNT%)                             !OMW
 519: 0ad0:     DIM BCF.POSITIVE.DAYS%(BCF.MAX.STATUS.COUNT%)                           !OMW
 520: 0afc:     DIM BCF.POSITIVE.STOCK.FLAG$(BCF.MAX.STATUS.COUNT%)                     !OMW
 521: 0b28:     DIM BCF.NEGATIVE.DAYS%(BCF.MAX.STATUS.COUNT%)                           !OMW
 522: 0b54:     DIM BCF.NEGATIVE.STOCK.FLAG$(BCF.MAX.STATUS.COUNT%)                     !OMW
 523: 0b80:     DIM BCF.ZERO.DAYS%(BCF.MAX.STATUS.COUNT%)                               !OMW
 524: 0bac:     DIM BCF.ZERO.STOCK.FLAG$(BCF.MAX.STATUS.COUNT%)                         !OMW
 525: 0bd8:                                                                             !OMW
 526: 0bd8:     BCF.MAX.STOCK.INIT.MESSAGES% = VAL(MID$(BCF.RECORD$,1,4))               !OMW
 527: 0bfd:     BCF.MAX.STOCK.INIT.ITEMS%    = VAL(MID$(BCF.RECORD$,5,4))               !OMW
 528: 0c22:                                                                             !OMW
 529: 0c22:     FOR INDEX% = 1 TO BCF.MAX.STATUS.COUNT%                                 !OMW
 530: 0c2a:                                                                             !OMW
 531: 0c2a:         BCF.ITEM.STATUS$(INDEX%)         = MID$(BCF.RECORD$,            \   !OMW
 532: 0c62:                                            ((INDEX% - 1) * 16) + 9,1)       !OMW
 533: 0c62:         BCF.POSITIVE.STOCK.FLAG$(INDEX%) = MID$(BCF.RECORD$,            \   !OMW
 534: 0c9a:                                            ((INDEX% - 1) * 16) + 10,1)      !OMW
 535: 0c9a:         BCF.POSITIVE.DAYS%(INDEX%)       = VAL(MID$(BCF.RECORD$,        \   !OMW
 536: 0cde:                                            ((INDEX% - 1) * 16) + 11,4))     !OMW
 537: 0cde:         BCF.ZERO.STOCK.FLAG$(INDEX%)     = MID$(BCF.RECORD$,            \   !OMW
 538: 0d16:                                            ((INDEX% - 1) * 16) + 15,1)      !OMW
 539: 0d16:         BCF.ZERO.DAYS%(INDEX%)           = VAL(MID$(BCF.RECORD$,        \   !OMW
 540: 0d5a:                                            ((INDEX% - 1) * 16) + 16,4))     !OMW
 541: 0d5a:         BCF.NEGATIVE.STOCK.FLAG$(INDEX%) = MID$(BCF.RECORD$,            \   !OMW
 542: 0d92:                                            ((INDEX% - 1) * 16) + 20,1)      !OMW
 543: 0d92:         BCF.NEGATIVE.DAYS%(INDEX%)       = VAL(MID$(BCF.RECORD$,        \   !OMW
 544: 0dd6:                                            ((INDEX% - 1) * 16) + 21,4))     !OMW
 545: 0dd6:                                                                             !OMW
 546: 0dd6:         ! IF item status is active                                          !OMW
 547: 0dd6:         IF BCF.ITEM.STATUS$(INDEX%) = "A" THEN BEGIN                        !OMW
 548: 0dfb:             ! Map its value to BLANK for comparison purposes                !OMW
 549: 0dfb:             BCF.ITEM.STATUS$(INDEX%) = " "                                  !OMW
 550: 0e19:         ENDIF                                                               !OMW
 551: 0e19:                                                                             !OMW
 552: 0e19:     NEXT INDEX%                                                             !OMW
 553: 0e31:                                                                             !OMW
 554: 0e31: END FUNCTION                                                                !OMW
 555: 0e3d:                                                                             !OMW
 556: 0e3d: \***********************************************************************    !PMW
 557: 0e3d: \***                                                                        !PMW
 558: 0e3d: \***    BCF.RECORD.23.R                                                     !PMW
 559: 0e3d: \***                                                                        !PMW
 560: 0e3d: \***********************************************************************    !PMW
 561: 0e3d: \***                                                                        !PMW
 562: 0e3d: \***    Combine the required individual fields to build                     !PMW
 563: 0e3d: \***    BCF record 23 (stock snapshot parameters)                           !PMW
 564: 0e3d: \***                                                                        !PMW
 565: 0e3d: \***********************************************************************    !PMW
 566: 0e3d: FUNCTION BCF.RECORD.23.W                                                    !OMW
 567: 0e51:                                                                             !OMW
 568: 0e51:     INTEGER*1 INDEX%                                                        !OMW
 569: 0e51:                                                                             !OMW
 570: 0e51:     BCF.RECORD$ =                                                       \   !OMW
 571: 0ed8:         RIGHT$("0000" + STR$(BCF.MAX.STOCK.INIT.MESSAGES%),4) +         \   !OMW 
 572: 0ed8:         RIGHT$("0000" + STR$(BCF.MAX.STOCK.INIT.ITEMS%),4)                  !OMW
 573: 0ed8:                                                                             !OMW
 574: 0ed8:     FOR INDEX% = 1 TO BCF.MAX.STATUS.COUNT%                                 !OMW
 575: 0ee0:                                                                             !OMW
 576: 0ee0:         ! IF item status is active                                          !OMW
 577: 0ee0:         IF BCF.ITEM.STATUS$(INDEX%) = " " THEN BEGIN                        !OMW
 578: 0f05:             BCF.ITEM.STATUS$(INDEX%) = "A"                                  !OMW
 579: 0f23:         ENDIF                                                               !OMW
 580: 0f23:                                                                             !OMW
 581: 0f23:         BCF.RECORD$ = BCF.RECORD$ +                                     \   !OMW
 582: 108c:             BCF.ITEM.STATUS$(INDEX%) +                                  \   !OMW
 583: 108c:             BCF.POSITIVE.STOCK.FLAG$(INDEX%) +                          \   !OMW
 584: 108c:             RIGHT$("0000" + STR$(BCF.POSITIVE.DAYS%(INDEX%)),4) +       \   !OMW
 585: 108c:             BCF.ZERO.STOCK.FLAG$(INDEX%) +                              \   !OMW
 586: 108c:             RIGHT$("0000" + STR$(BCF.ZERO.DAYS%(INDEX%)),4) +           \   !OMW
 587: 108c:             BCF.NEGATIVE.STOCK.FLAG$(INDEX%) +                          \   !OMW
 588: 108c:             RIGHT$("0000" + STR$(BCF.NEGATIVE.DAYS%(INDEX%)),4)             !OMW
 589: 108c:                                                                             !OMW
 590: 108c:     NEXT INDEX%                                                             !OMW
 591: 10a4:                                                                             !OMW
 592: 10a4:     BCF.RECORD$ = LEFT$(BCF.RECORD$ + STRING$(80," "),80)                   !OMW
 593: 10eb:                                                                             !OMW
 594: 10eb: END FUNCTION                                                                !OMW
 595: 10f7: 
 596: 10f7: FUNCTION READ.BCF PUBLIC
 597: 110b: 
 598: 110b:     INTEGER*2 READ.BCF
 599: 110b:     READ.BCF = 1
 600: 1110: 
 601: 1110:     IF END #BCF.SESS.NUM% THEN READ.BCF.ERROR
 602: 1124:     READ #BCF.SESS.NUM%, BCF.REC.NO%; BCF.RECORD$
 603: 1152: 
 604: 1152:     IF BCF.REC.NO% = 1 THEN BEGIN                                           !SWM
 605: 1169:         CALL BCF.RECORD.1.SPLIT                                             !SWM
 606: 117e:     ENDIF ELSE IF BCF.REC.NO% = 9 THEN BEGIN                                !GMG
 607: 1195:         CALL BCF.RECORD.9.RNT                                               !GMG
 608: 11aa:     ENDIF ELSE IF BCF.REC.NO% = 10 THEN BEGIN                               !HMG
 609: 11c1:         CALL BCF.RECORD.10.RWNT                                             !HMG
 610: 11d6:     ENDIF ELSE IF BCF.REC.NO% = 11 THEN BEGIN                               !IAH
 611: 11ed:         CALL BCF.RECORD.11.R                                                !IAH
 612: 1202:     ENDIF ELSE IF BCF.REC.NO% = 13 THEN BEGIN                               !KBG
 613: 1219:         CALL BCF.RECORD.13.R                                                !KBG
 614: 122e:     ENDIF ELSE IF BCF.REC.NO% = 14 THEN BEGIN                               !MJAS
 615: 1245:         CALL BCF.RECORD.14.R                                                !MJAS
 616: 1259:     ENDIF ELSE IF BCF.REC.NO% = 20 THEN BEGIN                               !4.10CSk
 617: 1270:         CALL BCF.RECORD.20.R                                                !4.10CSk
 618: 1284:     ENDIF ELSE IF BCF.REC.NO% = 23 THEN BEGIN                               !OMW
 619: 129b:         CALL BCF.RECORD.23.R                                                !OMW
 620: 12ad:     ENDIF                                                                   !MJAS
 621: 12ad: 
 622: 12ad:     READ.BCF = 0
 623: 12b2:     
 624: 12b2:     EXIT FUNCTION
 625: 12b4: 
 626: 12b4: READ.BCF.ERROR:
 627: 12b4: 
 628: 12b4:     FILE.OPERATION$ = "R"
 629: 12c3:     CURRENT.REPORT.NUM% = BCF.REPORT.NUM%
 630: 12d1:     CURRENT.CODE$ = RIGHT$(PACK$("00000000000000"+STR$(BCF.REC.NO%)),7)
 631: 1324: 
 632: 1324: END FUNCTION
 633: 1333: 
 634: 1333: FUNCTION READ.BCF.LOCK PUBLIC
 635: 1347: 
 636: 1347:     INTEGER*2 READ.BCF.LOCK
 637: 1347: 
 638: 1347:     READ.BCF.LOCK = 1
 639: 134c: 
 640: 134c:     IF END #BCF.SESS.NUM% THEN READ.BCF.LOCK.ERROR
 641: 1360:     READ #BCF.SESS.NUM% AUTOLOCK, BCF.REC.NO%; BCF.RECORD$
 642: 138e: 
 643: 138e:     IF BCF.REC.NO% = 1 THEN BEGIN                                           !SWM
 644: 13a5:         CALL BCF.RECORD.1.SPLIT                                             !SWM
 645: 13ba:     ENDIF ELSE IF BCF.REC.NO% = 9 THEN BEGIN                                !GMG
 646: 13d1:         CALL BCF.RECORD.9.RNT                                               !GMG
 647: 13e6:     ENDIF ELSE IF BCF.REC.NO% = 10 THEN BEGIN                               !HMG
 648: 13fd:         CALL BCF.RECORD.10.RWNT                                             !HMG
 649: 1412:     ENDIF ELSE IF BCF.REC.NO% = 11 THEN BEGIN                               !IAH
 650: 1429:         CALL BCF.RECORD.11.R                                                !IAH
 651: 143e:     ENDIF ELSE IF BCF.REC.NO% = 13 THEN BEGIN                               !KBG
 652: 1455:         CALL BCF.RECORD.13.R                                                !KBG
 653: 146a:     ENDIF ELSE IF BCF.REC.NO% = 14 THEN BEGIN                               !MJAS
 654: 1481:         CALL BCF.RECORD.14.R                                                !MJAS
 655: 1495:     ENDIF ELSE IF BCF.REC.NO% = 20 THEN BEGIN                               !4.10CSk
 656: 14ac:         CALL BCF.RECORD.20.R                                                !4.10CSk
 657: 14c0:     ENDIF ELSE IF BCF.REC.NO% = 23 THEN BEGIN                               !OMW
 658: 14d7:         CALL BCF.RECORD.23.R                                                !OMW
 659: 14e9:     ENDIF                                                                   !MJAS
 660: 14e9: 
 661: 14e9:     READ.BCF.LOCK = 0
 662: 14ee:     
 663: 14ee:     EXIT FUNCTION
 664: 14f0: 
 665: 14f0: READ.BCF.LOCK.ERROR:
 666: 14f0: 
 667: 14f0:     FILE.OPERATION$ = "R"
 668: 14ff:     CURRENT.REPORT.NUM% = BCF.REPORT.NUM%
 669: 150d:     CURRENT.CODE$ = RIGHT$(PACK$("00000000000000"+STR$(BCF.REC.NO%)),7)
 670: 1560: 
 671: 1560:   END FUNCTION
 672: 156f: 
 673: 156f: FUNCTION WRITE.BCF PUBLIC
 674: 1583: 
 675: 1583:     INTEGER*2 WRITE.BCF
 676: 1583: 
 677: 1583:     WRITE.BCF = 1
 678: 1588: 
 679: 1588:     IF BCF.REC.NO% = 1 THEN BEGIN                                           !SWM
 680: 159f:         CALL BCF.RECORD.1.CONCAT                                            !SWM
 681: 15b4:     ENDIF ELSE IF BCF.REC.NO% = 9 THEN BEGIN                                !GMG
 682: 15cb:         CALL BCF.RECORD.9.WNT                                               !GMG
 683: 15e0:     ENDIF ELSE IF BCF.REC.NO% = 10 THEN BEGIN                               !HMG
 684: 15f7:         CALL BCF.RECORD.10.WWNT                                             !HMG
 685: 160c:     ENDIF ELSE IF BCF.REC.NO% = 11 THEN BEGIN                               !IAH
 686: 1623:         CALL BCF.RECORD.11.W                                                !IAH
 687: 1638:     ENDIF ELSE IF BCF.REC.NO% = 13 THEN BEGIN                               !KBG
 688: 164f:         CALL BCF.RECORD.13.W                                                !KBG
 689: 1664:     ENDIF ELSE IF BCF.REC.NO% = 14 THEN BEGIN                               !MJAS
 690: 167b:         CALL BCF.RECORD.14.W                                                !MJAS
 691: 168f:     ENDIF ELSE IF BCF.REC.NO% = 20 THEN BEGIN                               !4.10CSk
 692: 16a6:         CALL BCF.RECORD.20.W                                                !4.10CSk
 693: 16ba:     ENDIF ELSE IF BCF.REC.NO% = 23 THEN BEGIN                               !OMW
 694: 16d1:         CALL BCF.RECORD.23.W                                                !OMW
 695: 16e3:     ENDIF                                                                   !MJAS
 696: 16e3: 
 697: 16e3:     IF END #BCF.SESS.NUM% THEN WRITE.BCF.ERROR
 698: 16f7:     WRITE #BCF.SESS.NUM%, BCF.REC.NO%; BCF.RECORD$
 699: 1725: 
 700: 1725:     WRITE.BCF = 0
 701: 172a: 
 702: 172a:     EXIT FUNCTION
 703: 172c: 
 704: 172c: WRITE.BCF.ERROR:
 705: 172c: 
 706: 172c:     FILE.OPERATION$ = "W"
 707: 173b:     CURRENT.REPORT.NUM% = BCF.REPORT.NUM%
 708: 1749:     CURRENT.CODE$ = RIGHT$(PACK$("00000000000000"+STR$(BCF.REC.NO%)),7)
 709: 179c: 
 710: 179c: END FUNCTION
 711: 17ab: 
 712: 17ab: FUNCTION WRITE.BCF.UNLOCK PUBLIC
 713: 17bf: 
 714: 17bf:     INTEGER*2 WRITE.BCF.UNLOCK
 715: 17bf: 
 716: 17bf:     WRITE.BCF.UNLOCK = 1
 717: 17c4: 
 718: 17c4:     IF BCF.REC.NO% = 1 THEN BEGIN                                           !SWM
 719: 17db:         CALL BCF.RECORD.1.CONCAT                                            !SWM
 720: 17f0:     ENDIF ELSE IF BCF.REC.NO% = 9 THEN BEGIN                                !GMG
 721: 1807:         CALL BCF.RECORD.9.WNT                                               !GMG
 722: 181c:     ENDIF ELSE IF BCF.REC.NO% = 10 THEN BEGIN                               !HMG
 723: 1833:         CALL BCF.RECORD.10.WWNT                                             !HMG
 724: 1848:     ENDIF ELSE IF BCF.REC.NO% = 11 THEN BEGIN                               !IAH
 725: 185f:         CALL BCF.RECORD.11.W                                                !IAH
 726: 1874:     ENDIF ELSE IF BCF.REC.NO% = 13 THEN BEGIN                               !KBG
 727: 188b:         CALL BCF.RECORD.13.W                                                !KBG
 728: 18a0:     ENDIF ELSE IF BCF.REC.NO% = 14 THEN BEGIN                               !MJAS
 729: 18b7:         CALL BCF.RECORD.14.W                                                !MJAS
 730: 18cb:     ENDIF ELSE IF BCF.REC.NO% = 20 THEN BEGIN                               !4.10CSk
 731: 18e2:         CALL BCF.RECORD.20.W                                                !4.10CSk
 732: 18f6:     ENDIF ELSE IF BCF.REC.NO% = 23 THEN BEGIN                               !OMW
 733: 190d:         CALL BCF.RECORD.23.W                                                !OMW
 734: 191f:     ENDIF                                                                   !MJAS
 735: 191f: 
 736: 191f:     IF END #BCF.SESS.NUM% THEN WRITE.BCF.UNLOCK.ERROR
 737: 1933:     WRITE #BCF.SESS.NUM% AUTOUNLOCK, BCF.REC.NO%;BCF.RECORD$
 738: 1961: 
 739: 1961:     WRITE.BCF.UNLOCK = 0
 740: 1966:     
 741: 1966:     EXIT FUNCTION
 742: 1968: 
 743: 1968: WRITE.BCF.UNLOCK.ERROR:
 744: 1968: 
 745: 1968:     FILE.OPERATION$ = "W"
 746: 1977:     CURRENT.REPORT.NUM% = BCF.REPORT.NUM%
 747: 1985:     CURRENT.CODE$ = RIGHT$(PACK$("00000000000000"+STR$(BCF.REC.NO%)),7)
 748: 19d8: 
 749: 19d8: END FUNCTION
 750: 19e7: 
 751: 19e7: FUNCTION WRITE.HOLD.BCF.UNLOCK PUBLIC
 752: 19fb: 
 753: 19fb:     INTEGER*2 WRITE.HOLD.BCF.UNLOCK
 754: 19fb: 
 755: 19fb:     WRITE.HOLD.BCF.UNLOCK = 1
 756: 1a00: 
 757: 1a00:     IF BCF.REC.NO% = 1 THEN BEGIN                                           !SWM
 758: 1a17:         CALL BCF.RECORD.1.CONCAT                                            !SWM
 759: 1a2c:     ENDIF ELSE IF BCF.REC.NO% = 9 THEN BEGIN                                !GMG
 760: 1a43:         CALL BCF.RECORD.9.WNT                                               !GMG
 761: 1a58:     ENDIF ELSE IF BCF.REC.NO% = 10 THEN BEGIN                               !HMG
 762: 1a6f:         CALL BCF.RECORD.10.WWNT                                             !HMG
 763: 1a84:     ENDIF ELSE IF BCF.REC.NO% = 11 THEN BEGIN                               !IAH
 764: 1a9b:         CALL BCF.RECORD.11.W                                                !IAH
 765: 1ab0:     ENDIF ELSE IF BCF.REC.NO% = 13 THEN BEGIN                               !KBG
 766: 1ac7:         CALL BCF.RECORD.13.W                                                !KBG
 767: 1adc:     ENDIF ELSE IF BCF.REC.NO% = 14 THEN BEGIN                               !MJAS
 768: 1af3:         CALL BCF.RECORD.14.W                                                !MJAS
 769: 1b07:     ENDIF ELSE IF BCF.REC.NO% = 20 THEN BEGIN                               !4.10CSk
 770: 1b1e:         CALL BCF.RECORD.20.W                                                !4.10CSk
 771: 1b32:     ENDIF ELSE IF BCF.REC.NO% = 23 THEN BEGIN                               !OMW
 772: 1b49:         CALL BCF.RECORD.23.W                                                !OMW
 773: 1b5b:     ENDIF                                                                   !MJAS
 774: 1b5b: 
 775: 1b5b:     IF END #BCF.SESS.NUM% THEN WRITE.HOLD.BCF.UNLOCK.ERROR
 776: 1b6f:     WRITE HOLD #BCF.SESS.NUM% AUTOUNLOCK, BCF.REC.NO%;BCF.RECORD$
 777: 1b9d: 
 778: 1b9d:     WRITE.HOLD.BCF.UNLOCK = 0
 779: 1ba2:     
 780: 1ba2:     EXIT FUNCTION
 781: 1ba4: 
 782: 1ba4: WRITE.HOLD.BCF.UNLOCK.ERROR:
 783: 1ba4: 
 784: 1ba4:     FILE.OPERATION$ = "W"
 785: 1bb3:     CURRENT.REPORT.NUM% = BCF.REPORT.NUM%
 786: 1bc1:     CURRENT.CODE$ = RIGHT$(PACK$("00000000000000"+STR$(BCF.REC.NO%)),7)
 787: 1c14: 
 788: 1c14: END FUNCTION
 789: 1c23: 
 790: 1c23: End of Compilation
