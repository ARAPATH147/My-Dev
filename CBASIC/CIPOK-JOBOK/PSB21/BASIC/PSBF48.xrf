
			    Symbol Table Information
     No Variables in Common:


Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

F01.RETURN.CODE%		 simple variable     integer*2 	 00000000h
	       150d
SOPTS.RECORD$			 simple variable     string	 00000000h
	       170d,1898
SOPTS.SPACE$			 simple variable     string	 00000000h
	       171d
SOPTS.FILE.NAME$		 simple variable     string	 00000000h
	       172d,1888
SOPTS.RECL%			 simple variable     integer*2 	 00000000h
	       175d,1888
SOPTS.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       176d,1870
SOPTS.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       177d,1874m,1887,1888,1901
SOPTS.REC.NUM%			 simple variable     integer*4 	 00000000h
	       180d,1893m
DECCF.RECORD$			 simple variable     string	 00000000h
	       199d,1941
DECCF.MSGID$			 simple variable     string	 00000000h
	       200d
DECCF.MSGNAME$			 simple variable     string	 00000000h
	       201d,1427m,1436m,1439,1442m,2289,2302
DECCF.DIRECTION$		 simple variable     string	 00000000h
	       202d
DECCF.TYPE$			 simple variable     string	 00000000h
	       203d
DECCF.QOS$			 simple variable     string	 00000000h
	       204d
DECCF.DELIVERY$			 simple variable     string	 00000000h
	       205d,1428m,1441m,2275,2297,2383
DECCF.FILE.NAME$		 simple variable     string	 00000000h
	       206d,1883
DECCF.RECL%			 simple variable     integer*2 	 00000000h
	       209d,1883
DECCF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       210d,1867
DECCF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       211d,1873m,1882,1883,1954
DECCF.REC.NUM%			 simple variable     integer*4 	 00000000h
	       214d,1937m,1943m,1943
DECAP.RECORD$			 simple variable     string	 00000000h
	       233d,1480m
DECAP.FILE.NAME$		 simple variable     string	 00000000h
	       234d,1909,1910m,1912,1915,1916,2142m
DECAP.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       237d,1868
DECAP.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       238d,1875m,1911,1912,1915,2131
DECAP.REC.NUM%			 simple variable     integer*4 	 00000000h
	       241d
DQ.MESSAGE$			 simple variable     string	 00000000h
	       260d
DQ.PAYLOAD$			 simple variable     string	 00000000h
	       261d
DQ.RECORD$			 simple variable     string	 00000000h
	       262d
DQ.ARRAY.RECORD$		 array(1)	     string	 00000000h
	       263d,1439,1848,2256m,2261m,2261,2262,2262,2277m,2277,2278m,
	       2278,2279m,2279,2280m,2280,2289m,2289,2292,2298m,2298,2303,
	       2306,2308,2350,2351,2400
DQ.FILE.NAME$			 simple variable     string	 00000000h
	       264d,1516m,2377
DQ.REC.NUM%			 simple variable     integer*2 	 00000000h
	       267d
DQ.ELEMENT%			 simple variable     integer*2 	 00000000h
	       268d,1435,1852m,2255,2256,2257m,2257,2261,2261,2262,2262,
	       2268m,2268,2274,2298,2298,2300,2349,2399m
DQ.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       269d,1869
DQ.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       270d,1512,1529,1530,1534,1876m,2126
DQ1.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       271d
SERVL.MESSAGE$			 simple variable     string	 00000000h
	       291d
SERVL.DATA$			 simple variable     string	 00000000h
	       292d
SERVL.RECORD$			 simple variable     string	 00000000h
	       293d
SERVL.ARRAY.RECORD$		 array(1)	     string	 00000000h
	       294d,1484m,1487,1847
SERVL.FILE.NAME$		 simple variable     string	 00000000h
	       295d,1923m,1925,1928,1929
SERVL.REC.NUM%			 simple variable     integer*2 	 00000000h
	       298d
SERVL.ELEMENT%			 simple variable     integer*2 	 00000000h
	       299d,1484,1486m,1853m
SERVL.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       300d
SERVL.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       301d,1871,1877m,1924,1925,1928,2136
SERVL1.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       302d
F13.DAY$			 simple variable     string	 00000000h
	       327d
F13.DISPLAY.MESSAGE$		 simple variable     string	 00000000h
	       328d
PSBCHN.PRG			 simple variable     string	 00000000h
	       339d
PSBCHN.OP			 simple variable     string	 00000000h
	       340d
PSBCHN.APP			 simple variable     string	 00000000h
	       341d
PSBCHN.MENCON			 simple variable     string	 00000000h
	       342d
PSBCHN.U1			 simple variable     string	 00000000h
	       343d
PSBCHN.U2			 simple variable     string	 00000000h
	       344d
PSBCHN.U3			 simple variable     string	 00000000h
	       345d
CURRENT.CODE$			 simple variable     string	 00000000h
	       355d
FILE.OPERATION$			 simple variable     string	 00000000h
	       356d
DECAPI.CLIENT$			 simple variable     string	 00000000h
	       357d,1863,1864m,1968,1992,2121,2242,2304,2325,2370,2478,2519,
	       2523,2560
ERR.CODE$			 simple variable     string	 00000000h
	       358d,2197m,2423m
ERR.MSG$			 simple variable     string	 00000000h
	       359d,2196m,2422m
DECAPI.MAX			 simple variable     integer*1 	 00000000h
	       360d,2199
CURRENT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       361d
TCPERRNO%			 simple variable     integer*4 	 00000000h
	       362d,1710,1717,1717,2322,2322,2322,2326,2354,2371,2479,2525

Function: GETN1 returns integer*2 

	       448d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       448d,449d
P%				 parameter	     integer*2 	 00000004h
	       448d,450d


Function: GETN2 returns integer*2 

	       455d,2469

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       455d,456d
P%				 parameter	     integer*2 	 00000004h
	       455d,457d


Function: GETN4 returns integer*4 

	       462d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       462d,463d
P%				 parameter	     integer*2 	 00000004h
	       462d,464d


Function: GETR10 returns real

	       469d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       469d,470d
P%				 parameter	     integer*2 	 00000004h
	       469d,471d


Function: PUTN1 returns integer*1 

	       476d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       476d,477d
P%				 parameter	     integer*2 	 00000004h
	       476d,478d
N%				 parameter	     integer*1 	 00000006h
	       476d,479d


Function: PUTN2 returns integer*1 

	       484d,1713,2463

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       484d,485d
P%				 parameter	     integer*2 	 00000004h
	       484d,486d
N%				 parameter	     integer*2 	 00000006h
	       484d,487d


Function: PUTN4 returns integer*1 

	       492d,1774,1775,1776,1777,1778

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       492d,493d
P%				 parameter	     integer*2 	 00000004h
	       492d,494d
N%				 parameter	     integer*4 	 00000006h
	       492d,495d


Function: PUTR10 returns integer*1 

	       500d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       500d,501d
P%				 parameter	     integer*2 	 00000004h
	       500d,502d
R				 parameter	     real	 00000006h
	       500d,503d


Function: PEEKN2 returns integer*2 

	       508d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       508d,509d


Function: PEEKN4 returns integer*4 

	       514d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       514d,515d


Function: PEEKR10 returns real

	       520d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       520d,521d


Function: POKEN2 returns integer*1 

	       526d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       526d,527d
N%				 parameter	     integer*2 	 00000004h
	       526d,528d


Function: POKEN4 returns integer*1 

	       533d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       533d,534d
N%				 parameter	     integer*4 	 00000004h
	       533d,535d


Function: POKER10 returns integer*1 

	       540d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       540d,541d
R				 parameter	     real	 00000004h
	       540d,542d


Function: SOCK.INIT returns integer*1 

	       615d,1699,1965

  NAME				  CLASS		      TYPE	  OFFSET

MAX.SOCKS%			 parameter	     integer*2 	 00000000h
	       615d,616d
UNUSED%				 parameter	     integer*2 	 00000002h
	       615d,617d


Function: SOCK.SOCKET returns integer*2 

	       654d,1700

  NAME				  CLASS		      TYPE	  OFFSET

DOMAIN%				 parameter	     integer*2 	 00000000h
	       654d,656d
TYPE%				 parameter	     integer*2 	 00000002h
	       654d,657d
PROTOCOL%			 parameter	     integer*2 	 00000004h
	       654d,658d


Function: SOCK.BIND returns integer*2 

	       667d

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       667d,670d
PORT%				 parameter	     integer*4 	 00000002h
	       667d,669d
SOCKADDR.IN$			 simple variable     string	 00000000h
	       668d


Function: SOCK.CONNECT returns integer*2 

	       679d,1707

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       679d,682d
IP.ADDRESS$			 parameter	     string	 00000002h
	       679d,680d
PORT%				 parameter	     integer*4 	 00000006h
	       679d,681d


Function: SOCK.LISTEN returns integer*2 

	       692d

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       692d,694d
BACKLOG%			 parameter	     integer*2 	 00000002h
	       692d,695d


Subprogram: SOCK.ACCEPT

	       703d

  NAME				  CLASS		      TYPE	  OFFSET

MY.HANDLE%			 parameter	     integer*2 	 00000000h
	       703d,706d
CLIENT.HANDLE%			 parameter	     integer*2 	 00000004h
	       703d
CLIENT.IP%			 parameter	     integer*4 	 00000008h
	       703d,704d
CLIENT.PORT%			 parameter	     integer*2 	 0000000ch
	       703d,707d


Function: SOCK.SEND returns integer*2 

	       725d,2306,2351,2647

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       725d,728d
MSG$				 parameter	     string	 00000002h
	       725d,726d
FLAGS%				 parameter	     integer*2 	 00000006h
	       725d,729d


Subprogram: SOCK.RECV

	       753d,1716,2476,2503

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       753d,756d
MSG$				 parameter	     string	 00000004h
	       753d,754d
FLAGS%				 parameter	     integer*2 	 00000008h
	       753d,757d
RC%				 parameter	     integer*2 	 0000000ch
	       753d,755d


Function: SOCK.CLOSE returns integer*2 

	       765d

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       765d,766d


Function: SOCK.ABORT returns integer*2 

	       776d,1720,2116,2486

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       776d,777d


Function: SOCK.CLEANUP returns integer*2 

	       786d

Function: SOCK.IOCTL returns integer*2 

	       889d

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       889d,891d
CMD%				 parameter	     integer*2 	 00000002h
	       889d,893d
DATA$				 parameter	     string	 00000004h
	       889d,890d


Function: SOCK.DONT.BLOCK returns integer*2 

	       901d,1704

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE%				 parameter	     integer*2 	 00000000h
	       901d,903d


Subprogram: SOCK.SELECT

	       919d,1715,2465

  NAME				  CLASS		      TYPE	  OFFSET

HANDLE.LIST$			 parameter	     string	 00000000h
	       919d,921d
NUM.READ.SOCKS%			 parameter	     integer*2 	 00000004h
	       919d,923d
NUM.WRITE.SOCKS%		 parameter	     integer*2 	 00000008h
	       919d,924d
NUM.EXCPT.SOCKS%		 parameter	     integer*2 	 0000000ch
	       920d,925d
TIMEOUT%			 parameter	     integer*4 	 00000010h
	       920d,922d
RETURN.RC%			 parameter	     integer*2 	 00000014h
	       920d,926d


Function: SOPTS.SET returns real

	       940d,1870

Function: READ.SOPTS returns integer*2 

	       943d,1895

Function: WRITE.SOPTS returns integer*2 

	       947d

Function: DECCF.SET returns real

	       962d,1867

Function: READ.DECCF returns integer*2 

	       965d,1940

Function: WRITE.DECCF returns integer*2 

	       969d

Function: DECAP.SET returns real

	       984d,1868

Function: READ.DECAP returns integer*2 

	       987d

Function: WRITE.DECAP returns integer*2 

	       991d,1481

Function: DQ.SET returns real

	       1006d,1869

Function: READ.DQ returns integer*2 

	       1009d

Function: WRITE.MATRIX.DQ returns real

	       1013d,2378

  NAME				  CLASS		      TYPE	  OFFSET

WRITE.DQ			 simple variable     integer*2 	 00000000h
	       1014d


Function: SERVL.SET returns real

	       1028d,1871

Function: READ.SERVL returns integer*2 

	       1031d

Function: WRITE.MATRIX.SERVL returns integer*2 

	       1035d,1485

Function: WRITE.SERVL returns integer*2 

	       1039d

Subprogram: ADXSERVE

	       1059d,1856

  NAME				  CLASS		      TYPE	  OFFSET

RETURN.CODE%			 parameter	     integer*4 	 00000000h
	       1059d,1070d
ADX.FUNCTION%			 parameter	     integer*2 	 00000004h
	       1060d,1067d
ADX.PARM.1%			 parameter	     integer*2 	 00000008h
	       1061d,1068d
ADX.PARM.2$			 parameter	     string	 0000000ch
	       1062d,1065d


Subprogram: ADXFILES

	       1093d

  NAME				  CLASS		      TYPE	  OFFSET

RETURN.CODE%			 parameter	     integer*4 	 00000000h
	       1093d,1101d
ADX.FUNCTION%			 parameter	     integer*2 	 00000004h
	       1094d,1103d
ADX.PARM.1%			 parameter	     integer*2 	 00000008h
	       1095d,1104d
ADX.PARM.1$			 parameter	     string	 0000000ch
	       1096d
ADX.PARM.2$			 simple variable     string	 00000000h
	       1099d


Function: ERRNHEX$ returns string

	       1121d,1131m,2423

  NAME				  CLASS		      TYPE	  OFFSET

ERRFX$				 simple variable     string	 00000066h
	       1122d,1125m,1129m,1129,1131
HX				 simple variable     integer*4 	 0000006ah
	       1123d,1126m,1129
S				 simple variable     integer*2 	 0000006eh
	       1124d,1127,1129
THE.SUM				 simple variable     integer*2 	 00000000h
	       1124d
@ISTEP				 simple variable     integer*2 	 fffffffah


Function: CONTTIME returns integer*4 

	       1168d,1194

  NAME				  CLASS		      TYPE	  OFFSET

START.TIME			 parameter	     integer*4 	 00000000h
	       1168d,1170d
PARMBLK$			 parameter	     string	 00000004h
	       1168d,1169d
TIMEDATE.TABLE$			 parameter	     string	 00000008h
	       1168d,1169d


Function: MILLI.TIME% returns integer*4 

	       1186d,1194m,1475,1959,2305

  NAME				  CLASS		      TYPE	  OFFSET

CT.PARAMBLK$			 simple variable     string	 00000070h
	       1189d,1191m,1194
CT.TIMEDATE.TABLE$		 simple variable     string	 00000074h
	       1189d,1192m,1194


Function: TRIM.STRING returns string

	       1206d,1226m,1436,1442

  NAME				  CLASS		      TYPE	  OFFSET

TEXT$				 parameter	     string	 00000000h
	       1206d,1209d,1212,1216,1217m,1217,1226
LEN%				 simple variable     integer*2 	 00000078h
	       1210d,1212m,1216,1217,1218m,1218
DONE				 label		     
	       1220,1225d


Function: DAY.OF.WEEK returns integer*1 

	       1255d,1308m,1336

  NAME				  CLASS		      TYPE	  OFFSET

D$				 parameter	     string	 00000000h
	       1255d,1257d,1266,1267,1268
YEAR$				 simple variable     string	 0000007ah
	       1258d,1266m,1270
MONTH$				 simple variable     string	 0000007eh
	       1259d,1267m,1273,1273,1291
DAY$				 simple variable     string	 00000082h
	       1260d,1268m,1290
Q				 simple variable     integer*4 	 00000086h
	       1263d,1290m,1296
D				 simple variable     integer*4 	 00000000h
	       1263d
H				 simple variable     integer*4 	 0000008ah
	       1263d,1306m,1308
J				 simple variable     integer*4 	 0000008eh
	       1263d,1280m,1284m,1286m,1300,1301
K				 simple variable     integer*4 	 00000092h
	       1263d,1292m,1298,1299
Y				 simple variable     integer*4 	 00000096h
	       1263d,1270m,1274m,1274,1278,1279m,1283,1292
M				 simple variable     integer*4 	 0000009ah
	       1263d,1291m,1294
X				 simple variable     integer*4 	 0000009eh
	       1263d,1294m,1297,1303m,1306
N1				 simple variable     integer*4 	 000000a2h
	       1264d,1296m,1303
N2				 simple variable     integer*4 	 000000a6h
	       1264d,1297m,1303
N3				 simple variable     integer*4 	 000000aah
	       1264d,1298m,1303
N4				 simple variable     integer*4 	 000000aeh
	       1264d,1299m,1303
N5				 simple variable     integer*4 	 000000b2h
	       1264d,1300m,1303
N6				 simple variable     integer*4 	 000000b6h
	       1264d,1301m,1303


Function: DAY$ returns string

	       1320d,1336m,1906,1910

  NAME				  CLASS		      TYPE	  OFFSET

TODAYS.DATE$			 simple variable     string	 000000bah
	       1325d,1334m,1336


Function: HHMMSS.MMM$ returns string

	       1348d,1365m,1475

  NAME				  CLASS		      TYPE	  OFFSET

VAL%				 parameter	     integer*4 	 00000000h
	       1348d,1352d,1354,1355m,1355,1357,1358m,1358,1360,1361m,1361,
	       1363
WORK$				 simple variable     string	 000000beh
	       1351d,1354m,1357m,1357,1360m,1360,1363m,1363,1365


Subprogram: SOREC156

	       1378d,1898

  NAME				  CLASS		      TYPE	  OFFSET

IN$				 parameter	     string	 00000000h
	       1378d,1382d,1387,1387,1388,1388,1389,1389,1389,1389,1390,
	       1390,1391,1391,1391,1391,1392,1392,1393,1393,1393,1393,1394,
	       1394,1395,1395,1395,1395,1396,1396,1397,1397,1397,1397,1398,
	       1398,1399,1399,1399,1399,1400,1400,1401,1401,1401,1401
NOS%				 simple variable     integer*2 	 000000c2h
	       1380d,1386m,1387,1388,1390m,1391,1392,1393,1394m,1395,1396,
	       1397,1398m,1399,1400,1401
NOS1%				 simple variable     integer*2 	 000000c4h
	       1381d,1388m,1389,1390,1391,1391,1392m,1393,1394,1395,1396m,
	       1397,1398,1399,1400m,1401
ABORT.SUB			 label		     
	       1384,1407d


Subprogram: MESSAGEID.MATCH

	       1420d,2246,2612,2643

  NAME				  CLASS		      TYPE	  OFFSET

ARG.MESSAGEID$			 parameter	     string	 00000000h
	       1420d,1423d,1433
SERVICE.EVENT			 parameter	     integer*1 	 00000004h
	       1420d,1424d,1435,1439
TEST.MESSAGE.NAME$		 simple variable     string	 000000c6h
	       1422d,1426m,1434m,1436,1442


Subprogram: DECAPI.LOG

	       1466d,1628,1916,1929,1935,1964,1967,1968,1973,1981,1982,1989,
	       1990,1991,1992,1993,1997,2086,2120,2121,2123,2242,2302,2303,
	       2304,2318,2324,2325,2350,2362,2370,2372,2377,2382,2383,2415,
	       2424,2477,2478,2485,2494,2495,2496,2501,2519,2520,2523,2526,
	       2542,2558,2559,2560,2561,2615

  NAME				  CLASS		      TYPE	  OFFSET

LOG$				 parameter	     string	 00000000h
	       1466d,1468d,1479,1484
TYPE%				 parameter	     integer*2 	 00000004h
	       1466d,1472d,1477,1482
D$				 simple variable     string	 000000cah
	       1469d,1475m,1479m,1479,1480,1484
RC%				 simple variable     integer*1 	 000000ceh
	       1471d,1481m,1485m
TIME.CHECK%			 simple variable     integer*4 	 00000000h
	       1473d


Subprogram: OPEN.DQ

	       1500d,1885,2418

  NAME				  CLASS		      TYPE	  OFFSET

NAME$				 parameter	     string	 00000000h
	       1500d,1502d,1516,1530,1534
NODE$				 simple variable     string	 00000000h
	       1503d
DIST$				 simple variable     string	 00000000h
	       1504d
TEMP$				 simple variable     string	 00000000h
	       1505d
ABORT.FUNCTION			 label		     
	       1507,1555d
CREATE.DQ			 label		     
	       1529,1533d
SKIP.DQ				 label		     
	       1531,1546d
LEAVE.SUB			 label		     
	       1551d,1567


Function: MESSAGE.ARRAY returns string

	       1579d,1611m,2517,2557

  NAME				  CLASS		      TYPE	  OFFSET

DEC.RESPONSE$			 parameter	     string	 00000000h
	       1579d,1581d,1591,1594,1595m,1595,1595,1600,1602,1603,1606
TEMP.MESSAGE.ARRAY$		 simple variable     string	 00000000h
	       1583d
OFFSET%				 simple variable     integer*2 	 000000cfh
	       1584d,1598m,1600,1602,1603,1603,1605m,1606
COUNT%				 simple variable     integer*2 	 000000d1h
	       1585d,1618,1619,1619,1620
REMAIN%				 simple variable     integer*2 	 000000d3h
	       1586d,1614m,1628
LOC%				 simple variable     integer*2 	 000000d5h
	       1587d,1600m,1603,1605,1606m
ABORT.FUNCTION			 label		     
	       1589,1634d
@ISTEP				 simple variable     integer*2 	 fffffffah
LEAVE.FUNCTION			 label		     
	       1630d,1640


Function: CHECK.PAYLOAD.AND.TRANSLATE returns string

	       1654d,1674m,2277,2278,2279,2280,2512,2513,2514,2515,2614

  NAME				  CLASS		      TYPE	  OFFSET

A$				 parameter	     string	 00000000h
	       1654d,1657d,1664,1668m,1668,1668,1668,1670,1674
B$				 parameter	     string	 00000004h
	       1654d,1658d,1664,1668,1670
C$				 parameter	     string	 00000008h
	       1654d,1659d,1668
NUM%				 simple variable     integer*2 	 000000d7h
	       1660d,1663m,1664,1669m,1670
LOC%				 simple variable     integer*2 	 000000d9h
	       1661d,1664m,1666,1668,1668,1669,1670m


Function: DEC.CONNECT returns integer*2 

	       1687d,1698m,1719m,1728m,1969,1987

  NAME				  CLASS		      TYPE	  OFFSET

IP$				 parameter	     string	 00000000h
	       1687d,1689d,1707
P%				 parameter	     integer*2 	 00000004h
	       1687d,1694d,1707
TO%				 parameter	     integer*2 	 00000006h
	       1687d,1695d,1715
TEMP$				 simple variable     string	 000000dbh
	       1690d,1712m,1713,1715
TEST$				 simple variable     string	 000000dfh
	       1691d,1716
SH%				 simple variable     integer*2 	 000000e3h
	       1692d,1700m,1702,1704,1707,1713,1716,1728
RC%				 simple variable     integer*2 	 000000e5h
	       1693d,1699m,1715,1716,1717,1717,1719,1720m


Function: FLEXOSSVC returns integer*2 

	       1741d,1781

  NAME				  CLASS		      TYPE	  OFFSET

COMMAND%			 parameter	     integer*2 	 00000000h
	       1741d,1743d
PARAM$				 parameter	     string	 00000002h
	       1741d,1742d


Function: PROCESS.NAME$ returns string

	       1754d,1789m,1797m,1864

  NAME				  CLASS		      TYPE	  OFFSET

SVC.PARAM$			 simple variable     string	 000000e7h
	       1756d,1766m,1774,1775,1776,1777,1778,1781
PROCESS.TABLE$			 simple variable     string	 000000ebh
	       1757d,1767m,1770m,1770,1772,1777,1783
TEMP$				 simple variable     string	 000000efh
	       1759d,1768m,1770
NAME$				 simple variable     string	 000000f3h
	       1760d,1783m,1785,1786m,1786,1786,1789
LOOP%				 simple variable     integer*2 	 000000f7h
	       1761d,1769
TABLE.SIZE%			 simple variable     integer*4 	 000000f9h
	       1762d,1772m,1778
ABORT.FUNCTION			 label		     
	       1764,1795d
@ISTEP				 simple variable     integer*2 	 fffffffah
LEAVE.FUNCTION			 label		     
	       1791d,1798


Subprogram: SOCKET.INITIALISATION

	       1808d,2074,2331

  NAME				  CLASS		      TYPE	  OFFSET

LOST				 parameter	     integer*2 	 00000000h
	       1808d,1817d,1845
A.IP$				 simple variable     string	 000000fdh
	       1810d,1983m,1985
A.DQ$				 simple variable     string	 00000101h
	       1811d,1986
FIELD$				 simple variable     string	 00000000h
	       1812d
ADX.DATA$			 simple variable     string	 00000105h
	       1813d,1859,1861
TEST$				 simple variable     string	 00000109h
	       1814d,1906m,1909
NO%				 simple variable     integer*2 	 00000000h
	       1815d
ADX.RC%				 simple variable     integer*2 	 0000010dh
	       1816d,1856
@RDUMMY				 simple variable     real	 0000010fh
ABORT.SUB			 label		     
	       1882,2000d
SKIP.SOPTS.READ			 label		     
	       1887,1903d
READ.SOPT			 label		     
	       1891d
CREATE.DECAP			 label		     
	       1911,1914d
SKIP.DECAP			 label		     
	       1913,1917d
CREATE.SERVL			 label		     
	       1924,1927d
SKIP.SERVL			 label		     
	       1926,1930d
ALL.READ			 label		     
	       1945,1950d


Function: DECAPI.INIT returns integer*2 

	       2065d,2090m

  NAME				  CLASS		      TYPE	  OFFSET

ARG.RETURN.CODE			 simple variable     integer*1 	 00000119h
	       2067d,2070m,2077m,2079m,2081m,2083m,2086,2090
ABORT.FUNCTION			 label		     
	       2072,2094d
EXIT.FUNCTION			 label		     
	       2088d,2096


Function: DECAPI.CLOSE returns integer*1 

	       2106d,2148m

  NAME				  CLASS		      TYPE	  OFFSET

ARG.RETURN.CODE			 simple variable     integer*1 	 0000011ah
	       2108d,2112m,2118m,2144m,2148
RC%				 simple variable     integer*1 	 00000000h
	       2110d
ABORT.FUNCTION			 label		     
	       2114,2152d
EXIT.FUNCTION			 label		     
	       2146d,2157


Function: DECAPI.SEND returns integer*2 

	       2167d,2263m,2394m,2425m

  NAME				  CLASS		      TYPE	  OFFSET

ARG.MESSAGEID$			 parameter	     string	 00000000h
	       2167d,2169d,2246
ARG.PAYLOAD$			 parameter	     string	 00000004h
	       2167d,2170d,2205,2256,2261
COMMIT				 parameter	     string	 00000008h
	       2167d,2171d,2255,2267,2398
PAYLOAD$			 simple variable     string	 00000000h
	       2172d
FORMAT.REQUEST$			 simple variable     string	 00000000h
	       2173d
TEST.MESSAGE.NAME$		 simple variable     string	 00000000h
	       2174d
QUEUE.FILENAME$			 simple variable     string	 00000000h
	       2175d
SEND$				 simple variable     string	 0000011bh
	       2176d,2299m,2308m,2309,2318,2369m
TIME.SENT$			 simple variable     string	 00000000h
	       2177d
HEADER$				 simple variable     string	 00000000h
	       2178d
ARG.RETURN.CODE			 simple variable     integer*1 	 0000011fh
	       2179d,2191m,2241m,2258m,2263,2269m,2319m,2334m,2357m,2359m,
	       2380m,2389m,2394
GIVE.UP				 simple variable     integer*1 	 00000120h
	       2180d,2329m,2330,2336m,2353m,2356m,2360m
RC1%				 simple variable     integer*2 	 00000121h
	       2182d,2306m,2309
CNT%				 simple variable     integer*2 	 00000123h
	       2183d,2328m,2360,2361m,2361
RETRY%				 simple variable     integer*2 	 00000125h
	       2184d,2192m,2414,2415,2419m,2419
PAYLOAD.LENGTH%			 simple variable     integer*4 	 00000127h
	       2185d,2205m,2207,2208m,2208,2240,2240,2292m
MAX.LENGTH%			 simple variable     integer*4 	 0000012bh
	       2186d,2200m,2202m,2240,2262
TIME.SENT%			 simple variable     integer*4 	 0000012fh
	       2187d,2305m
RC%				 simple variable     integer*4 	 00000133h
	       2188d,2310m,2312m,2316,2322,2326,2351m,2371,2378m,2379,2382
PARAM1%				 simple variable     integer*4 	 00000000h
	       2188d
ABORT.FUNCTION			 label		     
	       2194,2405d
@ISTEP				 simple variable     integer*2 	 fffffffch
DQ.WRITE			 label		     
	       2375d,2420
ERROR.LEAVE.FUNCTION		 label		     
	       2396d,2426


Function: DECAPI.RECV returns string

	       2437d,2564m

  NAME				  CLASS		      TYPE	  OFFSET

MSG$				 simple variable     string	 00000137h
	       2439d,2458m
RES$				 simple variable     string	 0000013bh
	       2440d,2476,2482,2491,2496,2499,2499,2500,2501,2502m,2503,
	       2508,2509,2526
RESPONSE$			 simple variable     string	 0000013fh
	       2441d,2472m,2488m,2494,2497m,2500m,2500,2506m,2509m,2509,
	       2512m,2512,2513m,2513,2514m,2514,2515m,2515,2517m,2517,2519,
	       2528m,2535m,2541m,2552m,2556,2557m,2559,2560,2564
TEMP$				 simple variable     string	 00000143h
	       2442d,2457m,2463,2465,2469
ARG.RETURN.DATA$		 simple variable     string	 00000000h
	       2444d
ARG.RETURN.CODE			 simple variable     integer*1 	 00000147h
	       2446d,2451m,2484m,2488,2493m,2497,2527m,2528,2540m,2541
PAYLOAD.COMPLETE		 simple variable     integer*1 	 00000148h
	       2447d,2471m,2473,2533m
RETURN.CODE%			 simple variable     integer*2 	 00000000h
	       2448d
RC%				 simple variable     integer*2 	 00000149h
	       2449d,2465,2467,2476,2480,2499,2503,2505,2524,2542
ABORT.FUNCTION			 label		     
	       2454,2568d
RESUME.HERE			 label		     
	       2547d,2570


Function: DECAPI.EVENT returns integer*1 

	       2600d,2622m

  NAME				  CLASS		      TYPE	  OFFSET

ARG.MESSAGEID$			 parameter	     string	 00000000h
	       2600d,2602d,2612,2615
ARG.DATA$			 parameter	     string	 00000004h
	       2600d,2603d,2614m,2614,2616
ARG.REASONCODE%			 parameter	     integer*2 	 00000008h
	       2600d,2608d,2615
EVENT.MESSAGE			 simple variable     string	 00000000h
	       2604d
ARG.RETURN.CODE			 simple variable     integer*1 	 0000014bh
	       2606d,2610m,2619m,2622
RC%				 simple variable     integer*1 	 00000000h
	       2607d


Function: DECAPI.COMMAND returns integer*1 

	       2633d,2653m

  NAME				  CLASS		      TYPE	  OFFSET

ARG.COMMAND$			 parameter	     string	 00000000h
	       2633d,2635d,2643,2647,2648
ARG.DATA$			 parameter	     string	 00000004h
	       2633d,2636d,2647,2648
ARG.RETURN.CODE			 simple variable     integer*1 	 0000014ch
	       2638d,2641m,2649m,2653
RC%				 simple variable     integer*1 	 0000014dh
	       2639d,2647m,2648


Function: DECAPI.RECV.RESPONSE.TIME returns string

	       2664d,2668m
Module-Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

CT.TIMEDATE.TABLE$		 simple variable     string	 00000000h
	       370d,1839m
CT.PARAMBLK$			 simple variable     string	 00000004h
	       371d,1838m
CRTLF$				 simple variable     string	 00000008h
	       373d,1600,1602,1606,1826m,1832,2278,2298,2499,2513,2647,2648
COMMA$				 simple variable     string	 0000000ch
	       374d,1827m
PIPE$				 simple variable     string	 00000010h
	       375d,1436,1442,1484,1830m,1973,1993,2279,2362,2514,2614,2615
QUOTE$				 simple variable     string	 00000014h
	       376d,1828m,2280,2515
AMPERSAND$			 simple variable     string	 00000018h
	       377d,1829m,2277,2512
RECORD$				 simple variable     string	 00000000h
	       378d
STATUS$				 simple variable     string	 00000000h
	       379d
CLIENT.IP$			 simple variable     string	 0000001ch
	       380d,1956m,1968,1969,1981,1983,1984m,1987
NODE.ID$			 simple variable     string	 00000020h
	       381d,1861m,1885,1923,1973,2418
PRIMARY.DQ.EXTENSION$		 simple variable     string	 00000000h
	       382d
ALTERNATE.IP$			 simple variable     string	 00000024h
	       383d,1402m,1957m,1982,1984,1985m
ALTERNATE.DQ$			 simple variable     string	 00000028h
	       384d,1986m
PRIMARY.IP$			 simple variable     string	 0000002ch
	       385d,1389m,1956
RESPONSE.TIME			 simple variable     string	 00000030h
	       386d,1612m,2459m,2520,2561,2668
SECONDARY.IP$			 simple variable     string	 00000034h
	       387d,1391m,1402,1957
DECCONF.RECORD$			 array(1)	     string	 00000038h
	       388d,1433,1434,1441,1846,1941m
SERVL.LOG.RECORD$		 array(1)	     string	 00000000h
	       389d
SELECTHANDLE$			 simple variable     string	 00000000h
	       390d
SECONDARY.DQ.EXTENSION$		 simple variable     string	 00000000h
	       391d
DEC.RESPONSE$			 simple variable     string	 00000000h
	       392d
SOCKET.MESSAGE.ARRAY$		 array(1)	     string	 0000003ch
	       393d,1603m,1611,1611,1612,1616,1619m,1619,1620m,1625m,1638,
	       1849,2461,2556
TEST.RESPONSE$			 simple variable     string	 00000040h
	       394d,1594,1595,1832m
FALSE				 simple variable     integer*1 	 00000000h
	       396d
NAK				 simple variable     integer*1 	 00000044h
	       397d,1437,1821m,1823,2132,2137,2140,2246,2252,2253,2329,2368,
	       2471,2617,2643
FOUND				 simple variable     integer*1 	 00000045h
	       398d,1431,1443m,1446m,1823m,2248,2252m,2368m,2613,2617m,2646
MESSAGE.MATCH			 simple variable     integer*1 	 00000046h
	       399d,1437m,1440m,1445m,2248,2253m,2613
PHASE1.COMPLETED		 simple variable     integer*1 	 00000047h
	       400d,1843,1952m,2140m
DEC.LOGSTATUS			 simple variable     integer*1 	 00000048h
	       401d,1395m,1477,1909
TRUE				 simple variable     integer*1 	 00000000h
	       402d
ACK				 simple variable     integer*1 	 00000049h
	       403d,1440,1443,1445,1446,1822m,1918,1931,1952,2336,2353,2356,
	       2360,2533,2612
PROBLEM.DQ			 simple variable     integer*1 	 0000004ah
	       404d,1509m,1548m,1561m,1563m,1971,1972m
LOG.FILE.OPEN			 simple variable     integer*1 	 0000004bh
	       405d,1477,1909,1918m,2130,2132m
SERVICE.FILE.OPEN		 simple variable     integer*1 	 0000004ch
	       406d,1482,1922,1931m,2135,2137m
WRITING.DETAIL			 simple variable     integer*1 	 00000000h
	       408d
QUEUE.FILE			 simple variable     integer*1 	 0000004dh
	       409d,1880m,1975m,2076,2078,2080
HOUSE.KEEP.ACTIVE		 simple variable     integer*1 	 00000000h
	       410d
DEC.PORT%			 simple variable     integer*2 	 0000004eh
	       412d,1387m,1968,1969,1987
DEC.SOCKET.TIMEOUT%		 simple variable     integer*2 	 00000050h
	       413d,1397m,1969,1987,2465
DEC.TRANSTATUS			 simple variable     integer*2 	 00000052h
	       414d,1393m,2275,2511
DEC.SERVICE.LOG			 simple variable     integer*2 	 00000054h
	       415d,1399m,1482,1922
I%				 simple variable     integer*2 	 00000000h
	       416d
J%				 simple variable     integer*2 	 00000000h
	       416d
LOOP%				 simple variable     integer*2 	 00000056h
	       417d,1430m,1433,1434,1441,1449m,1449,1936m,1941,1942m,1942,
	       2274,2277,2277,2278,2278,2279,2279,2280,2280,2300,2303,2306,
	       2308,2327m,2335,2339m,2339,2349,2350,2351
SOCKET.RC%			 simple variable     integer*2 	 00000058h
	       418d,1707m,1710,1895m,1897,1965m,1969m,1978,1987m,1988,2002,
	       2116m,2118,2122,2486m
RECORD.LENGTH%			 simple variable     integer*2 	 00000000h
	       419d
REC.NUM%			 simple variable     integer*2 	 00000000h
	       420d
SOCKET.HANDLE%			 simple variable     integer*2 	 0000005ah
	       421d,1720,1879m,1992,2002m,2076,2078,2080,2116,2122,2242,
	       2304,2306,2325,2333,2351,2370,2463,2476,2479,2486,2503,2524,
	       2647
SOCKET.MESSAGE.COUNT%		 simple variable     integer*2 	 0000005ch
	       422d,1603,1604m,1604,1614,1618,1622m,1622,1624m,1637m,1851m
TIME.IN.MS%			 simple variable     integer*4 	 0000005eh
	       423d,1959m
DEC.HOUSEKEEP.TIME%		 simple variable     integer*4 	 00000062h
	       425d,1401m

