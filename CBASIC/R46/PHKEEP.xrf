
			    Symbol Table Information
     No Variables in Common:


Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

BEMF.MESSAGE$			 simple variable     string	 00000000h
	       47d
BEMF.FILE.NAME$			 simple variable     string	 00000000h
	       48d
BEMF.RECL%			 simple variable     integer*2 	 00000000h
	       50d
BEMF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       51d
BEMF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       52d
BEMF.REC.NO%			 simple variable     integer*4 	 00000000h
	       54d
POGDE.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       73d
POGDE.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       74d
POGDE.COPY.NAME$		 simple variable     string	 00000000h
	       77d
POGDE.FILE.NAME$		 simple variable     string	 00000000h
	       78d
POGDE.RCD$			 simple variable     string	 00000000h
	       79d
POGOK.PE10.RETCODE%		 simple variable     integer*1 	 00000000h
	       89d
POGOK.PE5.RETCODE%		 simple variable     integer*1 	 00000000h
	       90d
POGOK.PE6.RETCODE%		 simple variable     integer*1 	 00000000h
	       91d
POGOK.PE7.RETCODE%		 simple variable     integer*1 	 00000000h
	       92d
POGOK.PE4.RETCODE%		 simple variable     integer*1 	 00000000h
	       93d
POGOK.PE19.RETCODE%		 simple variable     integer*1 	 00000000h
	       94d
POGOK.DAYS.TO.RETAIN%		 simple variable     integer*2 	 00000000h
	       97d
POGOK.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       98d
POGOK.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       99d
POGOK.RECL%			 simple variable     integer*2 	 00000000h
	       100d
POGOK.SRD.REC.COUNT%		 simple variable     integer*4 	 00000000h
	       103d
POGOK.SRM.REC.COUNT%		 simple variable     integer*4 	 00000000h
	       104d
POGOK.FILE.NAME$		 simple variable     string	 00000000h
	       107d
POGOK.SRD.SER.NO$		 simple variable     string	 00000000h
	       108d
POGOK.SRM.SER.NO$		 simple variable     string	 00000000h
	       109d
POGOK.SRD.DATE$			 simple variable     string	 00000000h
	       110d
POGOK.SRM.DATE$			 simple variable     string	 00000000h
	       111d
POGOK.RELOAD$			 simple variable     string	 00000000h
	       112d
POGOK.PE10.RUNFLAG$		 simple variable     string	 00000000h
	       113d
POGOK.PE5.RUNFLAG$		 simple variable     string	 00000000h
	       114d
POGOK.PE6.RUNFLAG$		 simple variable     string	 00000000h
	       115d
POGOK.PE7.RUNFLAG$		 simple variable     string	 00000000h
	       116d
POGOK.PE4.RUNFLAG$		 simple variable     string	 00000000h
	       117d
POGOK.FAILED.SRD.SER.NO$	 simple variable     string	 00000000h
	       118d
POGOK.FAILED.SRD.DATE$		 simple variable     string	 00000000h
	       119d
POGOK.FAILED.SRM.SER.NO$	 simple variable     string	 00000000h
	       120d
POGOK.FAILED.SRM.DATE$		 simple variable     string	 00000000h
	       121d
POGOK.PE10.RUNDATE$		 simple variable     string	 00000000h
	       122d
POGOK.PE5.RUNDATE$		 simple variable     string	 00000000h
	       123d
POGOK.PE6.RUNDATE$		 simple variable     string	 00000000h
	       124d
POGOK.PE7.RUNDATE$		 simple variable     string	 00000000h
	       125d
POGOK.PE4.RUNDATE$		 simple variable     string	 00000000h
	       126d
POGOK.PE19.RUNFLAG$		 simple variable     string	 00000000h
	       127d
POGOK.PE19.RUNDATE$		 simple variable     string	 00000000h
	       128d
POGOK.FILLER$			 simple variable     string	 00000000h
	       129d
F01.RETURN.CODE%		 simple variable     integer*2 	 00000000h
	       146d
F20.FILE.NAME$			 simple variable     string	 00000000h
	       170d
F20.STRING.FILE.NO$		 simple variable     string	 00000000h
	       171d
F20.TABLE.DIMENSIONED.FLAG$	 simple variable     string	 00000000h
	       172d
SESS.NUM.TABLE$			 array(1)	     string	 00000000h
	       173d
F20.INTEGER.FILE.NO%		 simple variable     integer*2 	 00000000h
	       175d,1520,1525,1530,1535,1540,1545,1550,1555,1560,2200,2205,
	       2210,2215,2220,2225,2230,2235,2240
SRMOD.FACINGS%			 array(1)	     integer*1 	 00000000h
	       188d
SRMOD.MODULE.SEQ%		 simple variable     integer*1 	 00000000h
	       189d
SRMOD.RECORD.CHAIN%		 simple variable     integer*1 	 00000000h
	       190d
SRMOD.SHELF.NUM%		 array(1)	     integer*1 	 00000000h
	       191d
SRMOD.ITEM.COUNT%		 simple variable     integer*2 	 00000000h
	       194d
SRMOD.MAX.ITEMS%		 simple variable     integer*2 	 00000000h
	       195d
SRMOD.MDQ%			 array(1)	     integer*2 	 00000000h
	       196d
SRMOD.PSC%			 array(1)	     integer*2 	 00000000h
	       197d
SRMOD.RECL%			 simple variable     integer*2 	 00000000h
	       198d
SRMOD.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       199d,1522,2202
SRMOD.SHELF.COUNT%		 simple variable     integer*2 	 00000000h
	       200d
SRMOD.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       201d,1525m,1712,1722,1723,1742,2205m
SRMOD.POGDB%			 simple variable     integer*4 	 00000000h
	       204d
SRMOD.ARRAY$			 simple variable     string	 00000000h
	       207d
SRMOD.COPY.NAME$		 simple variable     string	 00000000h
	       208d
SRMOD.DESCRIPTOR$		 simple variable     string	 00000000h
	       209d
SRMOD.FILE.NAME$		 simple variable     string	 00000000h
	       210d,1523,1711,1712,2203
SRMOD.ITEM.CODE$		 array(1)	     string	 00000000h
	       211d
SRMOD.FILLER$			 simple variable     string	 00000000h
	       212d
SRPDF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       222d,1535m,1826,1836,1837,1859,2215m
SRPDF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       223d,1532,2212
SRPDF.RECL%			 simple variable     integer*2 	 00000000h
	       224d,1842,1842
SRPDF.POGDB%			 simple variable     integer*4 	 00000000h
	       227d
SRPDF.FILE.NAME$		 simple variable     string	 00000000h
	       230d,1533,1825,1826,2213
SRPDF.SHRT.DESC$		 simple variable     string	 00000000h
	       231d
SRPDF.FULL.DESC$		 simple variable     string	 00000000h
	       232d
SRPDF.FILLER$			 simple variable     string	 00000000h
	       233d
SRPOG.MODULE.COUNT%		 simple variable     integer*1 	 00000000h
	       245d
SRPOG.KEY.LEVEL%		 simple variable     integer*1 	 00000000h
	       246d
SRPOG.LIVE.RPT.CNT%		 simple variable     integer*1 	 00000000h
	       247d
SRPOG.PEND.RPT.CNT%		 simple variable     integer*1 	 00000000h
	       248d
SRPOG.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       251d,1520m,1666,1675,1676,1695,2200m
SRPOG.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       252d,1517,2197
SRPOG.RECL%			 simple variable     integer*2 	 00000000h
	       253d,1680,1680
SRPOG.POGDB%			 simple variable     integer*4 	 00000000h
	       256d
SRPOG.CAT.DBKEY%		 simple variable     integer*4 	 00000000h
	       257d
SRPOG.CAT1.ID%			 simple variable     integer*4 	 00000000h
	       258d
SRPOG.CAT2.ID%			 simple variable     integer*4 	 00000000h
	       259d
SRPOG.CAT3.ID%			 simple variable     integer*4 	 00000000h
	       260d
SRPOG.POGID%			 simple variable     integer*4 	 00000000h
	       261d
SRPOG.FILE.NAME$		 simple variable     string	 00000000h
	       264d,1518,1665,1666,2198
SRPOG.COPY.NAME$		 simple variable     string	 00000000h
	       265d
SRPOG.ACT.DATE$			 simple variable     string	 00000000h
	       266d
SRPOG.DEACT.DATE$		 simple variable     string	 00000000h
	       267d
SRPOG.DESCRIPTION$		 simple variable     string	 00000000h
	       268d
SRPOG.PLANNER.FAMILY$		 simple variable     string	 00000000h
	       269d
SRPOG.DATE.RPT.CNT$		 simple variable     string	 00000000h
	       270d
SRPOG.FILLER$			 simple variable     string	 00000000h
	       271d
SRSXF.MODULE.SEQ%		 simple variable     integer*1 	 00000000h
	       283d
SRSXF.SHELF.NO%			 simple variable     integer*1 	 00000000h
	       284d
SRSXF.NOTCH.NO%			 simple variable     integer*1 	 00000000h
	       285d
SRSXF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       288d,1530m,1758,1768,1769,1809,2210m
SRSXF.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       289d,1527,2207
SRSXF.RECL%			 simple variable     integer*2 	 00000000h
	       290d,1773,1773
SRSXF.POGDB%			 simple variable     integer*4 	 00000000h
	       293d
SRSXF.SHELF.KEY%		 simple variable     integer*4 	 00000000h
	       294d
SRSXF.FILE.NAME$		 simple variable     string	 00000000h
	       297d,1528,1757,1758,2208
SRSXF.SHELF.DESC$		 simple variable     string	 00000000h
	       298d
SRSXF.FILLER$			 simple variable     string	 00000000h
	       299d
PINFO.TABLE$			 simple variable     string	 00000000h
	       311d,2078m,2086
PASSED.STRING$			 simple variable     string	 00000000h
	       312d,1518m,1523m,1528m,1533m,1538m,1543m,1548m,1553m,1558m,
	       1575,2198m,2203m,2208m,2213m,2218m,2223m,2228m,2233m,2238m
SVC.PARAM$			 simple variable     string	 00000000h
	       313d,2009m,2037m,2066m,2081,2082,2083,2084,2085,2086,2087,
	       2088
FILE.OPERATION$			 simple variable     string	 00000000h
	       314d,1572m
ADX.FUNCTION%			 simple variable     integer*4 	 00000000h
	       317d,2102m,2106
ADX.PARAM%			 simple variable     integer*4 	 00000000h
	       318d
CURRENT.REPORT.NUM%		 simple variable     integer*4 	 00000000h
	       319d,1573m
PASSED.INTEGER%			 simple variable     integer*4 	 00000000h
	       320d,1517m,1522m,1527m,1532m,1537m,1542m,1547m,1552m,1557m,
	       1573,1574,2197m,2202m,2207m,2212m,2217m,2222m,2227m,2232m,
	       2237m
RC%				 simple variable     integer*4 	 00000000h
	       321d,1574m,1576,2105,2110,2124,2124

Function: BEMF.SET returns real

	       409d

Function: READ.BEMF returns integer*1 

	       412d

Function: OSSHELL returns integer*4 

	       442d,2112

  NAME				  CLASS		      TYPE	  OFFSET

CMD.LINE$			 parameter	     string	 00000000h
	       442d,445d


Function: MEMFREE returns integer*4 

	       461d

  NAME				  CLASS		      TYPE	  OFFSET

CHOICE				 parameter	     integer*2 	 00000000h
	       461d,464d


Function: TIMEDATE returns integer*4 

	       471d

  NAME				  CLASS		      TYPE	  OFFSET

CHOICE				 parameter	     integer*2 	 00000000h
	       471d,474d


Function: SETTIME returns integer*4 

	       482d

  NAME				  CLASS		      TYPE	  OFFSET

MSECS				 parameter	     integer*4 	 00000000h
	       482d,485d


Function: TRUNCATE returns integer*4 

	       496d

  NAME				  CLASS		      TYPE	  OFFSET

NAME				 parameter	     string	 00000000h
	       496d,499d
LENGTH				 parameter	     integer*4 	 00000004h
	       496d,500d


Function: ISALPHA returns integer*1 

	       506d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRN				 parameter	     string	 00000000h
	       506d,509d


Function: ISDIGIT returns integer*1 

	       516d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRN				 parameter	     string	 00000000h
	       516d,519d


Function: ISLOWER returns integer*1 

	       526d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRN				 parameter	     string	 00000000h
	       526d,529d


Function: ISUPPER returns integer*1 

	       536d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRN				 parameter	     string	 00000000h
	       536d,539d


Function: TOALPHA returns integer*2 

	       546d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRN				 parameter	     string	 00000000h
	       546d,549d


Function: IDLECOUNT returns integer*4 

	       555d

  NAME				  CLASS		      TYPE	  OFFSET

CHOICE				 parameter	     integer*1 	 00000000h
	       555d,558d


Function: LOGICAL returns integer*4 

	       567d

  NAME				  CLASS		      TYPE	  OFFSET

ACTNAME				 parameter	     string	 00000000h
	       567d,571d
LOGNAME				 parameter	     string	 00000004h
	       567d,570d
CHOICE				 parameter	     integer*1 	 00000008h
	       567d,572d


Function: INSERTS returns integer*2 

	       585d

  NAME				  CLASS		      TYPE	  OFFSET

WHOLE				 parameter	     string	 00000000h
	       585d,588d
PART				 parameter	     string	 00000004h
	       585d,589d
OFFSET				 parameter	     integer*2 	 00000008h
	       585d,590d


Function: CINSERT4 returns integer*1 

	       594d

  NAME				  CLASS		      TYPE	  OFFSET

INTEGER4			 parameter	     integer*4 	 00000000h
	       594d,597d
BSTRING				 parameter	     string	 00000004h
	       594d,598d
OFFSET				 parameter	     integer*2 	 00000008h
	       594d,599d


Function: CINSERT2 returns integer*1 

	       603d

  NAME				  CLASS		      TYPE	  OFFSET

INTEGER2			 parameter	     integer*2 	 00000000h
	       603d,606d
BSTRING				 parameter	     string	 00000002h
	       603d,607d
OFFSET				 parameter	     integer*2 	 00000006h
	       603d,608d


Function: CINSERT1 returns integer*1 

	       612d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRING				 parameter	     string	 00000000h
	       612d,616d
INTEGER1			 parameter	     integer*1 	 00000004h
	       612d,615d
OFFSET				 parameter	     integer*2 	 00000006h
	       612d,617d


Function: EXTRACTS returns integer*2 

	       621d

  NAME				  CLASS		      TYPE	  OFFSET

WHOLE				 parameter	     string	 00000000h
	       621d,624d
PART				 parameter	     string	 00000004h
	       621d,625d
OFFSET				 parameter	     integer*2 	 00000008h
	       621d,626d


Function: CEXTRACT4 returns integer*4 

	       630d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRING				 parameter	     string	 00000000h
	       630d,634d
OFFSET				 parameter	     integer*2 	 00000004h
	       630d,635d


Function: CEXTRACT2 returns integer*2 

	       639d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRING				 parameter	     string	 00000000h
	       639d,643d
OFFSET				 parameter	     integer*2 	 00000004h
	       639d,644d


Function: CEXTRACT1 returns integer*1 

	       648d

  NAME				  CLASS		      TYPE	  OFFSET

BSTRING				 parameter	     string	 00000000h
	       648d,652d
OFFSET				 parameter	     integer*2 	 00000004h
	       648d,653d


Function: SRCHDIR returns integer*4 

	       658d

  NAME				  CLASS		      TYPE	  OFFSET

FILE.NAME$			 parameter	     string	 00000000h
	       658d,680d
DTBL.BUFFER$			 parameter	     string	 00000004h
	       658d,685d


Function: SRCHPROC returns integer*4 

	       728d

  NAME				  CLASS		      TYPE	  OFFSET

PROC.NAME$			 parameter	     string	 00000000h
	       728d,813d
PTBL.BUFFER$			 parameter	     string	 00000004h
	       728d,818d


Function: CCONSTAT returns integer*2 

	       827d

  NAME				  CLASS		      TYPE	  OFFSET

TIMEOUT				 parameter	     integer*4 	 00000000h
	       827d,830d


Function: DISKSIZE returns integer*4 

	       840d

  NAME				  CLASS		      TYPE	  OFFSET

DISK.NAME$			 parameter	     string	 00000000h
	       840d,843d


Subprogram: LOG.ERROR

	       852d

  NAME				  CLASS		      TYPE	  OFFSET

F.1$				 parameter	     string	 00000000h
	       852d,853d


Function: FORCE.CASE$ returns string

	       858d

  NAME				  CLASS		      TYPE	  OFFSET

DATA$				 parameter	     string	 00000000h
	       858d,860d
TYPE%				 parameter	     integer*2 	 00000004h
	       858d,861d
IN$				 simple variable     string	 00000000h
	       862d
OUT$				 simple variable     string	 00000000h
	       862d
LWR$				 simple variable     string	 00000000h
	       863d
UPR$				 simple variable     string	 00000000h
	       863d


Function: REMOVE.CHARACTER$ returns string

	       868d

  NAME				  CLASS		      TYPE	  OFFSET

DATA$				 parameter	     string	 00000000h
	       868d,869d
F.CHR$				 parameter	     string	 00000004h
	       868d,870d
START%				 simple variable     integer*2 	 00000000h
	       872d
END%				 simple variable     integer*2 	 00000000h
	       873d
POS%				 simple variable     integer*2 	 00000000h
	       874d
F.LEN%				 simple variable     integer*2 	 00000000h
	       875d


Function: REMOVE.SPACES$ returns string

	       880d

  NAME				  CLASS		      TYPE	  OFFSET

DATA$				 parameter	     string	 00000000h
	       880d,881d
START%				 simple variable     integer*2 	 00000000h
	       883d
END%				 simple variable     integer*2 	 00000000h
	       884d
POS%				 simple variable     integer*2 	 00000000h
	       885d


Function: TIME.STAMP$ returns string

	       895d,1417,1422,1588,1589,1662,1663,1707,1708,1754,1755,1822,
	       1823,1871,1872,1918,1919,1994,1995,2022,2023,2050,2051,2099,
	       2100,2116,2117,2130,2131

  NAME				  CLASS		      TYPE	  OFFSET

F.TYPE%				 parameter	     integer*2 	 00000000h
	       895d,897d
F.DT$				 simple variable     string	 00000000h
	       898d
F.RET$				 simple variable     string	 00000000h
	       899d


Function: PRINT.MSG$ returns string

	       906d

  NAME				  CLASS		      TYPE	  OFFSET

MSG$				 parameter	     string	 00000000h
	       906d,908d
F%				 parameter	     integer*2 	 00000004h
	       906d,909d
L%				 parameter	     integer*2 	 00000006h
	       906d,910d
IN$				 simple variable     string	 00000000h
	       911d
F.FORM$				 simple variable     string	 00000000h
	       912d


Subprogram: BACKGROUND.MSG

	       922d

  NAME				  CLASS		      TYPE	  OFFSET

B.MSG$				 parameter	     string	 00000000h
	       922d,923d
B.RET%				 simple variable     integer*4 	 00000000h
	       924d


Subprogram: NO.OPEN.FILE

	       939d

  NAME				  CLASS		      TYPE	  OFFSET

F.REPORT%			 parameter	     integer*2 	 00000000h
	       939d,940d
F.OPEN.FLAG$			 parameter	     string	 00000004h
	       939d,941d
F.1$				 simple variable     string	 00000000h
	       942d
F.2$				 simple variable     string	 00000000h
	       942d
F.EVENT%			 simple variable     integer*2 	 00000000h
	       943d


Function: NUMBER.OF.DAYS% returns integer*2 

	       948d

  NAME				  CLASS		      TYPE	  OFFSET

START$				 parameter	     string	 00000000h
	       948d,950d
END$				 parameter	     string	 00000004h
	       948d,951d
F.DAYS%				 simple variable     integer*2 	 00000000h
	       952d
S.DAYS%				 simple variable     integer*4 	 00000000h
	       953d
E.DAYS%				 simple variable     integer*4 	 00000000h
	       954d


Function: HEX.FORMAT$ returns string

	       957d

  NAME				  CLASS		      TYPE	  OFFSET

F.DATA$				 parameter	     string	 00000000h
	       957d,959d
F.RET$				 simple variable     string	 00000000h
	       960d
F.LEN%				 simple variable     integer*2 	 00000000h
	       961d
F.TMP$				 array(2)	     string	 00000000h
	       962d
F.FORM$				 simple variable     string	 00000000h
	       963d
F.ASCII$			 simple variable     string	 00000000h
	       964d
F.ASC$				 simple variable     string	 00000000h
	       965d
F.HEX$				 simple variable     string	 00000000h
	       966d
F.WORK$				 simple variable     string	 00000000h
	       967d
F.W2$				 simple variable     string	 00000000h
	       967d
F.LOOP%				 simple variable     integer*2 	 00000000h
	       968d
F.L2%				 simple variable     integer*2 	 00000000h
	       968d


Function: FORMAT.NUMBER$ returns string

	       971d

  NAME				  CLASS		      TYPE	  OFFSET

F.NUM$				 parameter	     string	 00000000h
	       971d,973d
F.DEC%				 parameter	     integer*2 	 00000004h
	       971d,974d
F.NUM%				 simple variable     integer*4 	 00000000h
	       975d


Function: FORMAT.BOOTS.CODE$ returns string

	       979d

  NAME				  CLASS		      TYPE	  OFFSET

F.CODE$				 parameter	     string	 00000000h
	       979d,981d


Function: FORMAT.STRING$ returns string

	       984d

  NAME				  CLASS		      TYPE	  OFFSET

F.STRING$			 parameter	     string	 00000000h
	       984d,986d
F.L%				 parameter	     integer*2 	 00000004h
	       984d,987d
F.P$				 parameter	     string	 00000006h
	       984d,988d
F.J%				 parameter	     integer*2 	 0000000ah
	       984d,989d


Subprogram: GET.BLOCK.SIZE

	       992d

  NAME				  CLASS		      TYPE	  OFFSET

F.BLOCK.SIZE%			 parameter	     integer*4 	 00000000h
	       992d,993d
F.FILENAME$			 parameter	     string	 00000004h
	       992d,994d
F.SIZE%				 parameter	     integer*4 	 00000008h
	       992d,995d
F.BLOCK%			 simple variable     integer*4 	 00000000h
	       996d
F.SECTOR%			 simple variable     integer*2 	 00000000h
	       997d
F.LOOP%				 simple variable     integer*2 	 00000000h
	       998d
F.BLOCK.LENGTH$			 simple variable     string	 00000000h
	       999d


Function: GETN1 returns integer*2 

	       1015d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1015d,1016d
P%				 parameter	     integer*2 	 00000004h
	       1015d,1017d


Function: GETN2 returns integer*2 

	       1022d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1022d,1023d
P%				 parameter	     integer*2 	 00000004h
	       1022d,1024d


Function: GETN4 returns integer*4 

	       1029d,1681,1728,1774,1787,1787,1844,1889,1889,1932,1932

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1029d,1030d
P%				 parameter	     integer*2 	 00000004h
	       1029d,1031d


Function: GETR10 returns real

	       1036d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1036d,1037d
P%				 parameter	     integer*2 	 00000004h
	       1036d,1038d


Function: PUTN1 returns integer*1 

	       1043d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1043d,1044d
P%				 parameter	     integer*2 	 00000004h
	       1043d,1045d
N%				 parameter	     integer*1 	 00000006h
	       1043d,1046d


Function: PUTN2 returns integer*1 

	       1051d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1051d,1052d
P%				 parameter	     integer*2 	 00000004h
	       1051d,1053d
N%				 parameter	     integer*2 	 00000006h
	       1051d,1054d


Function: PUTN4 returns integer*1 

	       1059d,2081,2082,2083,2084,2085,2086,2087

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1059d,1060d
P%				 parameter	     integer*2 	 00000004h
	       1059d,1061d
N%				 parameter	     integer*4 	 00000006h
	       1059d,1062d


Function: PUTR10 returns integer*1 

	       1067d

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1067d,1068d
P%				 parameter	     integer*2 	 00000004h
	       1067d,1069d
R				 parameter	     real	 00000006h
	       1067d,1070d


Function: PEEKN2 returns integer*2 

	       1075d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       1075d,1076d


Function: PEEKN4 returns integer*4 

	       1081d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       1081d,1082d


Function: PEEKR10 returns real

	       1087d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       1087d,1088d


Function: POKEN2 returns integer*1 

	       1093d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       1093d,1094d
N%				 parameter	     integer*2 	 00000004h
	       1093d,1095d


Function: POKEN4 returns integer*1 

	       1100d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       1100d,1101d
N%				 parameter	     integer*4 	 00000004h
	       1100d,1102d


Function: POKER10 returns integer*1 

	       1107d

  NAME				  CLASS		      TYPE	  OFFSET

A%				 parameter	     integer*4 	 00000000h
	       1107d,1108d
R				 parameter	     real	 00000004h
	       1107d,1109d


Function: POGDE.SET returns real

	       1121d

Function: READ.POGDE returns integer*2 

	       1124d

Function: POGOK.SET returns real

	       1135d

Function: READ.POGOK returns integer*2 

	       1138d

Function: READ.POGOK.LOCK returns integer*2 

	       1142d

Function: WRITE.POGOK returns integer*2 

	       1146d

Function: WRITE.POGOK.UNLOCK returns integer*2 

	       1150d

Function: CREATE.POGOK returns integer*2 

	       1154d

Function: APPLICATION.LOG returns integer*2 

	       1176d

  NAME				  CLASS		      TYPE	  OFFSET

MESSAGE.NO%			 parameter	     integer*2 	 00000000h
	       1176d,1184d
VAR.STRING.1$			 parameter	     string	 00000002h
	       1177d,1186d
VAR.STRING.2$			 parameter	     string	 00000006h
	       1178d,1187d
EVENT.NO%			 parameter	     integer*1 	 0000000ah
	       1179d,1181d


Function: SESS.NUM.UTILITY returns integer*2 

	       1213d,1574

  NAME				  CLASS		      TYPE	  OFFSET

FUNCTION.FLAG$			 parameter	     string	 00000000h
	       1213d,1218d
PASSED.INTEGER%			 parameter	     integer*2 	 00000004h
	       1214d,1224d
PASSED.STRING$			 parameter	     string	 00000006h
	       1215d,1219d


Function: STANDARD.ERROR.DETECTED returns integer*2 

	       1242d

  NAME				  CLASS		      TYPE	  OFFSET

ERRN%				 parameter	     integer*4 	 00000000h
	       1242d,1253d
ERRFILE%			 parameter	     integer*2 	 00000004h
	       1243d,1249d
ERRL%				 parameter	     integer*2 	 00000006h
	       1244d,1250d
ERR$				 parameter	     string	 00000008h
	       1245d,1247d


Function: GET.CATID% returns integer*4 

	       1270d

  NAME				  CLASS		      TYPE	  OFFSET

LEV1%				 parameter	     integer*4 	 00000000h
	       1270d,1273d
LEV2%				 parameter	     integer*4 	 00000004h
	       1270d,1273d
LEV3%				 parameter	     integer*4 	 00000008h
	       1270d,1273d


Function: SRPDF.SET returns real

	       1286d,1455

Function: READ.SRPDF returns integer*2 

	       1289d

Function: WRITE.SRPDF returns integer*2 

	       1293d

Function: DELREC.SRPDF returns integer*2 

	       1297d

Function: SRPOG.SET returns real

	       1308d,1453

Function: READ.SRPOG returns integer*2 

	       1311d

Function: WRITE.SRPOG returns integer*2 

	       1315d

Function: DELREC.SRPOG returns integer*2 

	       1319d

Function: SRMOD.SET returns real

	       1330d,1454

Function: READ.SRMOD returns integer*2 

	       1333d

Function: WRITE.SRMOD returns integer*2 

	       1337d

Function: DELREC.SRMOD returns integer*2 

	       1341d

Subprogram: SRMOD.SPLIT.SHELF.ITEM

	       1345d

Function: SRSXF.SET returns real

	       1355d,1456

Function: READ.SRSXF returns integer*2 

	       1358d

Function: WRITE.SRSXF returns integer*2 

	       1362d

Function: DELREC.SRSXF returns integer*2 

	       1366d

Function: FLEXOSSVC returns integer*2 

	       1377d,2088

  NAME				  CLASS		      TYPE	  OFFSET

COMMAND%			 parameter	     integer*2 	 00000000h
	       1377d,1379d
PARAM$				 parameter	     string	 00000002h
	       1377d,1378d


Subprogram: ADXSERVE

	       1389d,2105,2119

  NAME				  CLASS		      TYPE	  OFFSET

RET				 parameter	     integer*4 	 00000000h
	       1389d,1390d
FUNC				 parameter	     integer*2 	 00000004h
	       1389d,1391d
PARM1				 parameter	     integer*2 	 00000008h
	       1389d,1391d
PARM2$				 parameter	     string	 0000000ch
	       1389d,1392d


Subprogram: ADXCOPYF

	       1402d

  NAME				  CLASS		      TYPE	  OFFSET

RETC				 parameter	     integer*4 	 00000000h
	       1402d,1403d
INFILE				 parameter	     string	 00000004h
	       1402d,1404d
OUTFILE				 parameter	     string	 00000008h
	       1402d,1404d
OPT0				 parameter	     integer*2 	 0000000ch
	       1402d,1405d
OPT1				 parameter	     integer*2 	 00000010h
	       1402d,1405d

Module-Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

ADX.COMMAND$			 simple variable     string	 00000000h
	       330d,2104m,2108
COMM.TAIL$			 simple variable     string	 00000004h
	       331d,2000m,2028m,2057m,2080m,2080,2084,2085
FUNCTION.FLAG$			 simple variable     string	 00000008h
	       332d,1515m,1572,1574,2195m
PROG.NAME$			 simple variable     string	 0000000ch
	       333d,1999m,2027m,2056m,2079m,2079,2083
PHKEEP.OK.NAME$			 simple variable     string	 00000010h
	       334d,1477m,1492,1543,2223
PHKEEP.LOG.NAME$		 simple variable     string	 00000014h
	       335d,1474m,1490,1538,1611,2218
RCD$				 simple variable     string	 00000000h
	       336d
SEC$				 simple variable     string	 00000018h
	       337d,1676,1680,1723,1726,1727,1769,1773,1837,1841,1842
SPACE$				 simple variable     string	 0000001ch
	       338d,1488m,2112
SRMOD.ARR$			 array(1)	     string	 00000020h
	       339d,1462,1730m,1889,1889,1958
SRMOD.DIR.NAME$			 simple variable     string	 00000024h
	       340d,1480m,1548,1591,2001,2228
SRMOD.NEW.FILE$			 simple variable     string	 00000000h
	       341d
SRPDF.ARRAY$			 array(1)	     string	 00000028h
	       342d,1468,1847m,1932,1982
SRPDF.DIR.NAME$			 simple variable     string	 0000002ch
	       343d,1482m,1553,1593,2058,2233
SRPDF.KEY.NAME$			 simple variable     string	 00000030h
	       344d,1483m,2059
SRMOD.KEY.NAME$			 simple variable     string	 00000034h
	       345d,1481m,2002
SRPOG.ARRAY$			 array(1)	     string	 00000038h
	       346d,1459,1684m,1787,1932
SRSXF.ARRAY$			 array(1)	     string	 0000003ch
	       347d,1465
SRPOG.STRING$			 simple variable     string	 00000040h
	       348d,1680m,1681,1684
SRMOD.STRING$			 simple variable     string	 00000044h
	       349d,1726m,1727m,1728,1730
SRSXF.STRING$			 simple variable     string	 00000048h
	       350d,1773m,1774,1787,1970
SRSXF.DIR.NAME$			 simple variable     string	 0000004ch
	       351d,1484m,1558,1595,2029,2238
SRSXF.KEY.NAME$			 simple variable     string	 00000050h
	       352d,1485m,2030
SRPDF.STRING$			 simple variable     string	 00000054h
	       353d,1841m,1842m,1844,1847
TEMP.ARR$			 array(1)	     string	 00000058h
	       354d,1470
TEMP.FORM$			 simple variable     string	 00000000h
	       355d
ADX.INTEGER%			 simple variable     integer*4 	 0000005ch
	       358d,2103m,2107
I%				 simple variable     integer*4 	 00000060h
	       359d,1668m,1674m,1674,1676,1714m,1721m,1721,1723,1760m,1767m,
	       1767,1769,1828m,1835m,1835,1837,1875m,1884m,1886,1897m,1901m,
	       1901,1921m,1928m,1930,1932,1939m,1943m,1943
EOF%				 simple variable     integer*4 	 00000064h
	       360d,1672,1694m,1716m,1719,1741m,1762m,1765,1808m,1830m,1833,
	       1858m
K%				 simple variable     integer*4 	 00000068h
	       361d,1783m,1785,1787,1795m,1795
FOUND%				 simple variable     integer*4 	 0000006ch
	       362d,1472m,1883m,1886,1895m,1927m,1930,1937m
FOUND1%				 simple variable     integer*4 	 00000000h
	       363d
J%				 simple variable     integer*4 	 00000070h
	       364d,1678,1680,1686m,1725,1733m,1771,1773,1799m,1839,1842,
	       1849m,1876m,1881,1889,1889,1922m,1925,1932,1958,1982
NOFILE.SRMOD.COUNT%		 simple variable     integer*4 	 00000000h
	       365d
NOFILE.SRPDF.COUNT%		 simple variable     integer*4 	 00000000h
	       366d
NOFILE.SRSXF.COUNT%		 simple variable     integer*4 	 00000000h
	       367d
PHKEEP.OK.SESS%			 simple variable     integer*4 	 00000074h
	       368d,1478m,1492,1542,1545m,2222,2225m
PHKEEP.SESS.NUM%		 simple variable     integer*4 	 00000078h
	       369d,1422,1475m,1490,1537,1540m,1589,1610,1611,1663,1708,
	       1755,1823,1872,1919,1995,2023,2051,2100,2117,2131,2217,2220m
POGDB%				 simple variable     integer*4 	 00000000h
	       370d
RPS%				 simple variable     integer*4 	 0000007ch
	       371d,1670m,1678,1686,1715m,1725,1733,1761m,1771,1799,1829m,
	       1839,1849
RC1%				 simple variable     integer*4 	 00000080h
	       372d,2119,2122,2128,2128
SRMOD%				 simple variable     integer*4 	 00000084h
	       373d,1461m,1462,1717m,1729m,1729,1730,1881
SRMOD.DIR.SESS%			 simple variable     integer*4 	 00000088h
	       374d,1550m,1591,1958,1997,2230m
SRPDF%				 simple variable     integer*4 	 0000008ch
	       375d,1467m,1468,1470,1831m,1846m,1846,1847,1925
SRPOG%				 simple variable     integer*4 	 00000090h
	       376d,1458m,1459,1669m,1683m,1683,1684,1785,1886,1897,1930,
	       1939
SRSXF%				 simple variable     integer*4 	 00000094h
	       377d,1464m,1465,1763m,1776m,1776
SRPOG.COUNT%			 simple variable     integer*4 	 00000000h
	       378d
SRPDF.DIR.SESS%			 simple variable     integer*4 	 00000098h
	       379d,1555m,1593,1982,2054,2235m
SRMOD.COUNT%			 simple variable     integer*4 	 0000009ch
	       380d,1878m,1891m,1891
SRPDF.COUNT%			 simple variable     integer*4 	 000000a0h
	       381d,1923m,1934m,1934
SRSXF.COUNT%			 simple variable     integer*4 	 000000a4h
	       382d,1789m,1789
SRSXF.DIR.SESS%			 simple variable     integer*4 	 000000a8h
	       383d,1560m,1595,1970,2025,2240m
TEMP.COUNT%			 simple variable     integer*4 	 000000ach
	       384d,1877m
ERROR.DETECTED			 label		     
	       1415,1576,2252d
INITIALISATION			 label		     
	       1420,1435d
MAIN.PROCESSING			 label		     
	       1423,1631d
TERMINATION			 label		     
	       1424,2170d
STOP.PROGRAM			 label		     
	       1426d
INITIALISE.VARIABLES		 label		     
	       1437,1451d
ALLOCATE.SESSION.NUMBERS	 label		     
	       1438,1513d
OPEN.FILES			 label		     
	       1439,1608d
CREATE.FILES			 label		     
	       1440,1586d
@RDUMMY				 simple variable     real	 000000b0h
CONTROLLER.CONFIG.CHECK		 label		     
	       1503d
CALL.F20.SESS.NUM.UTILITY	 label		     
	       1519,1524,1529,1534,1539,1544,1549,1554,1559,1570d,2199,2204,
	       2209,2214,2219,2224,2229,2234,2239
PHKEEP.END			 label		     
	       1610,1618d
SEQUENTIAL.READ.SRPOG		 label		     
	       1633,1660d
SEQUENTIAL.READ.SRMOD		 label		     
	       1635,1705d
SEQUENTIAL.READ.SRPDF		 label		     
	       1639,1820d
COMPARE.SRMOD			 label		     
	       1641,1869d
COMPARE.SRPDF			 label		     
	       1642,1916d
CREATE.SRMOD.KEY		 label		     
	       1644,1992d
CREATE.SRSXF.KEY		 label		     
	       1645,2020d
CREATE.SRPDF.KEY		 label		     
	       1646,2048d
BACKUP.ORIGINALS		 label		     
	       1648,2097d
RENAME.NEW			 label		     
	       1649,2146d
SET.DISTRIBUTION		 label		     
	       1650,2159d
SRPOG.END			 label		     
	       1675,1691d
@LSTEP				 simple variable     integer*4 	 000000bah
SRMOD.END			 label		     
	       1722,1737d
SEQUENTIAL.READ.SRSXF		 label		     
	       1752d
SRSXF.END			 label		     
	       1768,1805d
CREATE.SRSXF.DIR		 label		     
	       1791,1968d
SRPDF.END			 label		     
	       1836,1855d
CREATE.SRMOD.DIR		 label		     
	       1893,1956d
CREATE.SRPDF.DIR		 label		     
	       1936,1980d
EXECUTE.SVC			 label		     
	       2010,2038,2067,2076d
CLOSE.FILES			 label		     
	       2172,2183d
DEALLOCATE.SESS.NUM		 label		     
	       2173,2193d

