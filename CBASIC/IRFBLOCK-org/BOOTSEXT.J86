\******************************************************************************
\******************************************************************************
SUB LOG.ERROR(F.1$) EXTERNAL
    STRING  F.1$
END SUB

\******************************************************************************
\******************************************************************************
FUNCTION FORCE.CASE$(DATA$,TYPE%) EXTERNAL
    STRING      FORCE.CASE$
    STRING      DATA$
    INTEGER*2   TYPE%
    STRING      IN$, OUT$
    STRING      LWR$, UPR$
END FUNCTION

\******************************************************************************
\******************************************************************************
FUNCTION REMOVE.CHARACTER$(DATA$,F.CHR$) EXTERNAL
    STRING      DATA$
    STRING      F.CHR$
    STRING      REMOVE.CHARACTER$
    INTEGER*2   START%
    INTEGER*2   END%
    INTEGER*2   POS%
    INTEGER*2   F.LEN%
END FUNCTION

\******************************************************************************
\******************************************************************************
FUNCTION REMOVE.SPACES$(DATA$) EXTERNAL
    STRING      DATA$
    STRING      REMOVE.SPACES$
    INTEGER*2   START%
    INTEGER*2   END%
    INTEGER*2   POS%
END FUNCTION

\*******************************************************************************
\***
\***    FUNCTION     :    TIME.STAMP$
\***    
\***    Returns a string with formatted date and/or time detail
\***                 Passed values are 1 = Date, 2 = Time
\*******************************************************************************
FUNCTION TIME.STAMP$(F.TYPE%) EXTERNAL
    STRING      TIME.STAMP$
    INTEGER*2   F.TYPE%
    STRING      F.DT$
    STRING      F.RET$
END FUNCTION
\*******************************************************************************


\*******************************************************************************
\*******************************************************************************
FUNCTION PRINT.MSG$(MSG$,F%,L%) EXTERNAL
STRING      PRINT.MSG$
STRING      MSG$
INTEGER*2   F%
INTEGER*2   L%
STRING      IN$
STRING      F.FORM$
END FUNCTION
\*******************************************************************************

\*******************************************************************************
\***
\***    SUBROUTINE     :    BACKGROUND.MSG(B.MSG$)
\***    
\***    Displays passed message to the background message.
\*******************************************************************************
SUB BACKGROUND.MSG(B.MSG$) EXTERNAL
    STRING      B.MSG$
    INTEGER*4   B.RET%
END SUB
\*******************************************************************************

!*****************************************************************************!
!***                                                                          !
!*** SUBROUTINE :   NO.OPEN.FILE                                              !
!***                    F.REPORT%       - Passed report number for logging    !
!***                    F.OPEN.FLAG$    - Returned flag for not-opened        !
!***                                                                          !
!*** This subroutine logs an application 106 error with the passed report     !
!*** number. It also sets a return variable to "N" to flag that the file is   !
!*** not Open because of the failure.                                         !
!***                                                                          !
!*****************************************************************************!
SUB NO.OPEN.FILE(F.REPORT%,F.OPEN.FLAG$) EXTERNAL                                      
    INTEGER*2   F.REPORT%                                                         
    STRING      F.OPEN.FLAG$                                                      
    STRING      F.1$, F.2$
    INTEGER*2   F.EVENT%
END SUB                                                                       
!*****************************************************************************!


FUNCTION NUMBER.OF.DAYS%(START$,END$) EXTERNAL
INTEGER*2   NUMBER.OF.DAYS%
STRING      START$
STRING      END$
INTEGER*2   F.DAYS%
INTEGER*4   S.DAYS%
INTEGER*4   E.DAYS%
END FUNCTION

FUNCTION HEX.FORMAT$(F.DATA$) EXTERNAL
STRING  HEX.FORMAT$
STRING  F.DATA$
STRING      F.RET$
INTEGER*2   F.LEN%
STRING      F.TMP$(2)
STRING      F.FORM$
STRING      F.ASCII$
STRING      F.ASC$
STRING      F.HEX$
STRING      F.WORK$, F.W2$
INTEGER*2   F.LOOP%, F.L2%
END FUNCTION

FUNCTION FORMAT.NUMBER$(F.NUM$,F.DEC%) EXTERNAL
STRING      FORMAT.NUMBER$
STRING      F.NUM$
INTEGER*2   F.DEC%
INTEGER*4   F.NUM%
END FUNCTION

\*******************************************************************************
FUNCTION FORMAT.BOOTS.CODE$(F.CODE$) EXTERNAL
STRING  FORMAT.BOOTS.CODE$
STRING  F.CODE$
END FUNCTION

FUNCTION FORMAT.STRING$(F.STRING$,F.L%,F.P$,F.J%) EXTERNAL
STRING    FORMAT.STRING$
STRING    F.STRING$
INTEGER*2 F.L%
STRING    F.P$
INTEGER*2 F.J%
END FUNCTION

SUB GET.BLOCK.SIZE(F.BLOCK.SIZE%,F.FILENAME$,F.SIZE%) EXTERNAL
INTEGER*4   F.BLOCK.SIZE%
STRING      F.FILENAME$
INTEGER*4   F.SIZE%
INTEGER*4   F.BLOCK%
INTEGER*2   F.SECTOR%
INTEGER*2   F.LOOP%
STRING      F.BLOCK.LENGTH$
END SUB