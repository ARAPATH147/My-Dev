<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PicBox.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAASUkqAAgAAAAEABoBBQABAAAAPgAAABsBBQABAAAA
        RgAAACgBAwABAAAAAgBCADEBAgARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABAAAAUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEB/9sAQwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB/8AAEQgAMABkAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A3tS+I13ealeX2pandXepXk0t5e6hdTrc3l5dXkjTXFzdy3P76ea6lBn888YOO61nyeP0
        5zfOeOhWDkZPof06+/SvjvV/iWuheKbG78uzuzYTadqH2C+BksbwWs0cxtbyNWUzWtxs8m4jDKXid1DK
        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
        C0KOHow5l7tOjCEIRvvpGCX/AAyP/9k=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>