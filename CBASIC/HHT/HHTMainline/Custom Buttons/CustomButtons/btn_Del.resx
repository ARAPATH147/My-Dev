<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkK
        CgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgAUABQAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A6fWNYvNRu5tQ1C7knuJ5GeaeZyzuxOSSTySTzmsS9v8AbnB+pov73aCM/U5rGvr7rz9B
        X8Zttu7P8/JScndjr3U355H5Vk3mrSKCAw/Ko729xn5qyL69xk5/Wi7JbsS3utzDPzL+VZF7r9yucMvv
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>