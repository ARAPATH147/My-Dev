<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PicBox.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAASUkqAAgAAAAEABoBBQABAAAAPgAAABsBBQABAAAA
        RgAAACgBAwABAAAAAgBCADEBAgARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABAAAAUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEB/9sAQwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB/8AAEQgAMABkAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A/n3oopCQBk1/nOf9pAEgDJqlNMc4HX+X+f1+nV003UA89OO3/wBf/P0/bL/g38/Ze+Df
        7Vf7eV74e+OPhDR/iB4O+FvwT8X/ABhtfBPiWwj1bwt4k8R6N40+HHgzR7XxNo9w4sda0ayPju51iXR9
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>