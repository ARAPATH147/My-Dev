<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="picBox.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkK
        CgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgAKwCWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A6rVdVu9Qupb/AFC7knnnkLzTTOWZ2JyWJPJJPesm7vMZ5r65/wCCZv7Jnwt+PkfiX4lf
        FXSpdbtvD0scFj4dhmMa3ErIzl5CGUt0Cqu4KTu3ZAxWl4q/ax/ZQ0TXj4E/aA/4JgweENMlcxveR6ZF
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>