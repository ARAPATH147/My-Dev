<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkK
        CgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgAMAC1AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A63VtXvNUvJdR1K7knuJnLSzSvuZ2PUknrWZcXeM8/rV3QNA8QeNfEdl4Q8J6TNf6nqVy
        lvY2duu55ZGOFUD6nr0H0r6kk/4JTaf4M8P2d9+0P+114O8C39+pNrYXaxujkAEqJZ7iAMy5AOxWAJ4J
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>