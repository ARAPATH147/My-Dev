<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkK
        CgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgAMABkAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A8T8Sa3eapez6pqN089xcStJPNI2Wd2OSSe5JOa5PVNSZc4IP1q/rF994bjxXv3/BJb4c
        /su/Hn9r21+Bv7U/w/j17TfE+j3MOgh9au7L7PqMQE65e2mjLB4o5kCknLFMc9f6yxWJp5bgamJnFyjB
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>