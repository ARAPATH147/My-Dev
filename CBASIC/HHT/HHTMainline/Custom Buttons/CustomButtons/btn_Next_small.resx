<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PicBox.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYz
        LjUuOAAA/9sAQwACAQEBAQECAQEBAgICAgIEAwICAgIFBAQDBAYFBgYGBQYGBgcJCAYHCQcGBggLCAkK
        CgoKCgYICwwLCgwJCgoK/9sAQwECAgICAgIFAwMFCgcGBwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/8AAEQgAMABkAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8Avar8Rbq+1Ga+1TUpZ7meQyTzzSbnkdjksxPJJPOaveBZPEfxK8Yad4D8F2Ml9quq3S29
        jaREZkdvr0HUk9gDXgPivx8LTVzD5wH7tTjNe1f8EuvHI1P9v74YWHmg+b4gYYz/ANMJTX8l5bgY47G0
        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
        SXZLRI//2Q==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
</root>