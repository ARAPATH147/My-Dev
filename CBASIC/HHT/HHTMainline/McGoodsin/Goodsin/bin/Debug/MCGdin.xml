<?xml version="1.0"?>
<doc>
<assembly>
<name>
MCGdin
</name>
</assembly>
<members>
<member name="T:Goodsin.Message.DAL">
	<summary>
 Class with constant variables to hold the offset and length of 
 DAL message fields
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Message.DAD">
	<summary>
 Class with constant variables to hold the offset and length of 
 DAD message fields
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Message.DAE">
	<summary>
 Class with constant variables to hold the offset and length of 
 DAE message fields
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Message">
***************************************************************
* Modification Log 
******************************************************************************* 
* No:      Author            Date            Description 
* 1.1     Christopher Kitto  09/04/2015   Modified as part of DALLAS project.
                  (CK)                 Added new classes DAL, DAD and DAE under
                                       the class Message
********************************************************************************

</member><member name="M:Goodsin.Helper.ValidateDoubleDigitQuantity(System.Int64)">
	<summary>
 This method validates whether the quantity entered 
 is double digit. for eg: 11,22,33,44.
 </summary>
	<param name="iInputValue"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateProductCode(System.String)">
	<summary>
 This method validates the product code that is entered.
 </summary>
	<param name="strProductCode"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateQtyGreaterThanFifty(System.Int64)">
	<summary>
 This method validates whether the quantity entered is greater than 50
 </summary>
	<param name="iInputValue"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateZeroQty(System.Int64)">
	<summary>
 This method validates whether the quantity entered is zero
 </summary>
	<param name="iInputValue"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateEAN(System.String)">
	<summary>
 Validates the CDV for EAN
 </summary>
	<param name="strInputEANVal"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateSEL(System.String)">
	<summary>
 Validates the CDV for SEL
 </summary>
	<param name="strInputEANVal"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateBootsCode(System.String)">
	<summary>
 validates the CDV for Boots Code
 </summary>
	<param name="strBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.FormatBarcode(System.String)">
	<summary>
 Formats the barcode
 </summary>
	<param name="strBarcode"></param>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.UnFormatBarcode(System.String)">
	<summary>
 Unformats the formatted bar code
 </summary>
	<param name="strBarcode"></param>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GetBootsCodeFromSEL(System.String,System.String@)">
	<summary>
 Retrives the Boots Code from SEL
 </summary>
	<param name="strSEL"></param>
	<param name="strBootsCode"></param>
	<returns>True on Success</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GetFormattedDescription(System.String)">
	<summary>
 Formats the description to split into three lines of 15 characters each.
 </summary>
	<param name="strData"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GenerateBCwithCDV(System.String)">
	<summary>
 Calculates the Boots Code based on CDV
 </summary>
	<param name="bootsCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GeneratePCwithCDV(System.String)">
	<summary>
 Calculates the CDV and appends to the product code
 </summary>
	<param name="strBarCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.StringToDateConversion(System.String)">
	<summary>
 String to Date Conversion
 </summary>
	<param name="string_"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateISTCode(System.String,System.String@)">
	<summary>
 Validates the IST barcode
 </summary>
	<param name="strISTBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateUODBarcode(System.String,System.String@)">
	<summary>
 Validates the CDV for UOD barcode
 </summary>
	<param name="strUODNumber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateASNBarcode(System.String,Goodsin.GIValueHolder.ASNCode@)">
	<summary>
 Validates the ASN barcode
 </summary>
	<param name="strASNBarcode"></param>
	<param name="objASNCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.ValidateDriverBadgeID(System.String)">
	<summary>
 Validates the Driver Badge Number
 </summary>
	<param name="strDriverBadgeId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.SetColumnWidth(System.Windows.Forms.ListView@)">
	<summary>
 Generic function to set the column width for all list view controls.
 </summary>
	<param name="lstViewControl"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GetDiskFreeSpaceEx(System.String,System.Int32@,System.Int32@,System.Int32@)">
	<summary>
 To get the Disk free space using system DLL
 </summary>
	<param name="directory"></param>
	<param name="lpFreeBytesAvailableToCaller"></param>
	<param name="lpTotalNumberOfBytes"></param>
	<param name="lpTotalNumberOfFreeBytes"></param>
	<remarks></remarks>
</member><member name="T:Goodsin.Helper.IP_ADDR_STRING">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Helper.IP_ADAPTER_INFO">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GetMacAddress">
	<summary>
 Gets the MAC address of the device to be sent in SOR
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GetSerialNumber">
	<summary>
 Function to get device serial number.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.GetIPAddress">
	<summary>
 To check for the dynamic IP generated when the device is docked
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.Helper.CheckForFreeMemory(System.String,System.Int64@)">
	<summary>
 To check for free memory in the device
 </summary>
	<param name="folder"></param>
	<param name="iFreemem"></param>
	<remarks>The folder of which the free memory needs to be calculated</remarks>
</member><member name="M:Goodsin.Helper.GetReleaseVersion">
	<summary>
 Function to format the release version from the config file
 </summary>
	<returns>
 The formatted string to display in splash screen
 </returns>
	<remarks></remarks>
</member><member name="T:Goodsin.Helper">
***************************************************************
 <FileName>Helper.vb</FileName>
	<summary>
 This is the generic helper class. 
 This class consists of functionalities that are used across multiple modules.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>30 Oct 2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight>
***************************************************************

</member><member name="M:Goodsin.VUODSessionMgr.StartSession">
	<summary>
 Initialises the View UOD session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.EndSession">
	<summary>
 Gracefully Terminate all forms and objects created by VUODSessionMgr
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.GetInstance">
	<summary>
 Functions for getting the object instance for the VUODSessionMgr. 
 Use this method to get the object reference for the  VUODSessionMgr.
 </summary>
	<returns></returns>
	<remarks>Object reference of VUODSessionMgr Class</remarks>
</member><member name="M:Goodsin.VUODSessionMgr.HandleScanData(System.String,Goodsin.BCType)">
	<summary>
 The Method handles scan the scan data returned form the barcode scanner
 This method implements the business logic to populate the data to the corresponding
 UI element after validation.
 </summary>
	<param name="strBarcode"></param>
	<param name="Type"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayVUODScreen(Goodsin.VUODSessionMgr.VUODSCREENS)">
	<summary>
 Screen Display method for View UOD
 All View UOD sub screens will be displayed using this method.
 </summary>
	<param name="ScreenName">Enum VUODSCREENS</param>
	<returns>True if display is success else False</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.QuitSession">
	<summary>
 Quiting the VUOD session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.AutoQuitSession">
	<summary>
 Quiting the VUOD session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayMsgBox(System.String,System.String,Goodsin.MsgBx.BUTTON_TYPE,System.Int32)">
	<summary>
 Custom message box called by BDSessionMgr.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayMsgBoxScreen(System.Object,System.EventArgs)">
	<summary>
 Custom message box shown
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayVUODScan(System.Object,System.EventArgs)">
	<summary>
 To Display the Today's or Future UOD List Screen  
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayUODDolly(System.Object,System.EventArgs)">
	<summary>
 Displaying the UOD dolly Screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayUODNonDolly(System.Object,System.EventArgs)">
	<summary>
 Displaying the UOD non Dolly screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.Transition">
	<summary>
 To perform transition to the Corresponding parent forms when the bacak button is clicked
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.GetContainerType(System.String,System.String@)">
	<summary>
 Get the container type based on the UOD type
 </summary>
	<param name="strUODType"></param>
	<param name="strContainerType"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.ProcessUODScanned">
	<summary>
 Process the details of the UOD scanned
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.ReformatDate(System.String@)">
	<summary>
 'formatstrDate is invoked to convert the yymmdd string format
 into ddmmyy date format
 </summary>
	<param name="strDate"></param>
	<returns>strDate</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.GetItemList">
	<summary>
 To Populate Item list View details
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.DisplayContainerInfo">
	<summary>
 To Retrieve Container data based on the UOD selected.
 Sorting the data
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.GetUODListforDollySelected">
	<summary>
 Getting the UOD list based on the UOD selected
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VUODSessionMgr.GetUODSummaryList(System.String)">
	<summary>
 To Populate the UOD list
 </summary>
	<param name="strPeriod"></param>
	<remarks></remarks>
</member><member name="T:Goodsin.VUODSessionMgr">
***************************************************************
 <FileName>VUODSessionManager.vb</FileName>
	<summary>
 The View UOD Container Class.
 Implements all business logic and GUI navigation for View UOD.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>08-Jan-2009</DateModified>
	<Platform>Visual Basic, MS .Net CF 1.1 for PPC</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight>
***************************************************************
* Modification Log 
******************************************************************************* 
* No:       Author            Date            Description 
* 1.1     Kiran Krishnan  09/04/2015      Modified as part of DALLAS project
                  (KK)                    Amended the methods HandleScanData,
                                          DisposeVUOD, DisplayVUODScan,
                                          DisplayContainerInfo and GetUODSummaryList.
                                          Added a new function GetDallasUOD Summary List                          
********************************************************************************

</member><member name="M:Goodsin.UODComparer.Compare(System.Object,System.Object)">
	<summary>
 To sort the UOD Arraylist based on the UOD code
 </summary>
	<param name="x"></param>
	<param name="y"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.DallasUODComparer.Compare(System.Object,System.Object)">
	<summary>
 To sort the UOD Arraylist based on the UOD code
 </summary>
	<param name="x"></param>
	<param name="y"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.ContainerComparer.Compare(System.Object,System.Object)">
	<summary>
 To sort the UOD Arraylist based on the UOD code
 </summary>
	<param name="x"></param>
	<param name="y"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.ItemInfo.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.ItemInfo.ItemDesc">
	<summary>
 to get or set the Item Description
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.ItemInfo.BootsCode">
	<summary>
 to get or set the Boots Code
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.ItemInfo.ProductCode">
	<summary>
 to get or set the Product code
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.ItemInfo.ItemQty">
	<summary>
 to get or set the Item quantity
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetBookInDeliverySummary(System.Collections.ArrayList@,System.Collections.ArrayList@)">
	<summary>
 The function gets the Delivery summary details for Book in Delvery SSC Receiving
 </summary>
	<param name="arrDelvSummary"></param>
	<param name="arrDALLASDelSummary"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If anyy error occurred while updating the results or 
 there is no details available for the delivery summary.
 </returns>
	<remarks>
	</remarks>
</member><member name="M:Goodsin.RFDataSource.ValidateUODScanned(System.String,Goodsin.UODInfo@,Goodsin.AppContainer.FunctionType)">
	<summary>
 The Function validates the Scanned UOD and get the details if it is valid
 </summary>
	<param name="strUODNumber"></param>
	<param name="objUODInfo"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If anyy error occurred while updating the results or 
 there is no details available for the scanned UOD.
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.SendBookInDetails(System.Collections.ArrayList@)">
	<summary>
 The function sets the 
 </summary>
	<param name="arrUODDetails"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetItemDetails(System.String,Goodsin.AppContainer.ItemDetailType,Goodsin.ItemInfo@)">
	<summary>
 Gets the Item Details for an Item Scanned
 </summary>
	<param name="strItemCode"></param>
	<param name="objItemInfo"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If any error occurred while updating the results or 
 there is no details available for the Item .
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetUODListForView(System.String,System.Collections.ArrayList@)">
	<summary>
 The function retrieves the UOD list for View UOD 
 </summary>
	<param name="strPeriod"></param>
	<param name="arrUODList"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If any error occurred while updating the results or 
 there is no details available for the UOD List for view.
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetDallasUODListForView(System.Collections.ArrayList@)">
	<summary>
 The function gets the Dallas delivery data for View UOD Menu
 </summary>
	<param name="arrDalViewUOD"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If any error occurred while updating the results
 </returns>
	<remarks>
	</remarks>
</member><member name="M:Goodsin.RFDataSource.GetCrateListForView(System.String,System.Collections.ArrayList@,Goodsin.UODInfo,System.String)">
	<summary>
 to get the list of crates for a selected dolly
 </summary>
	<param name="strUODNumber"></param>
	<param name="arrCrateList"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If anyy error occurred while updating the results or 
 there is no details available for the List of Crates.
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetItemListForView(System.String,System.Collections.ArrayList@,Goodsin.UODInfo,System.String)">
	<summary>
 to get the list of items for a selected container other than dolly.
 </summary>
	<param name="strCrateId"></param>
	<param name="arrItemList"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If anyy error occurred while updating the results or 
 there is no details available for the Item list for the selected container
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetSupplierList(System.Collections.ArrayList@)">
	<summary>
 The function retrieves the list of suppliers
 </summary>
	<param name="arrSupplierList"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If any error occurred while updating the results or 
 there is no details available for the Suppliers.
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetOrderList(System.String,System.Collections.ArrayList@)">
	<summary>
 The function retrieves the List of Orders for a supplier selected
 </summary>
	<param name="strSupplierNo"></param>
	<param name="arrOrderList"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If anyy error occurred while updating the results or 
 there is no details available for the Order numbers
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.ValidateSupplierNumber(System.String,System.Collections.ArrayList@)">
	<summary>
 The function gets the details of the Supplier number entered
 </summary>
	<param name="SupplierNo"></param>
	<param name="arrSupplierNumber"></param>
	<returns>Bool
 True - If successfully updated the results.
 False - If anyy error occurred while updating the results or 
 there is no details available for the Supplier number entered
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.GetConfigValues(Goodsin.AppContainer.ConfigValues@)">
	<summary>
 To get the configuration details for the Goods In application
 </summary>
	<param name="objConfigValue"></param>
	<remarks></remarks>TT

</member><member name="M:Goodsin.RFDataSource.ValidateCartonScanned(System.String,Goodsin.GIValueHolder.CartonInfo@,Goodsin.AppContainer.DeliveryType,Goodsin.AppContainer.FunctionType)">
	<summary>
 to retrieve the details of a scanned carton
 </summary>
	<param name="strASNNumber"></param>
	<param name="objCartonInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.RFDataSource.CheckDallasStore">
	<summary>
 The function is used to check if the store is enabled for Dallas positive receiving
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.pnlDirectsReceiving_Click(System.Object,System.EventArgs)">
	<summary>
 Function to handle click event for Direct Receiving option from main menu.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.pnlSSCReceiving_Click(System.Object,System.EventArgs)">
	<summary>
 Function to handle click event for SSC Receiving option from main menu.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.pbLogOff_Click(System.Object,System.EventArgs)">
	<summary>
 Function to handle Logoff option from main menu.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.Help1_Click(System.Object,System.EventArgs)">
	<summary>
 Function to handle Help option from main menu.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.FreezeControls">
	<summary>
 Function to freeze controls
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.UnfreezeControls">
	<summary>
 Function to unfreeze controls
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.tmrAlarm_Tick(System.Object,System.EventArgs)">
	<summary>
 Timer to handle auto logoff timeout.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.StartTimer">
	<summary>
 The timer paramers are set 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.frmGoodsInMenu.StopTimer">
	<summary>
 The timer paramers are unset 
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.frmGoodsInMenu">
 * Modification Log
 
****************************************************************************************
* 1.1    Archana Chandramathi    Jan 2013    
 <Summary>
 MCF changes - Avoid displaying error message while reconnect fail to primary controller
 </Summary>
****************************************************************************************

</member><member name="M:Goodsin.VCSessionManager.StartSession">
	<summary>
 Initialises the View Carton session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.EndSession">
	<summary>
 Functions for getting the object instance for the VCSessionMgr. 
 Use this method to get the object reference for the  VCSessionMgr.
 </summary>
	<returns></returns>
	<remarks>Object reference of VCSessionMgr
  Class</remarks>
</member><member name="M:Goodsin.VCSessionManager.GetInstance">
	<summary>
 Function for getting the object instance for the VCSessionManager. 
 Use this method to get the object reference for the  VCSessionManager.
 </summary>
	<returns></returns>
	<remarks>Object reference of VCSessionManager Class</remarks>
</member><member name="M:Goodsin.VCSessionManager.DisplaySuppliers(System.Object,System.EventArgs)">
	<summary>
 To Display the Supplier List screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.DisplayCarton(System.Object,System.EventArgs)">
	<summary>
 To display the Carton of each supplier
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.DisplayViewCarton(Goodsin.VCSessionManager.VCARTONSCREENS)">
	<summary>
 Screen Display method for View Carton
 All View Carton sub screens will be displayed using this method.
 </summary>
	<param name="ScreenName">Enum VCARTONSCREENS</param>
	<returns>True if display is success else False</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.HandleData(System.String)">
	<summary>
 Main function to handle all scan data and manual entries as input.
 </summary>
	<param name="strCartonCode"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.QuitSession">
	<summary>
 Quiting from the form and display the Goods In main Menu
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.QuitItemDetailsScreen">
	<summary>
 Quiting from the Item details screen
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.GetSupplierListSelectedIndex">
	<summary>
 To get the supplier name selected from Supplier list screen
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.GetCartonList">
	<summary>
 Populating the Carton list screen based on the Supplier selected
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.GetSupplierInfo">
	<summary>
 To get the Supplier information by querying the supplier list
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.GetCartonInfo">
	<summary>
 To retrieve the carton details based on the Carton selected
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.FormatShortstrDate(System.String@)">
	<summary>
 'FormatShortstrDate is used to convert the yymmdd string data
  into ddmm date format
 into ddmmyy date format
 </summary>
	<param name="strDate"></param>
	<returns>strDate</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.FormatLongstrDate(System.String@)">
	<summary>
 FormatLongstrDate is used to convert the yymmdd string data 
 into ddmmyy date format
 </summary>
	<param name="strdate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.VCSessionManager.PopulateSupplierList">
	<summary>
 To populate the Supplier List screen
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.AppInitialise">
	<summary>
  ''' Application initialisation.
 Most of this will be performed when the Splash screen is displayed at application startup.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.AppTerminate">
	<summary>
 Sub Routine to perform all operations while the application is terminated.
 AppTerminate will release all objects created by the Container, dispose al forms
 and gracefully kill the application.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.TerminateContainers">
	<summary>
 Gracefully Terminate all Busineess Containers created by the application containers.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.DisplaySplash">
	<summary>
 Display the splash screen while the container initialises other businees containers and 
 application parameters.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.TerminateSplash">
	<summary>
 Terminate the Splash screen display after all initialisations.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.ClearReconnectGlobals">
	<summary>
 Clear all the global variable used for reconnect data recovery.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppContainer.CreateAppDirectories">
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.AppContainer">
	<summary>
 This is the Applicaiton Container Class.
 This class initialises the generic application paramaeters and brings up the business modules.
 </summary>
	<remarks></remarks>
 
 * Modification Log
 
**********************************************************************************
* 1.1    Archana Chandramathi    Jan 2013    
 <Summary>
 MCF changes - Check added to verify whether MCF is enabled or not
 </Summary>
**********************************************************************************
 No:      Author            Date            Description 
 1.2     Kiran Krishnan  28/04/2015     Modified as part of DALLAS Positive
            (KK)                        receiving project.Added logic to check
                                        if Dallas Positive receiving store or not.   
                                                                            
********************************************************************************** 

</member><member name="F:Goodsin.UserSessionManager.m_UserAuthHome">
	<summary>
 Member variables.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.#ctor">
	<summary>
 To intialise the local variables
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.GetInstance">
	<summary>
 To get the instance of the UserSessionManager class
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.StartSession">
	<summary>
 To start the session and intialise all the variables 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.EndSession">
	<summary>
 To end the session and release all the objects held by the UserSessionManager
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.LaunchUser">
	<summary>
 Launches the User Authentication form to the user
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.StrToByteArray(System.String@)">
	<summary>
 To convert the String to Byte Array
 </summary>
	<param name="str"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.ByteToStrArray(System.Byte[])">
	<summary>
 To convert the Byte array to string
 </summary>
	<param name="readbyte"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.CheckForFreeMemory(System.String,System.Int64@)">
	<summary>
 To check for free memory in the device
 </summary>
	<param name="folder"></param>
	<param name="iFreemem"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.GetDiskFreeSpaceEx(System.String,System.Int32@,System.Int32@,System.Int32@)">
	<summary>
 To get the Disk free space using system DLL
 </summary>
	<param name="directory"></param>
	<param name="lpFreeBytesAvailableToCaller"></param>
	<param name="lpTotalNumberOfBytes"></param>
	<param name="lpTotalNumberOfFreeBytes"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.HandleUserAuthentication">
	<summary>
 Handle user authentication with various business conditions
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.ValidateUser(System.String)">
	<summary>
 To validate the user credentials login to the device
 </summary>
	<param name="strUserEnteredText"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.UpdateUserDetails">
	<summary>
 To update the App container user details flag and update the config file
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.ParseResponseFromController(System.String)">
	<summary>
 To parse the response received from the controller
 </summary>
	<param name="strResponse"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.UserSessionManager.StartOfDay">
	<summary>
 To get the active files from the controller at the Start of the day
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:Goodsin.UserInfo.user_ID">
	<summary>
 Member variables
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.UserInfo.UserID">
	<summary>
 To set or get User ID of a User.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.UserInfo.Password">
	<summary>
 To set or get the password.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.UserInfo.SupervisorFlag">
	<summary>
 To set or get the Supervisor flag.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.UserInfo.UserName">
	<summary>
 To set or get the User Name
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.UserInfo">
	<summary>
 The class holds the values for the User Info who has been validated against the database data
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ConfigDataMgr.LoadIPConfig">
	<summary>
 This function implements the xml parser for the IP config file.
 </summary>
</member><member name="M:Goodsin.ConfigDataMgr.GetIPParam(System.String)">
	<summary>
 Get the IP details from the IPCONFIG.XML file
 </summary>
	<param name="cKey">
 key to be searched in the xml file
 </param>
</member><member name="M:Goodsin.ConfigDataMgr.SetActiveIP">
	<summary>
 Set the activeIP key value
 </summary>
</member><member name="T:Goodsin.ConfigDataMgr">
	<summary>
 This class implements the xml parser for the config file. The information extracted
 are stored in a hash table in class ConfigDetails 
 </summary>
	<remarks></remarks>
 * Modification Log
 
****************************************************************************
* 1.1    Archana Chandramathi    Jan 2013    
 <Summary>
 MCF changes - Controller IP looked up from IPCONFG.XML file
 </Summary>
****************************************************************************

</member><member name="P:Goodsin.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Goodsin.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Goodsin.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Goodsin.ACSessionManager.GetInstance">
	<summary>
 Functions for getting the object instance for the ACSessionManager. 
 Use this method to get the object refernce for the Singleton ACSessionManager.
 </summary>
	<returns>Object reference of ACSessionManager Class</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.StartSession">
	<summary>
 Initialises the Audit Carton Session 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.SetItemQty(System.String)">
	<summary>
 To set the quantity of audited item and store the details to an arraylist
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.DisplayACScreen(Goodsin.ACSCREENS)">
	<summary>
 Screen Display method for Audit Carton. 
 All Audit Carton sub screens will be displayed using this method.
 </summary>
	<param name="ScreenName"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.DisplayACScan(System.Object,System.EventArgs)">
	<summary>
 Displays the screen to scan Carton
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.DisplayAuditCartonItem(System.Object,System.EventArgs)">
	<summary>
 Displays the screen to scan Item
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.DisplayAuditCartonSummary(System.Object,System.EventArgs)">
	<summary>
 Displays the Summary screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.DisplayAuditCartonItemDetails(System.Object,System.EventArgs)">
	<summary>
 Displays the Item Details screen 
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.QuitSession">
	<summary>
 To quit the session without saving anything and GoodsIn Main menu is displayed
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.QuitBeforeCommit">
	<summary>
 To quit the session session without saving anything and the summary screen is displayed
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.FinishSession">
	<summary>
 Finishing the session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.EndSession(Goodsin.AppContainer.IsAbort,System.Boolean)">
	<summary>
 Gracefully Terminate all forms and objects created by ACSessionManager
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.HandleData(System.String)">
	<summary>
 The Method handles the scan data returned from the barcode scanner.
 </summary>
	<param name="strBarcode"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.ACSessionManager.HandleScanData(System.String,Goodsin.BCType)">
	<summary>
 The Method handles the scan data returned form the barcode scanner.
 This method implements the business logic to populate the data to the corresponding
 UI element after validation.
 </summary>
	<param name="strBarcode"></param>
	<param name="Type"></param>
	<remarks></remarks>
</member><member name="T:Goodsin.ACSCREENS">
	<summary>
 Screens in Audit Carton
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Carton">
	<summary>
 Class to maintain the count of items scanned
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.BTCDBDataSet.ASNListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ASNListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.BarCodeViewDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.BootsCodeViewDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountsAndTargetsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CreditClaimListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CreditClaimListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DealListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DirectListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DirectListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.LivePOGDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ModuleListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ModuleListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.PickingListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.PickListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.POGCategoryDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ProductGroupDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.RecallListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.RecallListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.SuppliersListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODInnersDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODInnersItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODOutersDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODOutersItemDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UserListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ASNListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ASNListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.BarCodeViewRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.BootsCodeViewRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountsAndTargetsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CreditClaimListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CreditClaimListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DealListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DirectListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DirectListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.LivePOGRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ModuleListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ModuleListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.PickingListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.PickListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.POGCategoryRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ProductGroupRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.RecallListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.RecallListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.SuppliersListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODInnersRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODInnersItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODOutersRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODOutersItemRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UserListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ASNListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ASNListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.BarCodeViewRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.BootsCodeViewRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CountsAndTargetsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CreditClaimListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.CreditClaimListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DealListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DirectListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.DirectListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.LivePOGRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ModuleListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ModuleListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.PickingListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.PickListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.POGCategoryRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.ProductGroupRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.RecallListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.RecallListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.SuppliersListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODInnersRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODInnersItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODOutersRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UODOutersItemRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet.UserListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:Goodsin.BTCDBDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.ASNListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.ASNListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.BarCodeViewTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.BootsCodeViewTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.CountListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.CountListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.CountsAndTargetsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.CreditClaimListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.CreditClaimListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.DealListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.DirectListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.DirectListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.LivePOGTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.ModuleListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.ModuleListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.PickingListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.PickListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.POGCategoryTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.ProductGroupTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.RecallListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.RecallListItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.SuppliersListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.UODInnersTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.UODInnersItemsTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.UODOutersTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.UODOutersItemTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="T:Goodsin.BTCDBDataSetTableAdapters.UserListTableAdapter">
	<summary>
Represents the connection and commands used to retrieve and save data.
</summary>
</member><member name="M:Goodsin.frmGInAudit.GetInstance">
	<summary>
 Create instance of the class
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.AutoLogOff.MsgQOptions">
	<summary>
 Structure to receive the power notification
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.AutoLogOff.PBT_TRANSITION">
	<summary>
 Define the values for the power states that device returns
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.Start">
	<summary>
 Initialises a thread and starts the thread execution.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.Stop">
	<summary>
 Function to stop the thread execution
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.CheckTransition">
	<summary>
 Function to keep Check on the Power State Transition
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.ConvertByteArray(System.Byte[],System.Int32)">
	<summary>
 Function to convert he byte array to UInteger
 </summary>
	<param name="arrBytes">Byte Array</param>
	<param name="iOffset">Offset to read the value</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.SetSleepTimeOut">
	<summary>
 To set/reset the sleep time out for the device.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AutoLogOff.ChangePowerState">
	<summary>
 To change from current power state to a different power state.
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.AutoLogOff">
****************************************************************************
 <FileName>AutoLogOff.vb</FileName>
	<summary>
 Implements the auto logoff functionality to enable automatic log off if the
 devic applicaiton is idle for s configurable time period.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>05-Dec-2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight>
****************************************************************************

</member><member name="F:Goodsin.QueryMacro.GET_USER_DETAILS">
	<summary>
 Query to get the user details.
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_DETAILS">
	<summary>
 Query to Get the details of a Supplier.
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_LIST_ASN">
	<summary>
 QUery to get Supplier list 
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_LIST_UNBOOKED_ASN">
	<summary>
 Query to get Supplier list where status of Unbooked Asn
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_LIST_DIRECTS">
	<summary>
 Query to get the ist of suppliers for Directs
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_LIST_DIRECTS_UNBOOKED">
	<summary>
 Query to get the ist of suppliers for Unbooked Directs
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_LIST_STATIC">
	<summary>
 Query to get the list of suppliers for Static Suppliers
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_LIST_VIEW">
	<summary>
 QUery to get Supplier list for View
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_SUPPLIER_DATA">
	<summary>
 Query to get the details of a Supplier Number
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_DELIVERY_SUMMARY">
	<summary>
 Query to get the Delivery Summary List for Book In Delivery
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_DALLAS_DELIVERY_SUMMARY">
	<summary>
 Query to get the DALLAS Delivery Summary List for Book In Delivery
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_DALLASUOD_SCAN_DATA">
	<summary>
 Query to get the scanned DALLAS UOD detail for Book In Delivery
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_UOD_COUNT">
	<summary>
 Query to get the child count
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_UOD_SCAN_DATA">
	<summary>
 Query to get the Details of a Scanned UOD
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_UOD_LIST">
	<summary>
 Query to get the UOD List for Today
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_UOD_CHILD_LIST">
	<summary>
 Query to get the UOD List for Today
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_CRATE_LIST">
	<summary>
 Query to get the list of crates for a Dolly selected
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_UODITEM_LIST">
	<summary>
 Query to get the item list for UOD
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_LIST_VIEW">
	<summary>
 QUery to get the list of Items for Cartons in View Carton
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_DETAILS_UOD">
	<summary>
 Query to get the item Details
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_DETAILS">
	<summary>
 Query to get the item Details
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_DETAILS_DIRECTS">
	<summary>
 Query to get the item Details
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_DETAILS_BOOTSCODE">
	<summary>
 Query to get the item details for Carton
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_DETAILS_FORORDER">
	<summary>
 Query to get tghe item details for Order
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_LIST_FOR_ORDERS">
	<summary>
 Query to get the item list for Orders
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_CARTON_SCAN_DATA">
	<summary>
 Query to get the details of a scanned carton
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_CARTON_LIST">
	<summary>
 QUery to get the list of cartons for a supplier
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ITEM_LIST">
	<summary>
 QUery to get the list of items for a carton number
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_ORDER_LIST">
	<summary>
 Query to get the list of order numbers for a supplier number
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_UOD_DETAILS">
	<summary>
 QUery to get the Item details for UOD in Audit
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.QueryMacro.GET_BOOTS_CODE">
	<summary>
 To get Boots Code using product code.
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.QueryMacro">
****************************************************************************
 <FileName>QueryMacro.vb</FileName>
	<summary>
 This class is the data source class for the Shelf Management application.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>27-Nov-2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight> 
****************************************************************************
 
******************************************************************************* 
* Modification Log 
******************************************************************************* 
* No:      Author            Date            Description 
* 1.1  Christopher Kitto  09/04/2015   Modified as part of DALLAS project
             (CK)                     Added a new constant variable 
                                      GET_DALLAS_DELIVERY_SUMMARY to hold the
                                      SQL query command for retrieving Dallas 
                                      Delivery Summary details.
       Kiran Krishnan     28/04/2015  Modified as part of Dallas project for
             (KK)                     including the SQL query command for 
                                      retrieving scanned Dallas UOD details
                                      from DALUODList table
********************************************************************************

</member><member name="P:Goodsin.frmConnector.TimeoutCancel">
	<summary>
 Property to hold timeout cancel click select
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.frmConnector.TimeoutRetry">
	<summary>
 Property to hold timeout retry click select
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.frmConnector.ConnectToAlternate">
	<summary>
 Property to hold alternate controller connect
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.frmConnector.#ctor">
	<summary>
 new - initializes the data pool object
 </summary>
	<remarks>Initialises the data pool</remarks>
</member><member name="M:Goodsin.frmConnector.btnCancelAlternate_Click(System.Object,System.EventArgs)">
	<summary>
 Function is invoked when user select OK on connect to Alternate message box.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmConnector.btnConnectAlternate_Click(System.Object,System.EventArgs)">
	<summary>
 Function is invoked when user select Alternate on connect to Alternate message box.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:Goodsin.frmConnector">
 * Modification Log
 
****************************************************************************
* 1.1    Archana Chandramathi    Jan 2013    
 <Summary>
 MCF changes - Check added to verify whether MCF is enabled or not
 </Summary>
****************************************************************************

</member><member name="T:Goodsin.Macros">
 * Modification Log
 
****************************************************************************
* 1.1    Archana Chandramathi    Jan 2013    
 <Summary>
 MCF changes - Controller IP looked up from IPCONFG.XML file
 </Summary>
****************************************************************************
 No:      Author            Date            Description 
 1.2  Christopher Kitto  14/04/2015      Modified as part of DALLAS project.
           (CK)                          Added a new constant WHUOD for the active 
                                         file WHUOD.CSV under class Macros. 
                                         Added new constant BURTON under class
                                         ContainerName. Changed active file count.
                                        'Pallets' name replaced with 'SSC Pallets' 
                                         Added the table name DALUODList in the constant
                                         string variable ACTIVETABLES. Added constant
                                         for Burton in class ContainerType                             
      Kiran Krishnan     05/05/2015      Added new constants for Dallas Project
                                         to Class Macros                          
 ********************************************************************************
 No:      Author            Date            Description 
 1.3  Kiran Krishnan      15/04/2016     The 13C release change to add Boots.com
                                         related varaiable DOTCOM_ITEM_QTY was 
                                         missing in HHT Main. Merged it back.
 ********************************************************************************

</member><member name="T:Goodsin.ContainerType">
	<summary>
 Class for getting Container Type
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.ContainerName">
	<summary>
  Class for getting Container Name
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.InstanceChecker.CreateMutex(System.IntPtr,System.Boolean,System.String)">
	<summary>
 Imports the CreateMutex system call
 </summary>
	<param name="lpMutexAttributes"></param>
	<param name="InitialOwner"></param>
	<param name="MutexName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.InstanceChecker.ReleaseMutex(System.IntPtr)">
	<summary>
 Import ReleaseMutex system Call
 </summary>
	<param name="hMutex"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.InstanceChecker.IsInstanceRunning">
	<summary>
 Check the Mutex to find out if the application instance is already running
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.InstanceChecker.ClearMutex">
	<summary>
 Release the mutext at application exit.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.frmSplashScreen">
 * Modification Log
 
****************************************************************************
* 1.1    Archana Chandramathi    Jan 2013    
 <Summary>
 MCF changes - Application version looked up from app configuration file
 </Summary>
****************************************************************************

</member><member name="M:Goodsin.frmUserAuthentication.pbHelp_Click(System.Object,System.EventArgs)">
	<summary>
 To declare all the User Authentication details
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:Goodsin.PowerState.PPN_Message">
	<summary>
 Enum value to hold system power state values
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.PowerState.SetUnAttendedMode">
	<summary>
 Method to set the undattended mode
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.PowerState.LeaveUnAttenedMode">
	<summary>
 Method to leave unattended Mode
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.PowerState">
	<summary>
 Class to set the system powerstate
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.DataEngine">
****************************************************************************
 <FileName>DataEngine.vb</FileName>
	<summary>
 Data Engine class being a part of the data access layer exposes 
 APIs to business layer for accessing data from the location database.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>27-Nov-2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight> 
***************************************************************************
* Modification Log 
**************************************************************************** 
* No:     Author            Date            Description 
* 1.1   Christopher Kitto  09/04/2015  Modified as part of DALLAS project.
            (CK)                       Amended declaration of function
                                       GetBookInDeliverySummary.
                                       Added new function
                                       SendDallasDeliveryConfirmation
 
        Kiran Krishnan     27/04/2015  Added new function CheckDallasStore() 
            (KK)                       GetDallasUODListForView and 
                                       ValidateDallasUODScanned()  
********************************************************************************

</member><member name="M:Goodsin.MessageManager.GetInstance">
	<summary>
 Create instance of the class
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.MessageManager.OpenXML">
	<summary>
 Reads and Loads the messageconfig xml 
 </summary>
	<returns>True if load succeeds or else false</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.MessageManager.GetMessage(System.String)">
	<summary>
 Reads XML text and returns it to the calling function
 </summary>
	<param name="nodeId">Node name</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.MessageManager">
	<summary>
 This is a Singlton utility class which reads a Message xml file 
 and returns the desired message
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AppMainModule.Main">
	<summary>
 The Applicaiton startup sub routine.
 Initilises the application container and passes the control to the App Container.
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.AppMainModule">
	<summary>
 This is the module that contains the Main () sub and intialises the Parent container for the entire application.
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.DeliverySummary.m_SummaryType">
	<summary>
 Member variables
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DeliverySummary.SummaryType">
	<summary>
 Delivery Type will be E/O
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DeliverySummary.ContainerType">
	<summary>
 Container Type can be D/C/R/O/I
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.DeliverySummary">
	<summary>
 value class to hold the delivery summary details
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.ScanDetails.m_ScannedCode">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.ScanDetails.DespatchDate">
	<summary>
 Despatch Date in YYMMDD Format
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.ScanDetails.ScanDate">
	<summary>
 Scan Date in YYMMDD Format
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.ScanDetails.ScanType">
	<summary>
 Scan time in 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.DallasScanDetail.m_cDallasBarcode">
	<summary>
 Member Variables  
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasScanDetail.DallasBarcode">
	<summary>
 Scanned Dallas barcode
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasScanDetail.ScanStatus">
	<summary>
 Scan status - 'R' for receipted / 'B' for banked
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasScanDetail.DallasScanDate">
	<summary>
 Dallas Scan Date in YYMMDD Format
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasScanDetail.DallasExpectedDate">
	<summary>
 Expected Date in YYMMDD Format
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.DallasScanDetail">
	<summary>
 Value Class to hold data of the Dallas UOD Scanned
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.CartonDetails.m_CartonNumber">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.CartonDetails.DespatchDate">
	<summary>
 Despatch Date in YYMMDD Format
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.CartonDetails.ScanDate">
	<summary>
 Scan Date in YYMMDD Format
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.CartonDetails.ScanType">
	<summary>
 Scan time in 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.CartonDetails">
	<summary>
 Value class to hold the data of the Carton scanned
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.DriverDetails.m_DriverBadge">
	<summary>
 Member variables
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.DriverDetails">
	<summary>
 Value class to hold details of Confirmation of Book In Driver/No Driver
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.UODList.m_UODId">
	<summary>
 Member variables
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.GIValueHolder.UODList.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.UODList">
	<summary>
 Value class to hold the UOD List
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.CrateList.m_CrateId">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.CrateList">
	<summary>
 Value class to hold the Crate List
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.ItemList.m_ItemCode">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.ItemList">
	<summary>
 Value class to hold the Item list
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.CartonItemList.m_ItemCode">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.GIValueHolder.CartonItemList.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.SupplierList.m_SupplierNo">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.SupplierList.SupplierNo">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.SupplierList">
	<summary>
 Value Class for holding Supplier Data
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.SupplierListForView.m_SupplierName">
	<summary>
 Member variables
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.GIValueHolder.SupplierListForView.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.OrderList.m_EstDeliveryDate">
	<summary>
 Member Variables
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.OrderList">
	<summary>
 Value Class to hold Order Number Data
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.ItemListForOrder">
	<summary>
 Value Class to hold Item details for an Order
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.SupplierData">
	<summary>
 Value Class to hold supplier data
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.SupplierDetails">
	<summary>
 Value class to hold the details of Carton inside a supplier
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.ItemDetails">
	<summary>
 Value class to hold the details of item
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.ScannedItemDetails">
	<summary>
 Value class to hold the Details of scanned Items
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.CartonInfo">
	<summary>
 Value class to hold the data of Carton
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.UODPeriod">
	<summary>
 Enumerated data for Period for View
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.UODContainerType">
	<summary>
 Enumerated data for Container Types for UOD
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.ASNCode">
	<summary>
 Value class to hold the data of scanned or entered ASN code
 </summary>
	<remarks></remarks>
</member><member name="F:Goodsin.GIValueHolder.DallasDeliverySummary.m_cDallasBarcode">
	<summary>
 Member variables
 </summary>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasDeliverySummary.DallasBarcode">
	<summary>
 Dallas Barcode
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasDeliverySummary.ExpectedDelDate">
	<summary>
 Expected Delivery date
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Goodsin.GIValueHolder.DallasDeliverySummary.Status">
	<summary>
 Status can be 'R' (Receipted)/'B' (Banked)/'U' (Un-receipted)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder.DallasDeliverySummary">
	<summary>
 Value class to hold data of Dallas UODs obtained from DAD message
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.GIValueHolder">
******************************************************************************
* Modification Log 
******************************************************************************* 
* No:      Author            Date                 Description 
* 1.1     Christopher Kitto  09/04/2015  Modified as part of DALLAS project. Added
                  (CK)                  new value class DallasDeliverySummary under 
                                        GIValueHolder class to hold the data of Dallas 
                                        UODs obtained from DAD message. Added new value
                                        class DallasScanDetail
********************************************************************************

</member><member name="M:Goodsin.RFDataConnectionMgr.UpdateStatus(System.String,System.Int32)">
	<summary>
 Updates the status of the message in the connector
 </summary>
	<param name="Connectivity_Message">Takes the unformated messages and 
 formats with reconnect attemp and displays it to the user</param>
	<remarks>none</remarks>
</member><member name="M:Goodsin.FileIO.#ctor">
	<summary>
 Constructor
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.FileIO.WriteDataIntoFile(System.String,System.String,System.Boolean)">
	<summary>
 To write data into a file.
 </summary>
	<param name="sFileName">Name of the file to which the data is written.</param>
	<param name="sRecord">Record to be written into the file.</param>
	<param name="bAppend">Append the dat or not</param>
	<returns>Bool
 True - If successfully written the record.
 False - Any error occured while writing record to the file.
 </returns>
	<remarks></remarks>
</member><member name="T:Goodsin.FileIO">
****************************************************************************
 <FileName>FileIO.vb</FileName>
	<summary>
 Used for File IO operations such as writing export data records.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>27-Nov-2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight> 
****************************************************************************

</member><member name="M:Goodsin.RFDataManager.SetDeviceDateTime(System.String)">
	<summary>
 To set device time to same as controller time.
 </summary>
	<param name="strDateTime">Datetime string recevived from controller</param>
	<returns>
 True - If successfully set the device time.
 False - If error in setting the device time.
 </returns>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.GetInstance">
	<summary>
 Functions for getting the object instance for the AUODSessionManager. 
 Use this method to get the object refernce for the Singleton AUODSessionManager.
 </summary>
	<returns>Object reference of AUODSessionManager Class</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.StartSession">
	<summary>
 Initialises the Audit UOD Session 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.SetItemQuantity(System.String)">
	<summary>
 To set the quantity of audited item and store the details to an arraylist
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayAUODScreen(Goodsin.AUODSessionManager.AUODSCREENS)">
	<summary>
 Screen Display method for Audit UOD. 
 All Audit UOD sub screens will be displayed using this method.
 </summary>
	<param name="ScreenName"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.EndSession(Goodsin.AppContainer.IsAbort,System.Boolean)">
	<summary>
 Gracefully Terminate all forms and objects created by AUODSessionManager
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.HandleData(System.String)">
	<summary>
 The Method handles the scan data returned form the barcode scanner.
 </summary>
	<param name="strBarcode"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayAuditScreen">
	<summary>
 The Method calls DisplayAUODScreen to switch the screen to
 Audit screen
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.HandleScanData(System.String,Goodsin.BCType)">
	<summary>
 The Method handles the scan data returned form the barcode scanner.
 This method implements the business logic to populate the data to the corresponding
 UI element after validation.
 </summary>
	<param name="strBarcode"></param>
	<param name="Type"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayAUODScan(System.Object,System.EventArgs)">
	<summary>
 Displays the screen to scan UOD
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayAuditItem(System.Object,System.EventArgs)">
	<summary>
 Displays the screen to scan item
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayAuditItemDetails(System.Object,System.EventArgs)">
	<summary>
 Displays the Item Details screen 
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayAuditSummary(System.Object,System.EventArgs)">
	<summary>
 Displays the Audit Summary screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayMsgBox(System.String,System.String,Goodsin.MsgBx.BUTTON_TYPE,System.Int32)">
	<summary>
 Custom message box called by BDSessionMgr.
 </summary>
	<param name="cText"></param>
	<param name="cCaption"></param>
	<param name="btnType"></param>
	<param name="iMessageType"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.DisplayMsgBoxScreen(System.Object,System.EventArgs)">
	<summary>
 Custom message box shown
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.QuitSession">
	<summary>
 To quit the session without saving anything
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.FinalQuitSession">
	<summary>
 To quit the session after saving all audits
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.AUODSessionManager.FinishSession">
	<summary>
 Finishing the session
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.AUODSessionManager.AUODSCREENS">
	<summary>
 Screens in Audit UOD
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.AUODSessionManager">
***************************************************************
 <FileName>AUODSessionManager.vb</FileName>
	<summary>
 The Audit UOD Container Class.
 Implements all business logic and GUI navigation for Audit UOD.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>08-Jan-2009</DateModified>
	<Platform>Visual Basic, MS .Net CF 1.1 for PPC</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight>
***************************************************************
* Modification Log 
******************************************************************************* 
* No:       Author            Date            Description 
* 1.1     Christopher Kitto  09/04/2015   Modified as part of DALLAS project.
                  (CK)                    Amended the function HandleScanData to
                                          show message if Dallas UOD is scanned
                                          or entered.                      
********************************************************************************

</member><member name="T:Goodsin.UOD">
	<summary>
 Class to maintain the count of items scanned
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.GetInstance">
	<summary>
 Functions for getting the object instance for the CalcPadSessionMgr. 
 Use this method to get the object refernce for the Singleton CalcPadSessionMgr.
 </summary>
	<returns></returns>
	<remarks>Object reference of CalcPadSessionMgr Class</remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessDelete(System.Windows.Forms.TextBox@)">
	<summary>
 Processes the delete button click
 </summary>
	<param name="tbValue"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessOK(System.Windows.Forms.Control@)">
	<summary>
 Processes the OK button click
 </summary>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessSupplierEntry(System.Windows.Forms.Control@)">
	<summary>
 Processes the Supplier number entered
 </summary>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessUODEntry(System.Windows.Forms.Control@)">
	<summary>
 Processes the quantity entered
 </summary>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessTextEntry(System.String)">
	<summary>
 Processes the string for calculation
 </summary>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessQuantityEntry(System.Windows.Forms.Control@)">
	<summary>
 Processes the quantity entered
 </summary>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessBarcodeEntry(System.Windows.Forms.Control@)">
	<summary>
 Processes the Barcode entered
 </summary>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ValidateDoubleDigitEntry(System.Int64)">
	<summary>
 Validates the quantity entered
 </summary>
	<param name="iResult"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ValidateGreaterThanFifty(System.Int64)">
	<summary>
 Validates Quantity Greater than Fifty
 </summary>
	<param name="iResult"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.ProcessHelp">
	<summary>
 Processes the help button click
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.CalcPadSessionMgr.RetrieveCurrentVal(System.Int32@,System.Windows.Forms.TextBox@)">
	<summary>
 Retrieves the current value of text field
 </summary>
	<param name="currVal"></param>
	<param name="tbValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Goodsin.CalcPadSessionMgr">
	<summary>
 This business class manages all data specific to the actions on the calc pad during a calc pad session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.StartSession">
	<summary>
  Initialises the Book In Delivery Session 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.GetInstance">
	<summary>
 Functions for getting the object instance for the BDSessionMgr. 
 Use this method to get the object reference for the Singleton BDSessionMgr.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.HandleScanData(System.String,Goodsin.BCType)">
	<summary>
 The Method handles scan the scan data returned form the barcode scanner.
 This method implements the business logic to populate the data to the corresponding
 UI element after validation.
 </summary>
	<param name="strBarcode"></param>
	<param name="Type"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ConfirmDelivery">
	<summary>
 To Confirm the delivery 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.HandleUOD(System.String,Goodsin.BCType)">
	<summary>
 Function to handle barcode depending upon the type of barcode.
 </summary>
	<param name="strBarcode"></param>
	<param name="Type"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ValidateUOD(System.String)">
	<summary>
 Function to Validate UOD Barcode
 </summary>
	<param name="strBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ValidateIST(System.String)">
	<summary>
  Function to validate IST Barcode           
 </summary>
	<param name="strBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ValidateDallasUOD(System.String)">
	<summary>
 Function to Validate Dallas UOD Barcode
 </summary>
	<param name="cBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.CheckPreviousScan(System.String)">
	<summary>
 Method to Check if the UOD is already scanned or not
 </summary>
	<param name="strBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ProcessUODScan(System.String)">
	<summary>
 Method to Process the UOD Scan
 </summary>
	<param name="strBarcode"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ProcessDallasUODScan(System.String)">
	<summary>
 Method to Process the Dallas UOD Scanned data
 </summary>
	<param name="cBarcode"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ScannedAtChildLevel(System.String,System.Int32)">
	<summary>
 Method to handle the scenario when a container is scanned at child level
 Eg.Like a dolly is getting scanned at crate level while its expected to be 
 scanned at dolly level itself.
 </summary>
	<param name="strDate"></param>
	<param name="iCrateCount"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.CheckChildLevelScanning(System.String)">
	<summary>
 Function to check whether the delivery is booked in at parent or child level.
 </summary>
	<param name="strBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayBDScan(System.Object,System.EventArgs)">
	<summary>
 The method Displays the Book In Delivery Home Screen.
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayInitialSummary(System.Object,System.EventArgs)">
	<summary>
 Method to display the expected and outstanding deliveries.
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayBookInUODScan(System.Object,System.EventArgs)">
	<summary>
 Method to scan the UOD and also to display the count of deliveries for expected,outstanding and not on file deliveries.
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayDrvrConfirmation(System.Object,System.EventArgs)">
	<summary>
 Method to display the driver confirmation screen when the number of items becomes equal to the batch count.
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayFinalDrvrCnfrm(System.Object,System.EventArgs)">
	<summary>
 Method to display the Final driver confirmation screen.
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayBookInSummary(System.Object,System.EventArgs)">
	<summary>
 Method to display the Book In Delivery Summary Screen when the quit button is selected from the Driver Confirmation Screen.
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayBDScreen(Goodsin.BDSessionMgr.BDSCREENS)">
	<summary>
 Screen Display method for Book In Delivery 
 All sub screens will be displayed using this method.
 </summary>
	<param name="ScreenName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.PopulateExpectedList">
	<summary>
 Method to Populate the listview's for the Expected and Outstanding deliveries.
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.BDSessionMgr.BDSCREENS">
	<summary>
 Enum Class that defines all screens for Book In Delivery module
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.RescanBatch">
	<summary>
 Method to revert the count of deliveries when the RESCAN button is selected from the driver confirmation screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.NoBadge">
	<summary>
 To display the Driver Id during Book In Delivery In Hours in Driver Confiramtion Screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.NoBadgeSessionConfirm">
	<summary>
 To display the Driver Id during Book In Delivery In Hours in Final Driver Confiramtion Screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.OutOfHoursBatchConfirm">
	<summary>
 To display the Driver Id during Book In Delivery Out Of Hours in Driver Confiramtion Screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.OutOfHoursFinalConfirm">
	<summary>
 To display the Driver Id during Book In Delivery Out Of Hours in  Final Driver Confiramtion Screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.ConfirmBatch">
	<summary>
 Method to Confirm the batch during Book In Delivery Out Of Hours.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.QuitSession">
	<summary>
 Method to display a confirmation message when the user selects the quit button from the Book In delivery Home Screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.FinishSession">
	<summary>
 Method to display the messages when the Finish button is selected from the UOD scan screen depending on RF or Non-RF.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DallasUODMisdirectCheck(System.String)">
	<summary>
 Method to display the messages if the scanned UOD is not for this store.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.UODNotOnFile(System.String)">
	<summary>
 Method to display the appropriate messages when UOD is not on file.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DallasUODNotOnFile(System.String)">
	<summary>
 Method to display the appropriate messages when UOD is not on file.
 </summary>
	<Parameter> cBarcode </Parameter>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DallasUODNotonFileMessage(Goodsin.MsgBx.BUTTON_VALUE)">
	<summary>
 Method to switch back the screen to Bookin scan screen.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.InterStoreTransfer(System.String)">
	<summary>
 Method to display the messages when IST is not on file.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.EndSession(Goodsin.AppContainer.IsAbort)">
	<summary>
 Gracefully Terminate all forms and objects created by BDSessionMgr.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayMsgBox(System.String,System.String,Goodsin.MsgBx.BUTTON_TYPE,System.Int32)">
	<summary>
 Custom message box called by BDSessionMgr.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.DisplayMsgBoxScreen(System.Object,System.EventArgs)">
	<summary>
 Custom message box shown
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BDSessionMgr.NoBadgeSelect(System.Int32)">
	<summary>
 Message box shown for 
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.BDSessionMgr">
***************************************************************
 <FileName> BDSessionMgr.vb</FileName>
	<summary>
 The Book In Delivery Container Class.
 Implements all business logic and GUI navigation for Book In Delivery.
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>21-Nov-2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight>
***************************************************************
* Modification Log 
******************************************************************************* 
* No:       Author            Date            Description 
* 1.1     Christopher Kitto  09/04/2015   Modified as part of DALLAS project
                  (CK)                  to pass an extra argument to the function
                                        GetBookInDeliverySummary(). Modified class
                                        scancount for keeping the Dallas UOD count.
                                        Amended the function PopulateExpectedList()
                                        to update the Dallas summary in Initial 
                                        Summary screen. Modified functions confirmbatch(),
                                        confirmdelivery() and DisplayDrvrConfirmation(). 
          Kiran Krishnan    06/05/2015  Modified to include the barcode processing
                 (KK)                   changes for Dallas UOD                         
********************************************************************************

</member><member name="T:Goodsin.scanCount">
	<summary>
 The value class for getting the total confirmed scan count for  the deliveries.
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.frmCalcPad.frmCalcPad_Load(System.Object,System.EventArgs)">
	<summary>
 To set the timer at load event close calcpad before autologoff.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.frmCalcPad.tmrChecker_Tick(System.Object,System.EventArgs)">
	<summary>
 Handle the tick event to close calcpad form.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.GetInstance">
	<summary>
 Functions for getting the object instance for the BCSessionMgr. 
 Use this method to get the object refernce for the Singleton BCSessionMgr.
 </summary>
	<returns>Object reference of BCSessionMgr Class</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.StartSession">
	<summary>
 Initialises the BookInOrder Session 
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayBCScreen(Goodsin.BCSCREENS)">
	<summary>
 Screen Display method for BookInOrder. 
 All BookIn sub screens will be displayed using this method.
 </summary>
	<param name="ScreenName"></param>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayExpectedOrder(System.Object,System.EventArgs)">
	<summary>
 Displays the expected order screen for BookIn carton
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayScanCarton(System.Object,System.EventArgs)">
	<summary>
 Displays the carton scanning screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayCartonSummary(System.Object,System.EventArgs)">
	<summary>
 Displays the Carton BookIn summary screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayScanItem(System.Object,System.EventArgs)">
	<summary>
 Displays the Item scanning screen for BookIn carton Not in file.
 Also for Audit Carton Not in file
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayBookIncartonItemInfo(System.Object,System.EventArgs)">
	<summary>
 Displays the ItemInfo screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayBookInOrderInitial(System.Object,System.EventArgs)">
	<summary>
 Displays the bookInOrder item screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayBookInOrderSummaryOfContents(System.Object,System.EventArgs)">
	<summary>
 Displays the BookInOrder Summary of Contents screen
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayBookInOrderSummary(System.Object,System.EventArgs)">
	<summary>
 Displays the summary screen for BookInOrder item
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayBookInItemForNoOrder(System.Object,System.EventArgs)">
	<summary>
 Displays the BookIn Item screen for no order
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.DisplayFinalBookInItemSummary(System.Object,System.EventArgs)">
	<summary>
 Displays the final summary screen for BookIn order of item
 </summary>
	<param name="o"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.SetItemOrder">
	<summary>
 Sets a variable to know whether BookIn is carried for 'Order' or 'No Order'
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.SetItemQty(System.String)">
	<summary>
 To set the quantity of audited item and store the details to an arraylist
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.CartonCountIncrement">
	<summary>
 To increment the carton count after Book in of item in the case of Not in file
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.CheckExpectedOrderQty(System.Int32)">
	<summary>
 To check whether the quantity entered for an item 
 is greater than expected in the case of BookIn order item
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.ReformatDate(System.String@)">
	<summary>
 Function to format the date
 </summary>
	<param name="strDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.HandleItem(System.String)">
	<summary>
 Handles the item scan
 </summary>
	<param name="strBarcode"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.HandleCarton(System.String)">
	<summary>
 Handles the Carton scan
 </summary>
	<param name="strBarcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.HandleScanData(System.String,Goodsin.BCType)">
	<summary>
 The Method handles the scan data returned form the barcode scanner.
 This method implements the business logic to populate the data to the corresponding
 UI element after validation.
 </summary>
	<param name="strBarcode"></param>
	<param name="Type"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.SupplierSelection">
	<summary>
 This is called when a supplier is selected from the listview
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.OrderSelection">
	<summary>
 This is called when an order is selected from the listview
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.SupplierNoEntry(System.String)">
	<summary>
 This is called when the supplier number is entered manually
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.QuitSession">
	<summary>
 To quit the session without saving anything and GoodsIn Main menu is displayed
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.QuitBeforeCommit">
	<summary>
 To quit the session session without saving anything and the summary screen is displayed
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.FinishSession">
	<summary>
 Finishing the session
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.BCSessionMgr.EndSession(Goodsin.AppContainer.IsAbort)">
	<summary>
 Gracefully Terminate all forms and objects created by BCSessionMgr
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.BCSCREENS">
	<summary>
 Screens in BookInOrder
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Item">
	<summary>
 Class to store the details of items in an order
 Its objects are used to populate the listview
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.RFDataStructure.DARMessage">
	<summary>
 Structure to create DAR message
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.RFDataStructure.GIRBMessage">
Value class for GIRMessage for GIQ Request Type B

</member><member name="T:Goodsin.RFDataStructure.GIXRecord">
	<summary>
 Structure to create export data for GIX
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.RFDataStructure.DARRecord">
	<summary>
 Structure to create export data for DARRecord
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.RFDataStructure.GIFRecord">
	<summary>
 Structure to create export data for GIF
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.StatusBar.SetMessage(Goodsin.StatusBar.MSGTYPE)">
	<summary>
 Allows the user to set the message on the label
 </summary>
	<param name="messageStatus"></param>
	<remarks></remarks>
</member><member name="M:Goodsin.StatusBar.SetStoreId">
	<summary>
 Allows user to set the store id
 </summary>
	<remarks></remarks>
</member><member name="M:Goodsin.StatusBar.SetMessage(System.String)">
	<summary>
 Method to set the custom message to status bar
 </summary>
	<param name="strMessage"></param>
	<remarks></remarks>
</member><member name="T:Goodsin.StatusBar.MSGTYPE">
	<summary>
 Enum to handle message type
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.Logger">
	<summary>
 This class will be used for writing the application logs into a log file
 </summary>
	<remarks></remarks>
</member><member name="T:Goodsin.SystemTime">
***************************************************************
 <FileName>SystemTime.vb</FileName>
	<summary>
 SystemTime structure to hold the system time as its represented
 by sytem OS
 </summary>
	<Version>1.0</Version>
	<Author>Infosys Technologies Ltd.</Author>
	<DateModified>21-Nov-2008</DateModified>
	<Platform>Visual Basic, MS .Net CF 3.5 for MC70</Platform>
	<CopyRight>Boots the Chemists Ltd, Boots UK 2008</CopyRight> 
***************************************************************

</member><member name="T:Goodsin.ConvertDateTime">
	<summary>
 Class ConvertDateTime helping to convert the system date time to
 a sequential SystemTime structure.
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>