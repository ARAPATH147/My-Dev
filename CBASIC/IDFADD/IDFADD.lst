    1: 	    %INCLUDE PSBF01G.J86
    2=a	    REM \
    3=a	    \*******************************************************************
>************
    4=a	    \*******************************************************************
>************
    5=a	    \***
    6=a	    \***       %INCLUDE FOR GLOBAL DEFINITIONS FOR FUNCTION APPLICATION.
>LOG
    7=a	    \***
    8=a	    \***                FUNCTION NUMBER    : PSBF01
    9=a	    \***
   10=a	    \***                REFERENCE          : PSBF01G.J86
   11=a	    \***
   12=a	    \***                DATE OF LAST AMENDMENT  - 27/2/86
   13=a	    \***
   14=a	    \***
   15=a	    \*******************************************************************
>************
   16=a	    
   17=a	          INTEGER GLOBAL  F01.RETURN.CODE%
   18=a	    
   19=a	    
   20: 	    %INCLUDE PSBF20G.J86
   21=a	    REM\
   22=a	    \*******************************************************************
>************
   23=a	    \*******************************************************************
>************
   24=a	    \***
   25=a	    \***     %INCLUDE GLOBAL VARIABLE DEFINITIONS FOR SESS.NUM.UTILITY F
>UNCTION
   26=a	    \***
   27=a	    \***                       REFERENCE     : PSBF20G.J86
   28=a	    \*** 
   29=a	    \***     Version A              Bruce Scrive                   5th M
>ay 1988   
   30=a	    \*** 
   31=a	    \***     Version B              Robert Cowey                   7th M
>ay 1991
   32=a	    \***     Global variable F20.INTEGER.FILE.NO% changed from one byte 
>integer
   33=a	    \***     to two byte integer.
   34=a	    \***
   35=a	    \***     Version D              Andrew Wedgeworth             1st Ju
>ly 1992
   36=a	    \***     F20.RETURN.CODE% removed as it is no longer required.
   37=a	    \***
   38=a	    \*******************************************************************
>************
   39=a	    \*******************************************************************
>************
   40=a	    
   41=a	          STRING    GLOBAL F20.FILE.NAME$,                              
>   \
   42=a	                           F20.STRING.FILE.NO$,                         
>   \
   43=a	                           F20.TABLE.DIMENSIONED.FLAG$,                 
>   \
   44=a	                           SESS.NUM.TABLE$(1)
   45=a	    
   46=a	          INTEGER*2 GLOBAL F20.INTEGER.FILE.NO%
   47=a	    
   48=a	          ! 1 line deleted from here                                    
>   ! DAW 
   49=a	    
   50: 	    %INCLUDE IDFDEC.J86  
   51=a	    REM \
   52=a	    \*******************************************************************
>***********
   53=a	    \*******************************************************************
>***********
   54=a	    \***
   55=a	    \***         %INCLUDE FOR ITEM DATA FILE - FIELD DECLARATIONS
   56=a	    \***                                       FILE REFERENCE PARAMETERS
   57=a	    \***
   58=a	    \***                  FILE TYPE    : Keyed
   59=a	    \***
   60=a	    \***                  REFERENCE    : IDFDEC.J86
   61=a	    \***
   62=a	    \***         VERSION A : Andrew Wedgeworth  29th June 1992    
   63=a	    \***
   64=a	    \***    VERSION C.              Robert Cowey.                       
>25 AUG 1993.
   65=a	    \***    Replaced un-used RANK$ with BSNS.CNTR$ and FILLER$.
   66=a	    \***
   67=a	    \***    VERSION D.              Andrew Wedgeworth               15th
> March 1995
   68=a	    \***    Comments updated to reflect the fact that some bits on the f
>ile are
   69=a	    \***    no longer used.
   70=a	    \***
   71=a	    \*******************************************************************
>************
   72=a	    \*******************************************************************
>************
   73=a	    
   74=a	      STRING GLOBAL           \
   75=a	        IDF.FILE.NAME$,       \  
   76=a	        IDF.BOOTS.CODE$,      \ 4 byte UPD with check digit (key)
   77=a	        IDF.FIRST.BAR.CODE$,  \ 6 byte UPD without check digit
   78=a	        IDF.SECOND.BAR.CODE$, \ 6 byte UPD without check digit
   79=a	        IDF.NO.OF.BAR.CODES$, \ 2 byte UPD. Total number of bar codes fo
>r this item
   80=a	        IDF.PRODUCT.GRP$,     \ 3 byte UPD. The first two digits are the
> concept
   81=a	                              \ group and the last four the concept sequ
>ence
   82=a	        IDF.STNDRD.DESC$,     \ 24 bytes
   83=a	        IDF.STATUS.1$,        \ 1 byte, values B,C,D,P,X,Z and blank
   84=a	        IDF.INTRO.DATE$,      \ 3 byte UPD YYMMDD. Date first added to t
>his file
   85=a	        IDF.BSNS.CNTR$,       \ 1 byte ASC. Business Centre ID letter   
>   ! CRC
   86=a	        IDF.FILLER$,          \ 1 byte un-used                          
>   ! CRC
   87=a	        IDF.PARENT.CODE$,     \ 4 byte UPD with check digit ; may be zer
>o if no
   88=a	                              \ flashpacks, current IDF.BOOTS.CODE$ if p
>arent line
   89=a	                              \ or Boots Code of parent line if a flashp
>ack.
   90=a	        IDF.DATE.OF.LAST.SALE$! 3 byte UPD. Date of last sale.
   91=a	    
   92=a	      INTEGER*1 GLOBAL        \
   93=a	        IDF.BIT.FLAGS.1%,     \ 1 byte - bit values
   94=a	                              \ X"80"  - Group code flag
   95=a	                              \ X"40"  - Keylines flag
   96=a	                              \ X"20"  - Markdown flag
   97=a	                              \ X"10"  - Warehouse flag
   98=a	                              \ X"08"  - CSR flag
   99=a	                              \ X"04"  - Directs A flag
  100=a	                              \ X"02"  - Directs B flag
  101=a	                              \ X"01"  - Directs C flag
  102=a	        IDF.BIT.FLAGS.2%      \ 1 byte - bit values
  103=a	                              \ X"80"  - Own brand line flag
  104=a	                              \ X"40"  - Exclusive line flag
  105=a	                              \ X"20"  - Unused 
  106=a	                              \ X"10"  - Unused
  107=a	                              \ X"08"  - Stock system flag
  108=a	                              \ X"04"  - Pending count flag
  109=a	                              \ X"02"  - Reserved
  110=a	                              ! X"01"  - Reserved
  111=a	    
  112=a	      INTEGER*2 GLOBAL        \
  113=a	        IDF.RECL%,            \  
  114=a	        IDF.REPORT.NUM%,      \ 
  115=a	        IDF.SESS.NUM%
  116: 	    
  117: 	    
  118: 	    
  119: 	    %INCLUDE PSBF01E.J86                                                
>   !HSMG
  120=a	    REM \
  121=a	    \*******************************************************************
>************
  122=a	    \*******************************************************************
>************
  123=a	    \***
  124=a	    \***      %INCLUDE FOR EXTERNAL DEFINITION OF FUNCTION APPLICATION.L
>OG
  125=a	    \***
  126=a	    \***                      FUNCTION NUMBER   : PSBF01
  127=a	    \***
  128=a	    \***                    INCLUDE REFERENCE : PSBF01E.J86
  129=a	    \*** 
  130=a	    \***      Version B           Andrew Wedgeworth          1st July 19
>92
  131=a	    \***      Three parameters which passed to the function have been re
>moved.
  132=a	    \***      APPLICATION.LOG has been added as a variable name (this ho
>lds the
  133=a	    \***      return code).
  134=a	    \***
  135=a	    \*******************************************************************
>************
  136=a	    
  137=a	    
  138=a	       FUNCTION APPLICATION.LOG (MESSAGE.NO%,                           
>          \
  139=a	                                 VAR.STRING.1$,                         
>          \
  140=a	                                 VAR.STRING.2$,                         
>          \
  141=a	                                 EVENT.NO%)  EXTERNAL
  142=a	    
  143=a	          INTEGER*1 EVENT.NO%
  144=a	    
  145=a	          INTEGER*2 APPLICATION.LOG,                                    
>   \ GAW
  146=a	                    MESSAGE.NO%
  147=a	    
  148=a	          STRING VAR.STRING.1$,                                         
>   \
  149=a	                 VAR.STRING.2$
  150=a	    
  151=a	       END FUNCTION
  152=a	    
  153=a	    \*******************************************************************
>************
  154: 	    %INCLUDE IDFEXT.J86                                                 
>   !BMJK                                                   
  155=a	    \*******************************************************************
>************
  156=a	    \***                                                                
>         ***
  157=a	    \***      EXTERNAL FUNCTION DEFINITIONS FOR THE ITEM DESCRIPTION FIL
>E        ***
  158=a	    \***                                                                
>         ***
  159=a	    \***                       REFERENCE : IDFEXT.J86                   
>         ***
  160=a	    \***                                                                
>         ***
  161=a	    \***      Version A           Andrew Wedgeworth         9th July 199
>2        ***
  162=a	    \***
  163=a	    \***    VERSION C.              Robert Cowey.                       
>25 AUG 1993.
  164=a	    \***    No changes to this file.
  165=a	    \***
  166=a	    \***   VERSION D               Nik Sen                 22nd December
> 1994
  167=a	    \***   WRITE.IDF.HOLD added
  168=a	    \***
  169=a	    \*******************************************************************
>************
  170=a	    
  171=a	           FUNCTION IDF.SET EXTERNAL                                    
>  
  172=a	           END FUNCTION                                                 
>  
  173=a	    
  174=a	    
  175=a	           FUNCTION READ.IDF EXTERNAL                                   
>  
  176=a	              INTEGER*2 READ.IDF                                        
>  
  177=a	           END FUNCTION                                                 
>  
  178=a	    
  179=a	    
  180=a	           FUNCTION READ.IDF.LOCK EXTERNAL                              
>  
  181=a	              INTEGER*2 READ.IDF.LOCK                                   
>  
  182=a	           END FUNCTION                                                 
>  
  183=a	    
  184=a	           FUNCTION WRITE.IDF EXTERNAL
  185=a	              INTEGER*2 WRITE.IDF
  186=a	           END FUNCTION           
  187=a	    
  188=a	           FUNCTION WRITE.IDF.HOLD EXTERNAL
  189=a	              INTEGER*2 WRITE.IDF.HOLD
  190=a	           END FUNCTION
  191=a	    
  192=a	           FUNCTION WRITE.IDF.UNLOCK EXTERNAL                           
>       
  193=a	              INTEGER*2 WRITE.IDF.UNLOCK                                
>      
  194=a	           END FUNCTION                                                 
>  
  195: 	    %INCLUDE PSBF20E.J86
  196=a	    REM\
  197=a	    \*******************************************************************
>************
  198=a	    \*******************************************************************
>************
  199=a	    \***
  200=a	    \***       %INCLUDE FOR EXTERNAL DEFINITION OF SESS.NUM.UTILITY
  201=a	    \***
  202=a	    \***                  REFERENCE     : PSBF20E.J86
  203=a	    \***
  204=a	    \***     VERSION C            Janet Smith                13th May 19
>92
  205=a	    \***     Increased PASSED.INTEGER to 2 bytes to cater for more than
  206=a	    \***     128 files.
  207=a	    \***
  208=a	    \***     VERSION D.           Andrew Wedgeworth          1st July 19
>92
  209=a	    \***     Removal of redundant parameters and addition of SESS.NUM.UT
>ILITY
  210=a	    \***     as a variable.  This new variable contains the function's r
>eturn
  211=a	    \***     code.
  212=a	    \***
  213=a	    \*******************************************************************
>************
  214=a	    \*******************************************************************
>************
  215=a	    
  216=a	       FUNCTION SESS.NUM.UTILITY (FUNCTION.FLAG$,                       
>   \
  217=a	                                  PASSED.INTEGER%,                      
>   \
  218=a	                                  PASSED.STRING$)                       
>   \
  219=a	       EXTERNAL
  220=a	    
  221=a	       STRING    FUNCTION.FLAG$,                                        
>   \
  222=a	                 PASSED.STRING$
  223=a	       ! 3 variables removed from here                                  
>   ! CAW
  224=a	    
  225=a	    
  226=a	       INTEGER*2 SESS.NUM.UTILITY,                                      
>   \ CAW
  227=a	                 PASSED.INTEGER%                                        
>  ! CJAS
  228=a	    
  229=a	       END FUNCTION
  230=a	    
  231: 	    
  232: 	    
  233: 	    
  234: 	    ON ERROR GOTO ERROR.DETECTED
  235: 	    
  236: 	           GOSUB INITIALIZATION
  237: 	           GOSUB MAIN.PROGRAM
  238: 	           GOSUB TERMINATION
  239: 	    
  240: 	    STOP
  241: 	    
  242: 	    INITIALIZATION:
  243: 	    
  244: 	            CALL IDF.SET
  245: 	    
  246: 	            FUNCTION.FLAG$ EQ "O" 
*** error			  ^8
  247: 	    
  248: 	         PASSED.INTEGER% EQ IDF.REPORT.NUM% 
*** error		       ^8
  249: 	         PASSED.STRING$ EQ IDF.FILE.NAME$
*** error		      ^8
  250: 	         GOSUB CALL.F20.SESS.NUM.UTILITY
  251: 	         IDF.SESS.NUM% EQ F20.INTEGER.FILE.NO% 
  252: 	            
  253: 	    
  254: 	    RETURN
  255: 	    
  256: 	    CALL.F20.SESS.NUM.UTILITY: 
  257: 	            
  258: 	             FILE.OPERATION$ = FUNCTION.FLAG$
*** error			   ^8		    ^8
  259: 	             CURRENT.REPORT.NUM% = PASSED.INTEGER%
*** error			       ^8		 ^8
  260: 	             RC% = SESS.NUM.UTILITY (FUNCTION.FLAG$, PASSED.INTEGER%,   
>    \
*** error	       ^8				  ^8		   ^8
  261: 	                                     PASSED.STRING$)
*** error						  ^8
  262: 	             IF RC% <> 0 THEN GOTO ERROR.DETECTED
*** error		  ^8
  263: 	    
  264: 	    RETURN
  265: 	    
  266: 	    
  267: 	    
  268: 	    MAIN.PROGRAM:
  269: 	    
  270: 	           IF END #IDF.SESS.NUM% THEN NO.FILE
  271: 	           OPEN IDF.FILE.NAME$ KEYED RECL IDF.RECL% AS IDF.SESS.NUM% NOD
>EL
  272: 	    
  273: 	           CMD$ = COMMAND$
*** error	       ^8
  274: 	           
  275: 	           IF CMD$ = "" THEN BEGIN
*** error		  ^8
  276: 	           
  277: 	               PRINT " No parameter passed, please give 7 digit item cod
>e"
  278: 	                   
  279: 	        ENDIF ELSE BEGIN
  280: 	          
  281: 	             IDF.BOOTS.CODE$ = PACK$("0" + CMD$) 
*** error					       ^8
  282: 	             
  283: 	             RC% = READ.IDF
*** error		^8
  284: 	             
  285: 	             IF RC% = 0 THEN BEGIN
*** error		   ^8
  286: 	             
  287: 	                IDF.BIT.FLAGS.1% = IDF.BIT.FLAGS.1% AND 11011111b
  288: 	             RC% = WRITE.IDF 
*** error	       ^8
  289: 	    
  290: 	              
  291: 	    
  292: 	          ENDIF  
  293: 	              
  294: 	           ENDIF    
  295: 	    
  296: 	             IF RC% = 0 THEN BEGIN
*** error		  ^8
  297: 	    
  298: 	                PRINT "Item has been added, now restart stock support"
  299: 	             ENDIF                 
  300: 	          
  301: 	          
  302: 	    
  303: 	    RETURN
  304: 	    
  305: 	    
  306: 	    
  307: 	    
  308: 	    NO.FILE:
  309: 	    
  310: 	           PRINT " NO IDF FILE FOUND"
  311: 	    
  312: 	    RETURN
  313: 	    
  314: 	    
  315: 	    TERMINATION:
  316: 	    
  317: 	        FUNCTION.FLAG$ EQ "C"
*** error		     ^8
  318: 	           PASSED.INTEGER% EQ IDF.REPORT.NUM% 
*** error			  ^8
  319: 	        PASSED.STRING$ EQ IDF.FILE.NAME$
*** error		     ^8
  320: 	        GOSUB CALL.F20.SESS.NUM.UTILITY
  321: 	        UODOT.SESS.NUM% EQ F20.INTEGER.FILE.NO%
*** error		      ^8
  322: 	    
  323: 	           CLOSE IDF.SESS.NUM%
  324: 	    
  325: 	    RETURN
  326: 	    
  327: 	    
  328: 	    
  329: 	    ERROR.DETECTED:
  330: 	    
  331: 	    PRINT   "An Error Occurred "   + ERR   + STR$(ERRF%)   + STR$(ERRL)
  332: 	    
  333: 	    END
  334: 	    
  335: 	    
  336: 	    
End of Compilation
