   1: 0000: \********************************************************************
   2: 0000: \***      Space and Range Planogram database (SRSXF)
   3: 0000: \***      Version A           Neil Bennett          05.06.2006
   4: 0000: \***
   5: 0000: \....................................................................
   6: 0000: 
   7: 0000:   INTEGER*2 GLOBAL                   \
   8: 0000:       CURRENT.REPORT.NUM%
   9: 0000: 
  10: 0000:   STRING GLOBAL                      \
  11: 0000:       CURRENT.CODE$,                 \
  12: 0000:       FILE.OPERATION$
  13: 0000: 
  14: 0000:   %INCLUDE SRSXFDEC.J86
  15: 0000: \********************************************************************
  16: 0000: \***      EXTERNAL FUNCTION DECLARATIONS FOR THE SRSXF FILE
  17: 0000: \***      REFERENCE : SRSXFDEC.J86
  18: 0000: \***      Version A           Neil Bennett          7th August 2006
  19: 0000: \***
  20: 0000: \********************************************************************
  21: 0000: 
  22: 0000:   INTEGER*1 GLOBAL        \
  23: 0000:     SRSXF.MODULE.SEQ%,    \
  24: 0000:     SRSXF.SHELF.NO%,      \
  25: 0000:     SRSXF.NOTCH.NO%       !
  26: 0000: 
  27: 0000:   INTEGER*2 GLOBAL        \
  28: 0000:     SRSXF.SESS.NUM%,      \
  29: 0000:     SRSXF.REPORT.NUM%,    \
  30: 0000:     SRSXF.RECL%           !
  31: 0000: 
  32: 0000:   INTEGER*4 GLOBAL        \
  33: 0000:     SRSXF.POGDB%,         \
  34: 0000:     SRSXF.SHELF.KEY%      !
  35: 0000: 
  36: 0000:   STRING GLOBAL           \
  37: 0000:     SRSXF.FILE.NAME$,     \ File name
  38: 0000:     SRSXF.SHELF.DESC$,    \
  39: 0000:     SRSXF.FILLER$         !
  40: 0000: 
  41: 0000: 
  42: 0000: 
  43: 0000: \--------------------------------------------------------------------
  44: 0000: 
  45: 0000:   %INCLUDE BTCMEM.J86
  46: 0000: !********************************************************************
  47: 0000: !***
  48: 0000: !***    INCLUDED CODE:  BTCMEM.J86
  49: 0000: !***    AUTHOR:         Stuart William McConnachie
  50: 0000: !***    DATE:           26th February 2006
  51: 0000: !***
  52: 0000: !********************************************************************
  53: 0000: !***
  54: 0000: !***    Controller CBASIC Memory Functions
  55: 0000: !***
  56: 0000: !********************************************************************
  57: 0000: 
  58: 0000: !Get a single byte integer from a string offset
  59: 0000: FUNCTION GETN1 (S$, P%) EXTERNAL
  60: 0000:     STRING S$
  61: 0000:     INTEGER*2 P%
  62: 0000:     INTEGER*2 GETN1
  63: 0000: END FUNCTION
  64: 0000: 
  65: 0000: !Get a two byte integer from a string offset
  66: 0000: FUNCTION GETN2 (S$, P%) EXTERNAL
  67: 0000:     STRING S$
  68: 0000:     INTEGER*2 P%
  69: 0000:     INTEGER*2 GETN2
  70: 0000: END FUNCTION
  71: 0000: 
  72: 0000: !Get a four byte integer from a string offset
  73: 0000: FUNCTION GETN4 (S$, P%) EXTERNAL
  74: 0000:     STRING S$
  75: 0000:     INTEGER*2 P%
  76: 0000:     INTEGER*4 GETN4
  77: 0000: END FUNCTION
  78: 0000: 
  79: 0000: !Get a 10 byte CBASIC real from a string offset
  80: 0000: FUNCTION GETR10 (S$, P%) EXTERNAL
  81: 0000:     STRING S$
  82: 0000:     INTEGER*2 P%
  83: 0000:     REAL GETR10
  84: 0000: END FUNCTION
  85: 0000: 
  86: 0000: !Put a single byte integer into a string at offset
  87: 0000: FUNCTION PUTN1 (S$, P%, N%) EXTERNAL
  88: 0000:     STRING S$
  89: 0000:     INTEGER*2 P%
  90: 0000:     INTEGER*1 N%
  91: 0000:     INTEGER*1 PUTN1
  92: 0000: END FUNCTION
  93: 0000: 
  94: 0000: !Put a two byte integer into a string at offset
  95: 0000: FUNCTION PUTN2 (S$, P%, N%) EXTERNAL
  96: 0000:     STRING S$
  97: 0000:     INTEGER*2 P%
  98: 0000:     INTEGER*2 N%
  99: 0000:     INTEGER*1 PUTN2
 100: 0000: END FUNCTION
 101: 0000: 
 102: 0000: !Put a four byte integer into a string at offset
 103: 0000: FUNCTION PUTN4 (S$, P%, N%) EXTERNAL
 104: 0000:     STRING S$
 105: 0000:     INTEGER*2 P%
 106: 0000:     INTEGER*4 N%
 107: 0000:     INTEGER*1 PUTN4
 108: 0000: END FUNCTION
 109: 0000: 
 110: 0000: !Put a 10 byte CBASIC real into a string at offset
 111: 0000: FUNCTION PUTR10 (S$, P%, R) EXTERNAL
 112: 0000:     STRING S$
 113: 0000:     INTEGER*2 P%
 114: 0000:     REAL R
 115: 0000:     INTEGER*1 PUTR10
 116: 0000: END FUNCTION
 117: 0000: 
 118: 0000: !Peek a two byte integer from a memory address
 119: 0000: FUNCTION PEEKN2 (A%) EXTERNAL
 120: 0000:     INTEGER*4 A%
 121: 0000:     INTEGER*2 PEEKN2
 122: 0000: END FUNCTION
 123: 0000: 
 124: 0000: !Peek a four byte integer from a memory address
 125: 0000: FUNCTION PEEKN4 (A%) EXTERNAL
 126: 0000:     INTEGER*4 A%
 127: 0000:     INTEGER*4 PEEKN4
 128: 0000: END FUNCTION
 129: 0000: 
 130: 0000: !Peek a 10 byte CBASIC real from a memory address
 131: 0000: FUNCTION PEEKR10 (A%) EXTERNAL
 132: 0000:     INTEGER*4 A%
 133: 0000:     REAL PEEKR10
 134: 0000: END FUNCTION
 135: 0000: 
 136: 0000: !Poke a two byte integer to a memory address
 137: 0000: FUNCTION POKEN2 (A%, N%) EXTERNAL
 138: 0000:     INTEGER*4 A%
 139: 0000:     INTEGER*2 N%
 140: 0000:     INTEGER*1 POKEN2
 141: 0000: END FUNCTION
 142: 0000: 
 143: 0000: !Poke a four byte integer to a memory address
 144: 0000: FUNCTION POKEN4 (A%, N%) EXTERNAL
 145: 0000:     INTEGER*4 A%
 146: 0000:     INTEGER*4 N%
 147: 0000:     INTEGER*1 POKEN4
 148: 0000: END FUNCTION
 149: 0000: 
 150: 0000: !Poke a 10 byte CBASIC real to a memory address
 151: 0000: FUNCTION POKER10 (A%, R) EXTERNAL
 152: 0000:     INTEGER*4 A%
 153: 0000:     REAL R
 154: 0000:     INTEGER*1 POKER10
 155: 0000: END FUNCTION
 156: 0000: 
 157: 0000: 
 158: 0000: \--------------------------------------------------------------------
 159: 0000: 
 160: 0000:   FUNCTION BUILD.SRSXF.KEY$
 161: 0014: 
 162: 0014:    STRING   BUILD.SRSXF.KEY$
 163: 0014:    STRING   work$
 164: 0014: 
 165: 0014:    work$ = STRING$(6,CHR$(0))
 166: 002b: 
 167: 002b:    CALL PUTN4(work$, 0, SRSXF.POGDB%)
 168: 0048:    CALL PUTN1(work$, 4, SRSXF.MODULE.SEQ%)
 169: 0063:    CALL PUTN1(work$, 5, SRSXF.SHELF.NO%)
 170: 007e: 
 171: 007e:    BUILD.SRSXF.KEY$ = work$
 172: 0090:    work$ = ""
 173: 009d: 
 174: 009d:   END FUNCTION
 175: 00ae: 
 176: 00ae: \--------------------------------------------------------------------
 177: 00ae: 
 178: 00ae:   FUNCTION SRSXF.SET PUBLIC
 179: 00c2: 
 180: 00c2:    SRSXF.REPORT.NUM%   = 729
 181: 00cb:    SRSXF.RECL%         = 63
 182: 00d4:    SRSXF.FILE.NAME$    = "SRSXF"
 183: 00e3: 
 184: 00e3:   END FUNCTION
 185: 00ef: 
 186: 00ef: \--------------------------------------------------------------------
 187: 00ef: 
 188: 00ef:   FUNCTION READ.SRSXF PUBLIC
 189: 0103: 
 190: 0103:    INTEGER*2 READ.SRSXF
 191: 0103:    STRING    key$
 192: 0103: 
 193: 0103:    READ.SRSXF = 1
 194: 0108: 
 195: 0108:    IF END #SRSXF.SESS.NUM% THEN READ.SRSXF.ERROR
 196: 011c: 
 197: 011c:    key$ = BUILD.SRSXF.KEY$
 198: 0129: 
 199: 0129:    READ FORM "T7,I1,I4,C50,C2";                                     \
 200: 0179:           #SRSXF.SESS.NUM% KEY key$;                                \
 201: 0179:              SRSXF.NOTCH.NO%,                                       \
 202: 0179:              SRSXF.SHELF.KEY%,                                      \
 203: 0179:              SRSXF.SHELF.DESC$,                                     \
 204: 0179:              SRSXF.FILLER$
 205: 0179: 
 206: 0179:    READ.SRSXF = 0
 207: 017e:    EXIT FUNCTION
 208: 0180: 
 209: 0180: READ.SRSXF.ERROR:
 210: 0180: 
 211: 0180:    CURRENT.REPORT.NUM% = SRSXF.REPORT.NUM%
 212: 018e:    FILE.OPERATION$ = "R"
 213: 019d:    CURRENT.CODE$ = key$
 214: 01b0: 
 215: 01b0:   END FUNCTION
 216: 01bf: 
 217: 01bf: \--------------------------------------------------------------------
 218: 01bf: 
 219: 01bf:   FUNCTION WRITE.SRSXF PUBLIC
 220: 01d3: 
 221: 01d3:    INTEGER*2 WRITE.SRSXF
 222: 01d3:    STRING    key$
 223: 01d3: 
 224: 01d3:    WRITE.SRSXF = 1
 225: 01d8: 
 226: 01d8:    IF END #SRSXF.SESS.NUM% THEN WRITE.SRSXF.ERROR
 227: 01ec: 
 228: 01ec:    key$ = BUILD.SRSXF.KEY$
 229: 01f9: 
 230: 01f9:    WRITE FORM "C6,I1,I4,C50,C2";                                    \
 231: 0256:            #SRSXF.SESS.NUM%;                                        \
 232: 0256:              key$,                                                  \
 233: 0256:              SRSXF.NOTCH.NO%,                                       \
 234: 0256:              SRSXF.SHELF.KEY%,                                      \
 235: 0256:              SRSXF.SHELF.DESC$,                                     \
 236: 0256:              SRSXF.FILLER$
 237: 0256: 
 238: 0256:    WRITE.SRSXF = 0
 239: 025b:    EXIT FUNCTION
 240: 025d: 
 241: 025d: WRITE.SRSXF.ERROR:
 242: 025d: 
 243: 025d:    CURRENT.REPORT.NUM% = SRSXF.REPORT.NUM%
 244: 026b:    FILE.OPERATION$ = "W"
 245: 027a:    CURRENT.CODE$ = key$
 246: 028d: 
 247: 028d:   END FUNCTION
 248: 029c: 
 249: 029c: \--------------------------------------------------------------------
 250: 029c: 
 251: 029c:   FUNCTION DELREC.SRSXF PUBLIC
 252: 02b0: 
 253: 02b0:    INTEGER*2 DELREC.SRSXF
 254: 02b0:    STRING    key$
 255: 02b0: 
 256: 02b0:    DELREC.SRSXF = 1
 257: 02b5: 
 258: 02b5:    IF END #SRSXF.SESS.NUM% THEN DELREC.SRSXF.ERROR
 259: 02c9: 
 260: 02c9:    key$ = BUILD.SRSXF.KEY$
 261: 02d6: 
 262: 02d6:    DELREC SRSXF.SESS.NUM%; key$
 263: 02ea: 
 264: 02ea:    DELREC.SRSXF = 0
 265: 02ef:    EXIT FUNCTION
 266: 02f1: 
 267: 02f1: DELREC.SRSXF.ERROR:
 268: 02f1: 
 269: 02f1:    CURRENT.REPORT.NUM% = SRSXF.REPORT.NUM%
 270: 02ff:    FILE.OPERATION$ = "D"
 271: 030e:    CURRENT.CODE$ = key$
 272: 0321: 
 273: 0321:   END FUNCTION
 274: 0330: End of Compilation
