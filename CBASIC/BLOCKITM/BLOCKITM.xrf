
			    Symbol Table Information
     No Variables in Common:


Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

IDF.FILE.NAME$			 simple variable     string	 00000000h
	       98d,1565,1759
IDF.BOOTS.CODE$			 simple variable     string	 00000000h
	       99d,1350,1380m
IDF.FIRST.BAR.CODE$		 simple variable     string	 00000000h
	       100d,1414,1426
IDF.SECOND.BAR.CODE$		 simple variable     string	 00000000h
	       101d,1439,1457,1466
IDF.NO.OF.BAR.CODES$		 simple variable     string	 00000000h
	       102d,1384
IDF.PRODUCT.GRP$		 simple variable     string	 00000000h
	       103d
IDF.STNDRD.DESC$		 simple variable     string	 00000000h
	       105d
IDF.STATUS.1$			 simple variable     string	 00000000h
	       106d
IDF.INTRO.DATE$			 simple variable     string	 00000000h
	       107d
IDF.BSNS.CNTR$			 simple variable     string	 00000000h
	       108d
IDF.FILLER$			 simple variable     string	 00000000h
	       109d
IDF.PARENT.CODE$		 simple variable     string	 00000000h
	       110d
IDF.DATE.OF.LAST.SALE$		 simple variable     string	 00000000h
	       113d
IDF.BIT.FLAGS.1%		 simple variable     integer*1 	 00000000h
	       116d
IDF.BIT.FLAGS.2%		 simple variable     integer*1 	 00000000h
	       125d
IDF.RECL%			 simple variable     integer*2 	 00000000h
	       136d,1759
IDF.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       137d,1564,1757,1789,1906
IDF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       138d,1567m,1758,1759,1790
IEF.FILE.NAME$			 simple variable     string	 00000000h
	       158d,1570,1764
IEF.BOOTS.CODE.BAR.CODE$	 simple variable     string	 00000000h
	       159d
IEF.NEXT.BAR.CODE$		 simple variable     string	 00000000h
	       163d
IEF.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       166d,1569,1762,1792,1907
IEF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       167d,1572m,1763,1764,1793
IEF.RECL%			 simple variable     integer*2 	 00000000h
	       168d,1764
IRF.ALT.FILE.NAME$		 simple variable     string	 00000000h
	       363d
IRF.BAR.CODE$			 simple variable     string	 00000000h
	       364d,1102m
IRF.BOOTS.CODE$			 simple variable     string	 00000000h
	       365d,1157,1350m
IRF.DEAL.SAVING$		 simple variable     string	 00000000h
	       366d
IRF.DEPARTME$			 simple variable     string	 00000000h
	       367d
IRF.FILE.NAME$			 simple variable     string	 00000000h
	       368d,1352,1575,1769
IRF.HOLDING.PRICE$		 simple variable     string	 00000000h
	       369d
IRF.ITEMNAME$			 simple variable     string	 00000000h
	       371d
IRF.RECORD$			 simple variable     string	 00000000h
	       373d
IRF.SALEPRIC$			 simple variable     string	 00000000h
	       374d
IRF.SALEQUAN$			 simple variable     string	 00000000h
	       375d
IRF.UNUSED$			 simple variable     string	 00000000h
	       376d
NEW.IRF.DATA$			 simple variable     string	 00000000h
	       377d
IRF.DEAL.NUM$			 array(1)	     string	 00000000h
	       380d
IRF.DD.SUB%			 simple variable     integer*1 	 00000000h
	       383d
IRF.INDICAT0%			 simple variable     integer*1 	 00000000h
	       384d,1109m,1109,1114m,1114,1161m
IRF.INDICAT1%			 simple variable     integer*1 	 00000000h
	       385d
IRF.INDICAT2%			 simple variable     integer*1 	 00000000h
	       386d
IRF.INDICAT3%			 simple variable     integer*1 	 00000000h
	       387d
IRF.INDICAT4%			 simple variable     integer*1 	 00000000h
	       388d
IRF.INDICAT5%			 simple variable     integer*1 	 00000000h
	       389d
IRF.INDICAT8%			 simple variable     integer*1 	 00000000h
	       390d,1111m,1111,1116m,1116,1162m
IRF.INDICAT9%			 simple variable     integer*1 	 00000000h
	       391d
IRF.INDICAT10%			 simple variable     integer*1 	 00000000h
	       392d
IRF.LIST.ID%			 array(1)	     integer*1 	 00000000h
	       395d
IRF.ALT.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       398d
IRF.ALT.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       399d
IRF.POINTS%			 simple variable     integer*2 	 00000000h
	       400d
IRF.RECL%			 simple variable     integer*2 	 00000000h
	       401d,1769
IRF.REPORT.NUM%			 simple variable     integer*2 	 00000000h
	       402d,1353,1574,1767,1795,1908
IRF.SESS.NUM%			 simple variable     integer*2 	 00000000h
	       403d,1577m,1768,1769,1796
IRF.MAX.DEALS%			 simple variable     integer*2 	 00000000h
	       404d
IRFDEX.FILE.NAME$		 simple variable     string	 00000000h
	       406d
IRFDEX.SESS.NUM%		 simple variable     integer*2 	 00000000h
	       408d
IRFDEX.REPORT.NUM%		 simple variable     integer*2 	 00000000h
	       409d
IRFDEX.RECL%			 simple variable     integer*2 	 00000000h
	       410d
F01.RETURN.CODE%		 simple variable     integer*2 	 00000000h
	       432d
F11.ERROR.FLAG$			 simple variable     string	 00000000h
	       454d
F11.NEXT.BAR.CODE$		 simple variable     string	 00000000h
	       455d,1484,1489,1492,1498
F11.CURRENT.COUNT%		 simple variable     integer*2 	 00000000h
	       457d,1481m
F20.FILE.NAME$			 simple variable     string	 00000000h
	       481d,1732
F20.STRING.FILE.NO$		 simple variable     string	 00000000h
	       482d
F20.TABLE.DIMENSIONED.FLAG$	 simple variable     string	 00000000h
	       483d
SESS.NUM.TABLE$			 array(1)	     string	 00000000h
	       484d
F20.INTEGER.FILE.NO%		 simple variable     integer*2 	 00000000h
	       486d,1728,1731
CURRENT.CODE$			 simple variable     string	 00000000h
	       493d,1088m,1749m,1783m,1861
FILE.OPERATION$			 simple variable     string	 00000000h
	       494d,1086m,1750m,1784m,1858

Subprogram: ADXSERVE

	       586d,988,998

  NAME				  CLASS		      TYPE	  OFFSET

RETURN.CODE%			 parameter	     integer*4 	 00000000h
	       586d,597d
ADX.FUNCTION%			 parameter	     integer*2 	 00000004h
	       587d,594d
ADX.PARM.1%			 parameter	     integer*2 	 00000008h
	       588d,595d
ADX.PARM.2$			 parameter	     string	 0000000ch
	       589d,592d


Function: ERRNH returns string

	       610d,625m,1935

  NAME				  CLASS		      TYPE	  OFFSET

E$				 simple variable     string	 000000b9h
	       613d,618m,622m,622,625
I%				 simple variable     integer*2 	 000000bdh
	       615d,621,622
H%				 simple variable     integer*4 	 000000bfh
	       616d,619m,622
@ISTEP				 simple variable     integer*2 	 fffffffah


Function: IDF.SET returns real

	       645d,1278

Function: READ.IDF returns integer*2 

	       649d,1381

Function: READ.IDF.LOCK returns integer*2 

	       654d

Function: WRITE.IDF returns integer*2 

	       658d

Function: WRITE.IDF.HOLD returns integer*2 

	       662d

Function: WRITE.IDF.UNLOCK returns integer*2 

	       666d

Function: IEF.SET returns real

	       683d,1279

Function: READ.IEF returns integer*2 

	       686d

Function: WRITE.IEF returns integer*2 

	       690d

Function: IRF.SET returns real

	       745d,1280

Function: CONCAT.NEW.IRF.DATA$ returns string

	       748d

Function: SPLIT.NEW.IRF.DATA$ returns string

	       751d

Function: READ.IRF returns integer*2 

	       754d

Function: READ.IRF.ALT returns integer*2 

	       758d

Function: READ.IRF.LOCK returns integer*2 

	       762d,1104

Function: WRITE.IRF returns integer*2 

	       766d

Function: WRITE.IRF.UNLOCK returns integer*2 

	       770d,1119

Function: WRITE.IRF.HOLD returns integer*2 

	       774d

Function: WRITE.IRF.HOLD.UNLOCK returns integer*2 

	       778d

Function: APPLICATION.LOG returns integer*2 

	       802d,1839,1879

  NAME				  CLASS		      TYPE	  OFFSET

MESSAGE.NO%			 parameter	     integer*2 	 00000000h
	       802d,810d
VAR.STRING.1$			 parameter	     string	 00000002h
	       803d,812d
VAR.STRING.2$			 parameter	     string	 00000006h
	       804d,813d
EVENT.NO%			 parameter	     integer*1 	 0000000ah
	       805d,807d


Function: READ.NEXT.IEF returns integer*2 

	       858d,1466,1494

  NAME				  CLASS		      TYPE	  OFFSET

LAST.BAR.CODE$			 parameter	     string	 00000000h
	       858d,864d
TOTAL.COUNT%			 parameter	     integer*2 	 00000004h
	       859d,868d
BOOTS.CODE$			 parameter	     string	 00000006h
	       860d,863d


Function: SESS.NUM.UTILITY returns integer*2 

	       896d,1723

  NAME				  CLASS		      TYPE	  OFFSET

FUNCTION.FLAG$			 parameter	     string	 00000000h
	       896d,901d
PASSED.INTEGER%			 parameter	     integer*2 	 00000004h
	       897d,907d
PASSED.STRING$			 parameter	     string	 00000006h
	       898d,902d


Function: STANDARD.ERROR.DETECTED returns integer*2 

	       925d,1942

  NAME				  CLASS		      TYPE	  OFFSET

ERRN%				 parameter	     integer*4 	 00000000h
	       925d,936d
ERRFILE%			 parameter	     integer*2 	 00000004h
	       926d,932d
ERRL%				 parameter	     integer*2 	 00000006h
	       927d,933d
ERR$				 parameter	     string	 00000008h
	       928d,930d


Function: PROCESS.KEYED.FILE returns integer*2 

	       963d,1352

  NAME				  CLASS		      TYPE	  OFFSET

FILE.NAME$			 parameter	     string	 00000000h
	       963d,967d
REPORT.NUM%			 parameter	     integer*2 	 00000004h
	       964d,968d
READONLY$			 parameter	     string	 00000006h
	       965d,967d


Subprogram: DO.MESSAGE

	       982d,1122,1125,1136,1159,1240,1241,1242,1246,1247,1248,1249,
	       1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,
	       1262,1263,1264,1265,1266,1267,1317,1332,1349,1357,1385,1389,
	       1416,1441,1471,1499,1526,1533,1535,1536,1537,1539,1541,1544,
	       1561,1701,1703,1745,1781,1816,1835,1843,1909,1911,1939

  NAME				  CLASS		      TYPE	  OFFSET

MESG$				 parameter	     string	 00000000h
	       982d,985d,988,991,996,998,1002
STATUS%				 simple variable     integer*2 	 000000c3h
	       984d,987,990m,993m,995


Function: GETN1 returns integer*2 

	       1014d,1018m

  NAME				  CLASS		      TYPE	  OFFSET

S$				 parameter	     string	 00000000h
	       1014d,1016d,1018
OFFSET%				 parameter	     integer*2 	 00000004h
	       1014d,1017d,1018


Function: FORMAT.DATE$ returns string

	       1028d,1033m,1302,1530

  NAME				  CLASS		      TYPE	  OFFSET

FIELD$				 parameter	     string	 00000000h
	       1028d,1030d,1033,1034,1035


Function: FORMAT.TIME$ returns string

	       1046d,1052m,1303,1531

  NAME				  CLASS		      TYPE	  OFFSET

FIELD$				 parameter	     string	 00000000h
	       1046d,1048d,1052,1054


Function: READ.INPUT returns integer*2 

	       1069d,1073m,1080m,1338,1364

  NAME				  CLASS		      TYPE	  OFFSET

READ.ERROR			 label		     
	       1075,1084d


Subprogram: READ.AND.UPDATE.IRF

	       1100d,1165,1433,1453,1458,1490

Function: PROCESS.KEYED.RECORD$ returns string

	       1152d,1168m

  NAME				  CLASS		      TYPE	  OFFSET

RECORD$				 parameter	     string	 00000000h
	       1152d,1155d,1157,1159,1161,1162,1163,1168

Module-Global Variables:



  NAME				  CLASS		      TYPE	  OFFSET

TRUE				 simple variable     integer*1 	 00000000h
	       496d,1223m
FALSE				 simple variable     integer*1 	 00000001h
	       497d,1224m
EVENT.NUM%			 simple variable     integer*1 	 00000002h
	       498d,1836m,1842,1856m,1882
I%				 simple variable     integer*2 	 00000000h
	       500d
J%				 simple variable     integer*2 	 00000000h
	       501d
CURRENT.REPORT.NUM%		 simple variable     integer*2 	 00000003h
	       502d,1087m,1661m,1688m,1752m,1757m,1762m,1767m,1786m,1789m,
	       1792m,1795m,1798m,1801m,1859,1860,1906,1907,1908
DATE.FORMAT%			 simple variable     integer*2 	 00000000h
	       503d
ERROR.COUNT%			 simple variable     integer*2 	 00000005h
	       504d,1226m,1900m,1900,1902,1909,1911
ERR.REPORT.NUM%			 simple variable     integer*2 	 00000007h
	       505d,1599m,1600
ERR.SESS.NUM%			 simple variable     integer*2 	 00000009h
	       506d,1287,1603m,1633,1634,1635
EXPCTD.NO.CODES%		 simple variable     integer*2 	 0000000bh
	       507d,1379m,1384m,1386,1429,1437,1462,1467,1495
FAILED.STATUS%			 simple variable     integer*2 	 0000000dh
	       508d,1293m,1395m,1395,1399,1539,1540,1543
FAILED.ARRAY.MAX%		 simple variable     integer*2 	 0000000fh
	       509d,1295m,1297
INDEX%				 simple variable     integer*2 	 00000011h
	       510d,1482m,1498,1509m,1509
MESSAGE.NUMBER%			 simple variable     integer*2 	 00000013h
	       511d,1839,1879
BLOCKITM.SESS.NUM%		 simple variable     integer*2 	 00000015h
	       512d,1287m,1663,1666,1690,1693,1707
FAILED.ARRAY.INDEX%		 simple variable     integer*2 	 00000017h
	       513d,1296m,1400m,1400,1542m,1543,1544
INPUT.RECL%			 simple variable     integer*2 	 00000019h
	       514d,1227m,1754
INPUT.REPORT.NUM%		 simple variable     integer*2 	 0000001bh
	       515d,1087,1586m,1587,1752,1786
INPUT.SESS.NUM%			 simple variable     integer*2 	 0000001dh
	       516d,1075,1076,1334,1590m,1753,1754,1787
OK.REPORT.NUM%			 simple variable     integer*2 	 0000001fh
	       517d,1593m,1594
OK.SESS.NUM%			 simple variable     integer*2 	 00000021h
	       518d,1592m,1597m,1627,1628,1629
LOG.REPORT.NUM%			 simple variable     integer*2 	 00000023h
	       519d,1605m,1606,1798
LOG.SESS.NUM%			 simple variable     integer*2 	 00000025h
	       520d,1002,1305,1307,1609m,1639,1640,1641,1799
WRN.REPORT.NUM%			 simple variable     integer*2 	 00000027h
	       521d,1580m,1581,1801
WRN.SESS.NUM%			 simple variable     integer*2 	 00000029h
	       522d,1126,1137,1312,1314,1390,1417,1442,1472,1500,1584m,1645,
	       1646,1647,1802
SB.FILE.REP.NUM%		 simple variable     integer*2 	 0000002bh
	       523d,1731m
SB.FILE.SESS.NUM%		 simple variable     integer*2 	 0000002dh
	       524d,1567,1572,1577,1584,1590,1592,1597,1603,1609,1728m
SB.INTEGER%			 simple variable     integer*2 	 0000002fh
	       525d,1564m,1569m,1574m,1581m,1587m,1594m,1600m,1606m,1724
ADXSERVE.RET.CODE%		 simple variable     integer*4 	 00000031h
	       528d,988,989,998
ADX.RC%				 simple variable     integer*4 	 00000000h
	       529d
INPUT.REC.NO%			 simple variable     integer*4 	 00000035h
	       530d,1076,1122,1124,1135,1336m,1362m,1362,1385,1388,1415,
	       1440,1470,1498
RC%				 simple variable     integer*4 	 00000039h
	       531d,1104m,1106,1119m,1121,1338m,1340,1352m,1356,1364m,1381m,
	       1383,1466m,1469,1494m,1497,1698m,1700,1723m,1837,1839m,1879m,
	       1942m
ADXSERVE.DATA$			 simple variable     string	 00000000h
	       533d
ADX.DATA$			 simple variable     string	 00000000h
	       534d
BMESG$				 simple variable     string	 0000003dh
	       535d,1122,1271m,1273m
CMD.LINE$			 simple variable     string	 00000041h
	       536d,1107,1234m,1235m,1235,1239,1242,1245,1245,1272
COMM.MODE.FLAG$			 simple variable     string	 00000000h
	       537d
CURRENT.IEF.BAR.CODE$		 simple variable     string	 00000045h
	       538d,1492m,1494
ERROR.OVERRIDE.FLAG$		 simple variable     string	 00000049h
	       539d,1129m,1220m,1393m,1420m,1445m,1475m,1503m,1682
GENUINE.ERROR.FLAG$		 simple variable     string	 0000004dh
	       540d,1131m,1221m,1422m,1447m,1505m,1697
BLOCKITM.COMPLETION.MSG$	 simple variable     string	 00000051h
	       541d,1288m,1683m,1685m,1694
BLOCKITM.ERR.PATH$		 simple variable     string	 00000055h
	       542d,1285m,1286,1601,1634
BLOCKITM.INPUT.PATH$		 simple variable     string	 00000059h
	       543d,1290m,1588,1754
BLOCKITM.OK.PATH$		 simple variable     string	 0000005dh
	       544d,1284m,1595,1628,1698
BLOCKITM.LOG.PATH$		 simple variable     string	 00000061h
	       545d,1291m,1307,1607,1640
BLOCKITM.WRN.PATH$		 simple variable     string	 00000065h
	       546d,1292m,1314,1582,1646
BLOCKITM.PATH$			 simple variable     string	 00000069h
	       547d,1286m,1665,1698
FAILED.BOOTS.CODES$		 array(1)	     string	 0000006dh
	       548d,1297,1399m,1544
INPUT.FILLER$			 simple variable     string	 00000071h
	       549d,1078
INPUT.BOOTS.CODE$		 simple variable     string	 00000075h
	       550d,1077,1380,1385,1388,1399,1415,1440,1468,1470,1496
MSG$				 simple variable     string	 00000079h
	       551d,1124m,1125,1126,1135m,1136,1137,1388m,1389,1390,1415m,
	       1416,1417,1440m,1441,1442,1470m,1471,1472,1498m,1499,1500
MODULE$				 simple variable     string	 0000007dh
	       552d,1215m,1216
MODULE.NUMBER$			 simple variable     string	 00000081h
	       553d,1216m
NULL.BAR.CODE$			 simple variable     string	 00000085h
	       554d,1229m,1414,1439
PARAM$				 simple variable     string	 00000000h
	       555d
PROGRAM$			 simple variable     string	 00000089h
	       556d,1214m,1216
LOG.FILE.OPEN$			 simple variable     string	 0000008dh
	       557d,1001,1222m,1310m
RUN.DATE$			 simple variable     string	 00000091h
	       558d,1302m,1317,1530m,1535
RUN.TIME$			 simple variable     string	 00000095h
	       559d,1303m,1317,1531m,1535
SB.ACTION$			 simple variable     string	 00000099h
	       560d,1562m,1723,1727,1730
SB.STRING$			 simple variable     string	 0000009dh
	       561d,1565m,1570m,1575m,1582m,1588m,1595m,1601m,1607m,1725
SB.FILE.NAME$			 simple variable     string	 000000a1h
	       562d,1732m
SKIP.PAST.ITEM.DUE.TO.ERROR$	 simple variable     string	 000000a5h
	       563d,1130m,1342m,1346,1394m,1421m,1446m,1476m,1504m
UPD.BAR.CODE$			 simple variable     string	 000000a9h
	       564d,1102,1122,1124,1135,1163m,1426m,1457m,1489m
VAR.STRING.1$			 simple variable     string	 000000adh
	       565d,1837m,1840,1843,1858m,1880
VAR.STRING.2$			 simple variable     string	 000000b1h
	       566d,1838m,1841,1863m,1881
VERSION$			 simple variable     string	 000000b5h
	       567d,1218m,1240,1246,1317
ERROR.DETECTED			 label		     
	       1188,1898d
INITIALISATION			 label		     
	       1190,1211d
MAIN.PROCESSING			 label		     
	       1192,1330d
TERMINATION			 label		     
	       1194,1524d
ABORT.PROGRAM			 label		     
	       1196d,1268
@RDUMMY				 simple variable     real	 000000c5h
ALLOCATE.SESSION.NUMBERS	 label		     
	       1282,1559d
DELETE.COMPLETION.FILES		 label		     
	       1299,1625d
CREATE.COMPLETION.FILE		 label		     
	       1300,1659d
FILE.ERROR			 label		     
	       1305,1312,1334,1663,1690,1753,1758,1763,1768,1814d
OPEN.FILES			 label		     
	       1319,1743d
GET.NO.OF.BARCODES		 label		     
	       1344,1377d
TRAWL.THROUGH.ALL.ASSOCIATED.BA	 label		     
	       1347,1412d
PSBF30.ERROR			 label		     
	       1358,1833d
RENAME.COMPLETION.FILE		 label		     
	       1528,1677d
@ISTEP				 simple variable     integer*2 	 000000cfh
CLOSE.FILES			 label		     
	       1548,1779d
SB.FILE.UTILS			 label		     
	       1566,1571,1576,1583,1589,1596,1602,1608,1721d
BLOCKITM.OK.DELETED		 label		     
	       1627,1631d
BLOCKITM.ERR.DELETED		 label		     
	       1633,1637d
BLOCKITM.LOG.DELETED		 label		     
	       1639,1643d
BLOCKITM.WRN.DELETED		 label		     
	       1645,1649d
LOG.EVENT.106			 label		     
	       1818,1854d,1923
PROGRAM.ABEND			 label		     
	       1820,1932d
CALL.APPLICATION.LOG		 label		     
	       1864,1877d

