REM \
\******************************************************************************
\******************************************************************************
\***
\***         %INCLUDE FOR NEW INVOICES FILE VARIABLE DECLARATIONS
\***
\***               FILE TYPE    : Sequential
\***
\***               REFERENCE    : NEWIFDEC.J86
\***
\***   VERSION A          MICHAEL KELSALL                   19th October 1992
\***   Derived from NEWIFFLC.J86 and NEWIFNUC.J86
\***   Includes new CSR line flag attached to each invoice item.
\***
\***   VERSION B          LES COOK                         30th December 1992
\***   To include 2 new record types for UOD - master and item
\***
\***   VERSION C          NEIL BENNETT                     12th December 2006
\***   To include new record type for Cartons.
\***
\***   VERSION D          Neil Bennett                          30th May 2007
\***   Added support for record type 'R' - Add/Update Recall Record
\***                                 'V' - Remove Items from Recall Rcd (or all)
\***                                 'W' - Unblock Recall Items for sale
\***
\***   VERSION E          Stuart Highley                   18 July 2008
\***   To include new record type for UOD booking in.
\***
\***   REVISION 1.8.                ROBERT COWEY.                17 DEC 2009.
\***   Incorprated SSC3200.BAS variables associated with truncated NEWIF.
\***
\***   VERSION F              Sumitha Moorthy                 14/04/2015
\***   FOD - 431 Dallas Positive Receiving
\***   Changes as part of NEWIF file layout change, a new variable is
\***   added into the NEWIF.ITEM.DETAILS$ array.
\***
\******************************************************************************
\******************************************************************************

  STRING GLOBAL           \
    NEWIF.ACT.DATE$,      \  8 bytes ASCII                              !DNWB
    NEWIF.ACTION.MKR$,    \ 1 byte ASCII
    NEWIF.ALLOC.ON.SALE.DATE$,  \ 6 bytes ASCII
    NEWIF.ASN.CODE$,      \ 35 bytes ASCII                              !CNWB
    NEWIF.BATCH.NOS$,     \ 30 bytes ASCII                              !DNWB
    NEWIF.BOL.FLAG$,      \  1 byte  ASCII                              !ESH
    NEWIF.BOOTS.CODE$,    \ 7 bytes ASCIINEWIF.BUS.CENTRE
    NEWIF.BUS.CENTRE$,    \ 1 byte ASCII
    NEWIF.CARTON.NO$,     \  8 byte  ASCII                              !CNWB
    NEWIF.CHECK.QTY$,     \  4 bytes ASCII
    NEWIF.CRTN.IN.ASN$,   \  3 bytes ASCII                              !CNWB
    NEWIF.CSR.MKR$,       \ 1 byte ASCII, 'Y' for CSR line
    NEWIF.DALLAS.MKR$,    \ 1 byte Y = DALLAS invoice; Q = quantity alteration
    NEWIF.DATE$,          \ 6 byte (YYMMDD) date of last IDUF update
    NEWIF.DEL.DTTM$,      \ 12 bytes ASCII                              !CNWB
    NEWIF.DESPATCH.DATE$, \  6 bytes ASCII                              !ESH
    NEWIF.DET.FILLER.1$,  \ 3 bytes spaces
    NEWIF.DET.FILLER.2$,  \ 8 bytes spaces
    NEWIF.DISC.PERC$,     \  4 bytes ASCII
    NEWIF.DISC.QTY$,      \  4 bytes ASCII
    NEWIF.DIST.CENTRE$,   \ 2 bytes ASCII                               ! BLC
    NEWIF.ENDREC.MARKER$, \ 3 byte set to "CRLF (CHR$(34) + CHR$(13) + CHR$(10))
    NEWIF.EXP.DATE$,      \  8 bytes ASCII                              !DNWB
    NEWIF.EXP.DEL.DATE$,  \ 6 byte YYMMDD
    NEWIF.EXP.DELIV.DATE$,\ 6 bytes ASCII                               ! BLC
    NEWIF.FILE.NAME$,     \
                          \
    NEWIF.FLAG.TYPE$,     \  1 bytes ASCII                              !DNWB
    NEWIF.FLD.DELIMETER$, \ 1 byte ASCII set to " (CHR$(34))
    NEWIF.FOLIO.MONTH$,   \ 2 byte values 1 - 12
    NEWIF.FOLIO.NO$,      \ 5 bytes with leading zeroes
    NEWIF.FOLIO.NUM$,     \ 5 bytes ASCII                               ! BLC
    NEWIF.FOLIO.YEAR$,    \ 2 bytes values 00 - 99
    NEWIF.FSI$,           \ 1 bytes
    NEWIF.HDR.FILLER$,    \ 5 bytes filler                              ! ESH
    NEWIF.HIER.LVL$,      \  1 byte  ASCII                              !ESH
    NEWIF.INSYST.FLAG$,   \ 1 byte Y = In stock system; N = Not in stock system
    NEWIF.INVCE.DATE$,    \ 6 byte YYMMDD
    NEWIF.INVCE.TYPE$,    \ 1 byte P = Pre-processed
    NEWIF.ITEM.CODE$,     \ 7 bytes ASCII                               ! BLC
    NEWIF.ITEM.COUNT$,    \ 2 bytes values 1 - 17
    NEWIF.ITEM.DETAILS$(2),\ 27 bytes string containing the repeated item
                          \ details. The first dimension has a variable
                          \ no of elements from 1 to 17 incl. The second
                          \ dimension has 6 elements:                   !FSM
                          \ 1. Boots Code
                          \ 2. Price
                          \ 3. Qty
                          \ 4. CSR marker
                          \ 5. UOD number                               !FSM
                          \ 6. Filler                                   !FSM
    NEWIF.ITEM.QTY$(1),   \  3 bytes ASCII                              !CNWB
    NEWIF.ITM.CODE$(1),   \  7 bytes ASCII                              !CNWB
    NEWIF.ITMS.IN.CRTN$,  \  3 bytes ASCII                              !CNWB
    NEWIF.LAPSING.DAYS$,  \ 3 bytes ASCII
    NEWIF.LEAD.TIME.FRI$, \ 3 bytes ASCII
    NEWIF.LEAD.TIME.MON$, \ 3 bytes ASCII
    NEWIF.LEAD.TIME.THU$, \ 3 bytes ASCII
    NEWIF.LEAD.TIME.TUE$, \ 3 bytes ASCII
    NEWIF.LEAD.TIME.WED$, \ 3 bytes ASCII
    NEWIF.LICENCE$,       \ 10 bytes ASCII                              !ESH
    NEWIF.MAX.CHECK.QTY$, \  4 bytes ASCII
    NEWIF.NUM.CHILDREN$,  \  3 bytes ASCII                              !ESH
    NEWIF.NUM.ITEM$,      \ 4 bytes ASCII                               ! BLC
    NEWIF.NUM.ITEMS$,     \  4 bytes ASCII                              !DNWB
    NEWIF.OCCUR.NUMBER$,  \ 4 bytes ASCII                               ! BLC
    NEWIF.ORDER.DATE$,    \ 6 bytes ASCII
    NEWIF.ORDER.FILLER1$, \ 5 bytes spaces
    NEWIF.ORDER.ITEM.CNT$,      \ 3 bytes ASCII
    NEWIF.ORDER.ITEM.DETAILS$(2), \ 27 bytes string containing the
                          \ repeated item details. The first dimension
                          \ has a variable no of elements from 1 to 16
                          \ incl. The second dimension has 5 elements:
                          \ 1. Boots code
                          \ 2. Price
                          \ 3. Qty
                          \ 4. CSR marker
                          \ 5. Filler
    NEWIF.ORDER.NO$,      \ 5 bytes ASCII
    NEWIF.ORDER.SUF$,     \ 1 byte ASCII
    NEWIF.ORDER.SUFFIX$,  \ 1 byte ASCII
    NEWIF.PAGE.NO$,       \ 3 bytes ASCII
    NEWIF.PARENT.LICENCE$,\ 10 bytes ASCII                              !ESH
    NEWIF.PART.ORDER.RULES$,  \ 1 byte ASCII
    NEWIF.PRICE$,         \ 7 bytes ASCII in pence with leading zeroes
    NEWIF.QTY$,           \ 4 bytes ASCII in singles with leading zeroes
    NEWIF.QUANTITY$,      \ 4 bytes ASCII                               ! BLC
    NEWIF.RCL.DESC$,      \ 20 bytes ASCII                              !DNWB
    NEWIF.RCL.LABEL$,     \  2 bytes ASCII                              !DNWB
    NEWIF.RCL.RC$,        \  2 bytes ASCII                              !DNWB
    NEWIF.RCL.REF$,       \  8 bytes ASCII                              !DNWB
    NEWIF.RCL.SI.1$,      \ 80 bytes ASCII                              !DNWB
    NEWIF.RCL.SI.2$,      \ 80 bytes ASCII                              !DNWB
    NEWIF.REC.COUNT$,     \ 5 bytes with leading zeroes
    NEWIF.REC.TYPE$,      \ 1 bytes ASCII H = Header
                          \               D = Detail
                          \               T = Trailer
                          \               U or Q = UOD master record
                          \               I or A = UOD item record
    NEWIF.RECORD$,        \ whole record variable length
    NEWIF.SERIAL.NO$,     \ 5 bytes
    NEWIF.STORE.NO$,      \ 4 bytes
    NEWIF.STORE.SFX$,     \  1 byte  ASCII                              !ESH
    NEWIF.STORE.SUF$,     \ 1 byte
    NEWIF.STORE.SUFFIX$,  \ 1 byte ASCII                                ! BLC
    NEWIF.SUPP.ROUTE$,    \  1 bytes ASCII                              !DNWB
    NEWIF.SUPPLIER.NAME$, \ 10 bytes ASCII
    NEWIF.SUPPLIER.NO$,   \ 7 bytes ASCII
    NEWIF.SUPPLIER.NO.PKD$, \ 3 bytes UPD
    NEWIF.SUPREF.FILLER$, \  6 bytes spaces
    NEWIF.TRL.FILLER$,    \ 10 bytes spaces
    NEWIF.UOD.ACTION$,    \  1 byte  ASCII                              !ESH
    NEWIF.UOD.BATCH.SIZE$,\ 3 bytes. Num of UODs to book in before      ! ESH
                          \ prompt for driver badge                     ! ESH
    NEWIF.UOD.CATEGORY$,  \  1 byte  ASCII                              !ESH
    NEWIF.UOD.ITEM.FILLER$,\ 3 bytes ASCII                              ! BLC
    NEWIF.UOD.MAS.FILLER$,\ 4 bytes ASCII                               ! BLC
    NEWIF.UOD.NIGHT.DELIV$,\ 1 byte. Night delivery store. Y or N.      ! ESH
    NEWIF.UOD.NIGHT.SCAN$,\ 1 byte. Driver scans at night. Y or N.      ! ESH
    NEWIF.UOD.NUMBER$,    \ 6 bytes ASCII                               ! BLC
    NEWIF.UOD.REASON$,    \  1 byte  ASCII                              !ESH
    NEWIF.UOD.TYPE$,      \ 1 byte ASCII                                ! BLC
    NEWIF.UOD.WHAREA$,    \  3 bytes ASCII                              !ESH
    NEWIF.WAREHOUSE.NUM$, \ 2 bytes ASCII                               ! BLC
    NEWIF.WHOUSE.AREA$    ! 3 bytes

  STRING GLOBAL \                                                      ! 1.8 RC
    NEWIF.TRUNC.FILE.NAME$, \                                          ! 1.8 RC
    NEWIF.TRUNC.REC.TYPE$                                              ! 1.8 RC

  INTEGER*2 GLOBAL           \
    NEWIF.CNT%,              \
    NEWIF.INDEX%,            \
                             \
    NEWIF.SESS.NUM%,         \
    NEWIF.REPORT.NUM%

  INTEGER*2 GLOBAL \                                                   ! 1.8 RC
    NEWIF.TRUNC.RECL%, \                                               ! 1.8 RC
    NEWIF.TRUNC.REPORT.NUM%, \                                         ! 1.8 RC
    NEWIF.TRUNC.SESS.NUM%                                              ! 1.8 RC

  INTEGER*4  GLOBAL \                                                  ! 1.8 RC
    NEWIF.TRUNC.REC.NUM%                                               ! 1.8 RC

