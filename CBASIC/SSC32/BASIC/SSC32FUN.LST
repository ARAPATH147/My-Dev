   1: 0000: \/******************************************************************/
   2: 0000: \/*                                                                */
   3: 0000: \/* SSC32 Log File Functions                                       */
   4: 0000: \/*                                                                */
   5: 0000: \/* REFERENCE   : SSC32FUN.BAS                                     */
   6: 0000: \/*                                                                */
   7: 0000: \/* VERSION A.          Stuart Highley          11 July 2008       */
   8: 0000: \/                                                                 */
   9: 0000: \/******************************************************************/
  10: 0000: 
  11: 0000:     INTEGER*2 GLOBAL CURRENT.REPORT.NUM%
  12: 0000: 
  13: 0000:     STRING GLOBAL    CURRENT.CODE$,                                 \
  14: 0000:                      FILE.OPERATION$
  15: 0000: 
  16: 0000:     %INCLUDE SSC32DEC.J86
  17: 0000: \/******************************************************************/
  18: 0000: \/*                                                                */
  19: 0000: \/* UOD Outers FILE GLOBAl VARIABLE DECLARATIONS                   */
  20: 0000: \/*                                                                */
  21: 0000: \/* REFERENCE   : SSC32DEC.J86                                     */
  22: 0000: \/*                                                                */
  23: 0000: \/* VERSION A.          Stuart Highley              14 July 2008   */
  24: 0000: \/*                                                                */
  25: 0000: \/******************************************************************/
  26: 0000: 
  27: 0000:    STRING GLOBAL                \
  28: 0000:       SSC32.FILE.NAME$,         \
  29: 0000:       SSC32.REC$
  30: 0000: 
  31: 0000:    INTEGER*2 GLOBAL             \
  32: 0000:       SSC32.REPORT.NUM%,        \
  33: 0000:       SSC32.SESS.NUM%
  34: 0000: 
  35: 0000: \/******************************************************************/
  36: 0000: 
  37: 0000:     %INCLUDE BTCMEM.J86
  38: 0000: !********************************************************************
  39: 0000: !***
  40: 0000: !***    INCLUDED CODE:  BTCMEM.J86
  41: 0000: !***    AUTHOR:         Stuart William McConnachie
  42: 0000: !***    DATE:           26th February 2006
  43: 0000: !***
  44: 0000: !********************************************************************
  45: 0000: !***
  46: 0000: !***    Controller CBASIC Memory Functions
  47: 0000: !***
  48: 0000: !********************************************************************
  49: 0000: 
  50: 0000: !Get a single byte integer from a string offset
  51: 0000: FUNCTION GETN1 (S$, P%) EXTERNAL
  52: 0000:     STRING S$
  53: 0000:     INTEGER*2 P%
  54: 0000:     INTEGER*2 GETN1
  55: 0000: END FUNCTION
  56: 0000: 
  57: 0000: !Get a two byte integer from a string offset
  58: 0000: FUNCTION GETN2 (S$, P%) EXTERNAL
  59: 0000:     STRING S$
  60: 0000:     INTEGER*2 P%
  61: 0000:     INTEGER*2 GETN2
  62: 0000: END FUNCTION
  63: 0000: 
  64: 0000: !Get a four byte integer from a string offset
  65: 0000: FUNCTION GETN4 (S$, P%) EXTERNAL
  66: 0000:     STRING S$
  67: 0000:     INTEGER*2 P%
  68: 0000:     INTEGER*4 GETN4
  69: 0000: END FUNCTION
  70: 0000: 
  71: 0000: !Get a 10 byte CBASIC real from a string offset
  72: 0000: FUNCTION GETR10 (S$, P%) EXTERNAL
  73: 0000:     STRING S$
  74: 0000:     INTEGER*2 P%
  75: 0000:     REAL GETR10
  76: 0000: END FUNCTION
  77: 0000: 
  78: 0000: !Put a single byte integer into a string at offset
  79: 0000: FUNCTION PUTN1 (S$, P%, N%) EXTERNAL
  80: 0000:     STRING S$
  81: 0000:     INTEGER*2 P%
  82: 0000:     INTEGER*1 N%
  83: 0000:     INTEGER*1 PUTN1
  84: 0000: END FUNCTION
  85: 0000: 
  86: 0000: !Put a two byte integer into a string at offset
  87: 0000: FUNCTION PUTN2 (S$, P%, N%) EXTERNAL
  88: 0000:     STRING S$
  89: 0000:     INTEGER*2 P%
  90: 0000:     INTEGER*2 N%
  91: 0000:     INTEGER*1 PUTN2
  92: 0000: END FUNCTION
  93: 0000: 
  94: 0000: !Put a four byte integer into a string at offset
  95: 0000: FUNCTION PUTN4 (S$, P%, N%) EXTERNAL
  96: 0000:     STRING S$
  97: 0000:     INTEGER*2 P%
  98: 0000:     INTEGER*4 N%
  99: 0000:     INTEGER*1 PUTN4
 100: 0000: END FUNCTION
 101: 0000: 
 102: 0000: !Put a 10 byte CBASIC real into a string at offset
 103: 0000: FUNCTION PUTR10 (S$, P%, R) EXTERNAL
 104: 0000:     STRING S$
 105: 0000:     INTEGER*2 P%
 106: 0000:     REAL R
 107: 0000:     INTEGER*1 PUTR10
 108: 0000: END FUNCTION
 109: 0000: 
 110: 0000: !Peek a two byte integer from a memory address
 111: 0000: FUNCTION PEEKN2 (A%) EXTERNAL
 112: 0000:     INTEGER*4 A%
 113: 0000:     INTEGER*2 PEEKN2
 114: 0000: END FUNCTION
 115: 0000: 
 116: 0000: !Peek a four byte integer from a memory address
 117: 0000: FUNCTION PEEKN4 (A%) EXTERNAL
 118: 0000:     INTEGER*4 A%
 119: 0000:     INTEGER*4 PEEKN4
 120: 0000: END FUNCTION
 121: 0000: 
 122: 0000: !Peek a 10 byte CBASIC real from a memory address
 123: 0000: FUNCTION PEEKR10 (A%) EXTERNAL
 124: 0000:     INTEGER*4 A%
 125: 0000:     REAL PEEKR10
 126: 0000: END FUNCTION
 127: 0000: 
 128: 0000: !Poke a two byte integer to a memory address
 129: 0000: FUNCTION POKEN2 (A%, N%) EXTERNAL
 130: 0000:     INTEGER*4 A%
 131: 0000:     INTEGER*2 N%
 132: 0000:     INTEGER*1 POKEN2
 133: 0000: END FUNCTION
 134: 0000: 
 135: 0000: !Poke a four byte integer to a memory address
 136: 0000: FUNCTION POKEN4 (A%, N%) EXTERNAL
 137: 0000:     INTEGER*4 A%
 138: 0000:     INTEGER*4 N%
 139: 0000:     INTEGER*1 POKEN4
 140: 0000: END FUNCTION
 141: 0000: 
 142: 0000: !Poke a 10 byte CBASIC real to a memory address
 143: 0000: FUNCTION POKER10 (A%, R) EXTERNAL
 144: 0000:     INTEGER*4 A%
 145: 0000:     REAL R
 146: 0000:     INTEGER*1 POKER10
 147: 0000: END FUNCTION
 148: 0000: 
 149: 0000: 
 150: 0000: \/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
 151: 0000: \/* FUNCTION SSC32.SET                                             */
 152: 0000: \/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
 153: 0000: 
 154: 0000:     FUNCTION SSC32.SET PUBLIC
 155: 0014: 
 156: 0014:         INTEGER*1 SSC32.SET
 157: 0014: 
 158: 0014:         SSC32.REPORT.NUM% = 771
 159: 001d:         SSC32.FILE.NAME$  = "SSC32:"
 160: 002c: 
 161: 002c:     END FUNCTION
 162: 003b: 
 163: 003b: \/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
 164: 003b: \/* FUNCTION READ.SSC32                                            */
 165: 003b: \/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
 166: 003b: 
 167: 003b:     FUNCTION READ.SSC32 PUBLIC
 168: 004f: 
 169: 004f:         INTEGER*2 READ.SSC32
 170: 004f: 
 171: 004f:         READ.SSC32 = 1
 172: 0054:         IF END #SSC32.SESS.NUM% THEN READ.ERROR
 173: 0068:         READ #SSC32.SESS.NUM%; LINE SSC32.REC$
 174: 0081:         READ.SSC32 = 0
 175: 0086:         EXIT FUNCTION
 176: 0088: 
 177: 0088: READ.ERROR:
 178: 0088: 
 179: 0088:         FILE.OPERATION$     = "R"
 180: 0097:         CURRENT.REPORT.NUM% = SSC32.REPORT.NUM%
 181: 00a5:         CURRENT.CODE$       = ""
 182: 00b4: 
 183: 00b4:     END FUNCTION
 184: 00c3: 
 185: 00c3: \/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
 186: 00c3: \/* FUNCTION WRITE.SSC32                                           */
 187: 00c3: \/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
 188: 00c3: 
 189: 00c3:     FUNCTION WRITE.SSC32 PUBLIC
 190: 00d7: 
 191: 00d7:         INTEGER*2 WRITE.SSC32
 192: 00d7: 
 193: 00d7:         WRITE.SSC32 = 1
 194: 00dc:         IF END #SSC32.SESS.NUM% THEN WRITE.ERROR
 195: 00f0:         PRINT USING "&"; #SSC32.SESS.NUM%; SSC32.REC$
 196: 0117:         WRITE.SSC32 = 0
 197: 011c:         EXIT FUNCTION
 198: 011e: 
 199: 011e: WRITE.ERROR:
 200: 011e: 
 201: 011e:         FILE.OPERATION$ = "W"
 202: 012d:         CURRENT.REPORT.NUM% = SSC32.REPORT.NUM%
 203: 013b:         CURRENT.CODE$ = ""
 204: 014a: 
 205: 014a:     END FUNCTION
 206: 0159: 
 207: 0159: \/******************************************************************/
 208: 0159: 
 209: 0159: End of Compilation
