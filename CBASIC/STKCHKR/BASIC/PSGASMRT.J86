!**********************************************************************!
!* MODULE:  PSGASMRT.J86            Assembler sub routine definitions *!
!*                                                                    *!
!* PRODUCT: IBM 4690 EPS/GSA Ver 6 Rel 1                          AHM *!
!*                                                            01Sep89 *!
!*                                                                    *!
!* THIS MODULE IS "RESTRICTED MATERIALS OF IBM".                      *!
!* 5799-TYG (C) COPYRIGHT IBM CORP. 1989, 2007.                       *!
!* LICENSED MATERIALS - PROPERTY OF IBM.                              *!
!* SEE COPYRIGHT INSTRUCTIONS, G120-2083.                             *!
!*                                                                    *!
!* DESCRIPTION: These definitions should be included by any module    *!
!*              which wishes to use the performance enhanced          *!
!*              assembler routines.                                   *!
!*                                                                    *!
!* CALLED BY  :                                                       *!
!*                                                                    *!
!* CHANGE HISTORY :                                                   *!
!*                                                                    *!
!* ------------------------------------------------------------------ *!
!*  The above changes were migrated from EPS/GSA Version 1, 5786-EKL. *!
!* ------------------------------------------------------------------ *!
!*                                                                    *!
!**********************************************************************!

!*********************************************************************
!
! SUBSTR
!
! This routine performs a merge of two strings. String P3$, offset P4
! is merged into string P1$ offset P2 for a length of P5 bytes
!
! CAUTION: P1$ must be long enough to totally contain P3$
!
!*********************************************************************

 FUNCTION SUBSTR(p1$,p2,p3$,p4,p5) EXTERNAL
 STRING p1$,p3$
 INTEGER*2 p2,p4,p5
 END FUNCTION

!*********************************************************************
!
! GETN2/GETN4
!
! These routines extract a two/four byte integer from a string.
! P2 is the offset within the string
!
!*********************************************************************

 FUNCTION GETN2(p1$,p2) EXTERNAL
 INTEGER*2 GETN2
 STRING p1$
 INTEGER*2 p2
 END FUNCTION

 FUNCTION GETN4(p1$,p2) EXTERNAL
 INTEGER*4 GETN4
 STRING p1$
 INTEGER*2 p2
 END FUNCTION

!*********************************************************************
!
! PUTN2/PUTN4
!
! These routines insert a two/four byte integer into a string.
! P2 is the offset within the string and P3 is the source integer
!
!*********************************************************************

 FUNCTION PUTN2(p1$,p2,p3) EXTERNAL
 STRING p1$
 INTEGER*2 p2,p3
 END FUNCTION

 FUNCTION PUTN4(p1$,p2,p3) EXTERNAL
 STRING p1$
 INTEGER*2 p2
 INTEGER*4 p3
 END FUNCTION

!*********************************************************************
!
! PACKBIN2/4
!
! These routines take a packed decimal string and convert to integer
! (The equivalent of CBASIC INT%(VAL(UNPACK$())) )
! P1 is the source string, P2 the string offset and P3 the length
!
!*********************************************************************

 FUNCTION PACKBIN2(p1$,p2,p3) EXTERNAL
 INTEGER*2 PACKBIN2
 STRING p1$
 INTEGER*2 p2,p3
 END FUNCTION

 FUNCTION PACKBIN4(p1$,p2,p3) EXTERNAL
 INTEGER*4 PACKBIN4
 STRING p1$
 INTEGER*2 p2,p3
 END FUNCTION
